package nl.tudelft.jpacman.board;

import org.junit.jupiter.api.TestMethodOrder;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.MethodOrderer;

@TestMethodOrder(MethodOrderer.MethodName.class)
public class RegressionTest0 {

    public static boolean debug = false;

    public void assertBooleanArrayEquals(boolean[] expectedArray, boolean[] actualArray) {
        if (expectedArray.length != actualArray.length) {
            throw new AssertionError("Array lengths differ: " + expectedArray.length + " != " + actualArray.length);
        }
        for (int i = 0; i < expectedArray.length; i++) {
            if (expectedArray[i] != actualArray[i]) {
                throw new AssertionError("Arrays differ at index " + i + ": " + expectedArray[i] + " != " + actualArray[i]);
            }
        }
    }

    @Test
    public void test01() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test01");
        nl.tudelft.jpacman.sprite.PacManSprites pacManSprites0 = null;
        nl.tudelft.jpacman.board.BoardFactory boardFactory1 = new nl.tudelft.jpacman.board.BoardFactory(pacManSprites0);
        // The following exception was thrown during execution in test generation
        try {
            nl.tudelft.jpacman.board.Square square2 = boardFactory1.createWall();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"nl.tudelft.jpacman.sprite.PacManSprites.getWallSprite()\" because \"this.sprites\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test02() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test02");
        nl.tudelft.jpacman.sprite.PacManSprites pacManSprites0 = null;
        nl.tudelft.jpacman.board.BoardFactory boardFactory1 = new nl.tudelft.jpacman.board.BoardFactory(pacManSprites0);
        // The following exception was thrown during execution in test generation
        try {
            nl.tudelft.jpacman.board.Square square2 = boardFactory1.createGround();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"nl.tudelft.jpacman.sprite.PacManSprites.getGroundSprite()\" because \"this.sprites\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test03() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test03");
        nl.tudelft.jpacman.sprite.PacManSprites pacManSprites0 = null;
        nl.tudelft.jpacman.board.BoardFactory boardFactory1 = new nl.tudelft.jpacman.board.BoardFactory(pacManSprites0);
        java.lang.Class<?> wildcardClass2 = boardFactory1.getClass();
        org.junit.Assert.assertNotNull(wildcardClass2);
    }

    @Test
    public void test04() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test04");
        nl.tudelft.jpacman.sprite.PacManSprites pacManSprites0 = null;
        nl.tudelft.jpacman.board.BoardFactory boardFactory1 = new nl.tudelft.jpacman.board.BoardFactory(pacManSprites0);
        nl.tudelft.jpacman.board.Square[] squareArray2 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray3 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray4 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[][] squareArray5 = new nl.tudelft.jpacman.board.Square[][] { squareArray2, squareArray3, squareArray4 };
        nl.tudelft.jpacman.board.Board board6 = boardFactory1.createBoard(squareArray5);
        // The following exception was thrown during execution in test generation
        try {
            nl.tudelft.jpacman.board.Square square7 = boardFactory1.createGround();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"nl.tudelft.jpacman.sprite.PacManSprites.getGroundSprite()\" because \"this.sprites\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(squareArray2);
        org.junit.Assert.assertArrayEquals(squareArray2, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray3);
        org.junit.Assert.assertArrayEquals(squareArray3, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray4);
        org.junit.Assert.assertArrayEquals(squareArray4, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray5);
        org.junit.Assert.assertNotNull(board6);
    }

    @Test
    public void test05() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test05");
        nl.tudelft.jpacman.sprite.PacManSprites pacManSprites0 = null;
        nl.tudelft.jpacman.board.BoardFactory boardFactory1 = new nl.tudelft.jpacman.board.BoardFactory(pacManSprites0);
        nl.tudelft.jpacman.board.Square[] squareArray2 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray3 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray4 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[][] squareArray5 = new nl.tudelft.jpacman.board.Square[][] { squareArray2, squareArray3, squareArray4 };
        nl.tudelft.jpacman.board.Board board6 = boardFactory1.createBoard(squareArray5);
        nl.tudelft.jpacman.sprite.PacManSprites pacManSprites7 = null;
        nl.tudelft.jpacman.board.BoardFactory boardFactory8 = new nl.tudelft.jpacman.board.BoardFactory(pacManSprites7);
        nl.tudelft.jpacman.board.Square[] squareArray9 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray10 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray11 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[][] squareArray12 = new nl.tudelft.jpacman.board.Square[][] { squareArray9, squareArray10, squareArray11 };
        nl.tudelft.jpacman.board.Board board13 = boardFactory8.createBoard(squareArray12);
        nl.tudelft.jpacman.sprite.PacManSprites pacManSprites14 = null;
        nl.tudelft.jpacman.board.BoardFactory boardFactory15 = new nl.tudelft.jpacman.board.BoardFactory(pacManSprites14);
        nl.tudelft.jpacman.board.Square[] squareArray16 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray17 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray18 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[][] squareArray19 = new nl.tudelft.jpacman.board.Square[][] { squareArray16, squareArray17, squareArray18 };
        nl.tudelft.jpacman.board.Board board20 = boardFactory15.createBoard(squareArray19);
        nl.tudelft.jpacman.board.Board board21 = boardFactory8.createBoard(squareArray19);
        nl.tudelft.jpacman.board.Board board22 = boardFactory1.createBoard(squareArray19);
        // The following exception was thrown during execution in test generation
        try {
            nl.tudelft.jpacman.board.Square square23 = boardFactory1.createWall();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"nl.tudelft.jpacman.sprite.PacManSprites.getWallSprite()\" because \"this.sprites\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(squareArray2);
        org.junit.Assert.assertArrayEquals(squareArray2, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray3);
        org.junit.Assert.assertArrayEquals(squareArray3, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray4);
        org.junit.Assert.assertArrayEquals(squareArray4, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray5);
        org.junit.Assert.assertNotNull(board6);
        org.junit.Assert.assertNotNull(squareArray9);
        org.junit.Assert.assertArrayEquals(squareArray9, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray10);
        org.junit.Assert.assertArrayEquals(squareArray10, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray11);
        org.junit.Assert.assertArrayEquals(squareArray11, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray12);
        org.junit.Assert.assertNotNull(board13);
        org.junit.Assert.assertNotNull(squareArray16);
        org.junit.Assert.assertArrayEquals(squareArray16, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray17);
        org.junit.Assert.assertArrayEquals(squareArray17, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray18);
        org.junit.Assert.assertArrayEquals(squareArray18, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray19);
        org.junit.Assert.assertNotNull(board20);
        org.junit.Assert.assertNotNull(board21);
        org.junit.Assert.assertNotNull(board22);
    }

    @Test
    public void test06() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test06");
        nl.tudelft.jpacman.sprite.PacManSprites pacManSprites0 = null;
        nl.tudelft.jpacman.board.BoardFactory boardFactory1 = new nl.tudelft.jpacman.board.BoardFactory(pacManSprites0);
        nl.tudelft.jpacman.board.Square[] squareArray2 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray3 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray4 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[][] squareArray5 = new nl.tudelft.jpacman.board.Square[][] { squareArray2, squareArray3, squareArray4 };
        nl.tudelft.jpacman.board.Board board6 = boardFactory1.createBoard(squareArray5);
        nl.tudelft.jpacman.sprite.PacManSprites pacManSprites7 = null;
        nl.tudelft.jpacman.board.BoardFactory boardFactory8 = new nl.tudelft.jpacman.board.BoardFactory(pacManSprites7);
        nl.tudelft.jpacman.board.Square[] squareArray9 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray10 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray11 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[][] squareArray12 = new nl.tudelft.jpacman.board.Square[][] { squareArray9, squareArray10, squareArray11 };
        nl.tudelft.jpacman.board.Board board13 = boardFactory8.createBoard(squareArray12);
        nl.tudelft.jpacman.sprite.PacManSprites pacManSprites14 = null;
        nl.tudelft.jpacman.board.BoardFactory boardFactory15 = new nl.tudelft.jpacman.board.BoardFactory(pacManSprites14);
        nl.tudelft.jpacman.board.Square[] squareArray16 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray17 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray18 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[][] squareArray19 = new nl.tudelft.jpacman.board.Square[][] { squareArray16, squareArray17, squareArray18 };
        nl.tudelft.jpacman.board.Board board20 = boardFactory15.createBoard(squareArray19);
        nl.tudelft.jpacman.board.Board board21 = boardFactory8.createBoard(squareArray19);
        nl.tudelft.jpacman.board.Board board22 = boardFactory1.createBoard(squareArray19);
        // The following exception was thrown during execution in test generation
        try {
            nl.tudelft.jpacman.board.Square square23 = boardFactory1.createGround();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"nl.tudelft.jpacman.sprite.PacManSprites.getGroundSprite()\" because \"this.sprites\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(squareArray2);
        org.junit.Assert.assertArrayEquals(squareArray2, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray3);
        org.junit.Assert.assertArrayEquals(squareArray3, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray4);
        org.junit.Assert.assertArrayEquals(squareArray4, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray5);
        org.junit.Assert.assertNotNull(board6);
        org.junit.Assert.assertNotNull(squareArray9);
        org.junit.Assert.assertArrayEquals(squareArray9, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray10);
        org.junit.Assert.assertArrayEquals(squareArray10, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray11);
        org.junit.Assert.assertArrayEquals(squareArray11, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray12);
        org.junit.Assert.assertNotNull(board13);
        org.junit.Assert.assertNotNull(squareArray16);
        org.junit.Assert.assertArrayEquals(squareArray16, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray17);
        org.junit.Assert.assertArrayEquals(squareArray17, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray18);
        org.junit.Assert.assertArrayEquals(squareArray18, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray19);
        org.junit.Assert.assertNotNull(board20);
        org.junit.Assert.assertNotNull(board21);
        org.junit.Assert.assertNotNull(board22);
    }

    @Test
    public void test07() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test07");
        nl.tudelft.jpacman.sprite.PacManSprites pacManSprites0 = null;
        nl.tudelft.jpacman.board.BoardFactory boardFactory1 = new nl.tudelft.jpacman.board.BoardFactory(pacManSprites0);
        nl.tudelft.jpacman.board.Square[] squareArray2 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray3 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray4 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[][] squareArray5 = new nl.tudelft.jpacman.board.Square[][] { squareArray2, squareArray3, squareArray4 };
        nl.tudelft.jpacman.board.Board board6 = boardFactory1.createBoard(squareArray5);
        nl.tudelft.jpacman.sprite.PacManSprites pacManSprites7 = null;
        nl.tudelft.jpacman.board.BoardFactory boardFactory8 = new nl.tudelft.jpacman.board.BoardFactory(pacManSprites7);
        nl.tudelft.jpacman.board.Square[] squareArray9 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray10 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray11 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[][] squareArray12 = new nl.tudelft.jpacman.board.Square[][] { squareArray9, squareArray10, squareArray11 };
        nl.tudelft.jpacman.board.Board board13 = boardFactory8.createBoard(squareArray12);
        nl.tudelft.jpacman.sprite.PacManSprites pacManSprites14 = null;
        nl.tudelft.jpacman.board.BoardFactory boardFactory15 = new nl.tudelft.jpacman.board.BoardFactory(pacManSprites14);
        nl.tudelft.jpacman.board.Square[] squareArray16 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray17 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray18 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[][] squareArray19 = new nl.tudelft.jpacman.board.Square[][] { squareArray16, squareArray17, squareArray18 };
        nl.tudelft.jpacman.board.Board board20 = boardFactory15.createBoard(squareArray19);
        nl.tudelft.jpacman.board.Board board21 = boardFactory8.createBoard(squareArray19);
        nl.tudelft.jpacman.board.Board board22 = boardFactory1.createBoard(squareArray19);
        nl.tudelft.jpacman.sprite.PacManSprites pacManSprites23 = null;
        nl.tudelft.jpacman.board.BoardFactory boardFactory24 = new nl.tudelft.jpacman.board.BoardFactory(pacManSprites23);
        nl.tudelft.jpacman.board.Square[] squareArray25 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray26 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray27 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[][] squareArray28 = new nl.tudelft.jpacman.board.Square[][] { squareArray25, squareArray26, squareArray27 };
        nl.tudelft.jpacman.board.Board board29 = boardFactory24.createBoard(squareArray28);
        nl.tudelft.jpacman.board.Board board30 = boardFactory1.createBoard(squareArray28);
        // The following exception was thrown during execution in test generation
        try {
            nl.tudelft.jpacman.board.Square square31 = boardFactory1.createGround();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"nl.tudelft.jpacman.sprite.PacManSprites.getGroundSprite()\" because \"this.sprites\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(squareArray2);
        org.junit.Assert.assertArrayEquals(squareArray2, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray3);
        org.junit.Assert.assertArrayEquals(squareArray3, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray4);
        org.junit.Assert.assertArrayEquals(squareArray4, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray5);
        org.junit.Assert.assertNotNull(board6);
        org.junit.Assert.assertNotNull(squareArray9);
        org.junit.Assert.assertArrayEquals(squareArray9, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray10);
        org.junit.Assert.assertArrayEquals(squareArray10, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray11);
        org.junit.Assert.assertArrayEquals(squareArray11, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray12);
        org.junit.Assert.assertNotNull(board13);
        org.junit.Assert.assertNotNull(squareArray16);
        org.junit.Assert.assertArrayEquals(squareArray16, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray17);
        org.junit.Assert.assertArrayEquals(squareArray17, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray18);
        org.junit.Assert.assertArrayEquals(squareArray18, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray19);
        org.junit.Assert.assertNotNull(board20);
        org.junit.Assert.assertNotNull(board21);
        org.junit.Assert.assertNotNull(board22);
        org.junit.Assert.assertNotNull(squareArray25);
        org.junit.Assert.assertArrayEquals(squareArray25, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray26);
        org.junit.Assert.assertArrayEquals(squareArray26, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray27);
        org.junit.Assert.assertArrayEquals(squareArray27, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray28);
        org.junit.Assert.assertNotNull(board29);
        org.junit.Assert.assertNotNull(board30);
    }

    @Test
    public void test08() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test08");
        nl.tudelft.jpacman.sprite.PacManSprites pacManSprites0 = null;
        nl.tudelft.jpacman.board.BoardFactory boardFactory1 = new nl.tudelft.jpacman.board.BoardFactory(pacManSprites0);
        nl.tudelft.jpacman.board.Square[] squareArray2 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray3 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray4 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[][] squareArray5 = new nl.tudelft.jpacman.board.Square[][] { squareArray2, squareArray3, squareArray4 };
        nl.tudelft.jpacman.board.Board board6 = boardFactory1.createBoard(squareArray5);
        nl.tudelft.jpacman.sprite.PacManSprites pacManSprites7 = null;
        nl.tudelft.jpacman.board.BoardFactory boardFactory8 = new nl.tudelft.jpacman.board.BoardFactory(pacManSprites7);
        nl.tudelft.jpacman.board.Square[] squareArray9 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray10 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray11 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[][] squareArray12 = new nl.tudelft.jpacman.board.Square[][] { squareArray9, squareArray10, squareArray11 };
        nl.tudelft.jpacman.board.Board board13 = boardFactory8.createBoard(squareArray12);
        nl.tudelft.jpacman.sprite.PacManSprites pacManSprites14 = null;
        nl.tudelft.jpacman.board.BoardFactory boardFactory15 = new nl.tudelft.jpacman.board.BoardFactory(pacManSprites14);
        nl.tudelft.jpacman.board.Square[] squareArray16 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray17 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray18 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[][] squareArray19 = new nl.tudelft.jpacman.board.Square[][] { squareArray16, squareArray17, squareArray18 };
        nl.tudelft.jpacman.board.Board board20 = boardFactory15.createBoard(squareArray19);
        nl.tudelft.jpacman.board.Board board21 = boardFactory8.createBoard(squareArray19);
        nl.tudelft.jpacman.board.Board board22 = boardFactory1.createBoard(squareArray19);
        nl.tudelft.jpacman.sprite.PacManSprites pacManSprites23 = null;
        nl.tudelft.jpacman.board.BoardFactory boardFactory24 = new nl.tudelft.jpacman.board.BoardFactory(pacManSprites23);
        nl.tudelft.jpacman.board.Square[] squareArray25 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray26 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray27 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[][] squareArray28 = new nl.tudelft.jpacman.board.Square[][] { squareArray25, squareArray26, squareArray27 };
        nl.tudelft.jpacman.board.Board board29 = boardFactory24.createBoard(squareArray28);
        nl.tudelft.jpacman.board.Board board30 = boardFactory1.createBoard(squareArray28);
        java.lang.Class<?> wildcardClass31 = squareArray28.getClass();
        org.junit.Assert.assertNotNull(squareArray2);
        org.junit.Assert.assertArrayEquals(squareArray2, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray3);
        org.junit.Assert.assertArrayEquals(squareArray3, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray4);
        org.junit.Assert.assertArrayEquals(squareArray4, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray5);
        org.junit.Assert.assertNotNull(board6);
        org.junit.Assert.assertNotNull(squareArray9);
        org.junit.Assert.assertArrayEquals(squareArray9, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray10);
        org.junit.Assert.assertArrayEquals(squareArray10, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray11);
        org.junit.Assert.assertArrayEquals(squareArray11, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray12);
        org.junit.Assert.assertNotNull(board13);
        org.junit.Assert.assertNotNull(squareArray16);
        org.junit.Assert.assertArrayEquals(squareArray16, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray17);
        org.junit.Assert.assertArrayEquals(squareArray17, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray18);
        org.junit.Assert.assertArrayEquals(squareArray18, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray19);
        org.junit.Assert.assertNotNull(board20);
        org.junit.Assert.assertNotNull(board21);
        org.junit.Assert.assertNotNull(board22);
        org.junit.Assert.assertNotNull(squareArray25);
        org.junit.Assert.assertArrayEquals(squareArray25, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray26);
        org.junit.Assert.assertArrayEquals(squareArray26, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray27);
        org.junit.Assert.assertArrayEquals(squareArray27, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray28);
        org.junit.Assert.assertNotNull(board29);
        org.junit.Assert.assertNotNull(board30);
        org.junit.Assert.assertNotNull(wildcardClass31);
    }

    @Test
    public void test09() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test09");
        nl.tudelft.jpacman.sprite.PacManSprites pacManSprites0 = null;
        nl.tudelft.jpacman.board.BoardFactory boardFactory1 = new nl.tudelft.jpacman.board.BoardFactory(pacManSprites0);
        nl.tudelft.jpacman.board.Square[] squareArray2 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray3 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray4 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[][] squareArray5 = new nl.tudelft.jpacman.board.Square[][] { squareArray2, squareArray3, squareArray4 };
        nl.tudelft.jpacman.board.Board board6 = boardFactory1.createBoard(squareArray5);
        nl.tudelft.jpacman.sprite.PacManSprites pacManSprites7 = null;
        nl.tudelft.jpacman.board.BoardFactory boardFactory8 = new nl.tudelft.jpacman.board.BoardFactory(pacManSprites7);
        nl.tudelft.jpacman.board.Square[] squareArray9 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray10 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray11 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[][] squareArray12 = new nl.tudelft.jpacman.board.Square[][] { squareArray9, squareArray10, squareArray11 };
        nl.tudelft.jpacman.board.Board board13 = boardFactory8.createBoard(squareArray12);
        nl.tudelft.jpacman.sprite.PacManSprites pacManSprites14 = null;
        nl.tudelft.jpacman.board.BoardFactory boardFactory15 = new nl.tudelft.jpacman.board.BoardFactory(pacManSprites14);
        nl.tudelft.jpacman.board.Square[] squareArray16 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray17 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray18 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[][] squareArray19 = new nl.tudelft.jpacman.board.Square[][] { squareArray16, squareArray17, squareArray18 };
        nl.tudelft.jpacman.board.Board board20 = boardFactory15.createBoard(squareArray19);
        nl.tudelft.jpacman.board.Board board21 = boardFactory8.createBoard(squareArray19);
        nl.tudelft.jpacman.board.Board board22 = boardFactory1.createBoard(squareArray19);
        java.lang.Class<?> wildcardClass23 = boardFactory1.getClass();
        org.junit.Assert.assertNotNull(squareArray2);
        org.junit.Assert.assertArrayEquals(squareArray2, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray3);
        org.junit.Assert.assertArrayEquals(squareArray3, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray4);
        org.junit.Assert.assertArrayEquals(squareArray4, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray5);
        org.junit.Assert.assertNotNull(board6);
        org.junit.Assert.assertNotNull(squareArray9);
        org.junit.Assert.assertArrayEquals(squareArray9, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray10);
        org.junit.Assert.assertArrayEquals(squareArray10, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray11);
        org.junit.Assert.assertArrayEquals(squareArray11, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray12);
        org.junit.Assert.assertNotNull(board13);
        org.junit.Assert.assertNotNull(squareArray16);
        org.junit.Assert.assertArrayEquals(squareArray16, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray17);
        org.junit.Assert.assertArrayEquals(squareArray17, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray18);
        org.junit.Assert.assertArrayEquals(squareArray18, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray19);
        org.junit.Assert.assertNotNull(board20);
        org.junit.Assert.assertNotNull(board21);
        org.junit.Assert.assertNotNull(board22);
        org.junit.Assert.assertNotNull(wildcardClass23);
    }

    @Test
    public void test10() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test10");
        nl.tudelft.jpacman.sprite.PacManSprites pacManSprites0 = null;
        nl.tudelft.jpacman.board.BoardFactory boardFactory1 = new nl.tudelft.jpacman.board.BoardFactory(pacManSprites0);
        nl.tudelft.jpacman.board.Square[] squareArray2 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray3 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray4 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[][] squareArray5 = new nl.tudelft.jpacman.board.Square[][] { squareArray2, squareArray3, squareArray4 };
        nl.tudelft.jpacman.board.Board board6 = boardFactory1.createBoard(squareArray5);
        nl.tudelft.jpacman.sprite.PacManSprites pacManSprites7 = null;
        nl.tudelft.jpacman.board.BoardFactory boardFactory8 = new nl.tudelft.jpacman.board.BoardFactory(pacManSprites7);
        nl.tudelft.jpacman.board.Square[] squareArray9 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray10 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray11 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[][] squareArray12 = new nl.tudelft.jpacman.board.Square[][] { squareArray9, squareArray10, squareArray11 };
        nl.tudelft.jpacman.board.Board board13 = boardFactory8.createBoard(squareArray12);
        nl.tudelft.jpacman.sprite.PacManSprites pacManSprites14 = null;
        nl.tudelft.jpacman.board.BoardFactory boardFactory15 = new nl.tudelft.jpacman.board.BoardFactory(pacManSprites14);
        nl.tudelft.jpacman.board.Square[] squareArray16 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray17 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray18 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[][] squareArray19 = new nl.tudelft.jpacman.board.Square[][] { squareArray16, squareArray17, squareArray18 };
        nl.tudelft.jpacman.board.Board board20 = boardFactory15.createBoard(squareArray19);
        nl.tudelft.jpacman.sprite.PacManSprites pacManSprites21 = null;
        nl.tudelft.jpacman.board.BoardFactory boardFactory22 = new nl.tudelft.jpacman.board.BoardFactory(pacManSprites21);
        nl.tudelft.jpacman.board.Square[] squareArray23 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray24 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray25 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[][] squareArray26 = new nl.tudelft.jpacman.board.Square[][] { squareArray23, squareArray24, squareArray25 };
        nl.tudelft.jpacman.board.Board board27 = boardFactory22.createBoard(squareArray26);
        nl.tudelft.jpacman.board.Board board28 = boardFactory15.createBoard(squareArray26);
        nl.tudelft.jpacman.board.Board board29 = boardFactory8.createBoard(squareArray26);
        nl.tudelft.jpacman.board.Board board30 = boardFactory1.createBoard(squareArray26);
        // The following exception was thrown during execution in test generation
        try {
            nl.tudelft.jpacman.board.Square square31 = boardFactory1.createGround();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"nl.tudelft.jpacman.sprite.PacManSprites.getGroundSprite()\" because \"this.sprites\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(squareArray2);
        org.junit.Assert.assertArrayEquals(squareArray2, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray3);
        org.junit.Assert.assertArrayEquals(squareArray3, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray4);
        org.junit.Assert.assertArrayEquals(squareArray4, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray5);
        org.junit.Assert.assertNotNull(board6);
        org.junit.Assert.assertNotNull(squareArray9);
        org.junit.Assert.assertArrayEquals(squareArray9, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray10);
        org.junit.Assert.assertArrayEquals(squareArray10, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray11);
        org.junit.Assert.assertArrayEquals(squareArray11, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray12);
        org.junit.Assert.assertNotNull(board13);
        org.junit.Assert.assertNotNull(squareArray16);
        org.junit.Assert.assertArrayEquals(squareArray16, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray17);
        org.junit.Assert.assertArrayEquals(squareArray17, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray18);
        org.junit.Assert.assertArrayEquals(squareArray18, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray19);
        org.junit.Assert.assertNotNull(board20);
        org.junit.Assert.assertNotNull(squareArray23);
        org.junit.Assert.assertArrayEquals(squareArray23, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray24);
        org.junit.Assert.assertArrayEquals(squareArray24, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray25);
        org.junit.Assert.assertArrayEquals(squareArray25, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray26);
        org.junit.Assert.assertNotNull(board27);
        org.junit.Assert.assertNotNull(board28);
        org.junit.Assert.assertNotNull(board29);
        org.junit.Assert.assertNotNull(board30);
    }

    @Test
    public void test11() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test11");
        nl.tudelft.jpacman.sprite.PacManSprites pacManSprites0 = null;
        nl.tudelft.jpacman.board.BoardFactory boardFactory1 = new nl.tudelft.jpacman.board.BoardFactory(pacManSprites0);
        nl.tudelft.jpacman.board.Square[] squareArray2 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray3 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray4 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[][] squareArray5 = new nl.tudelft.jpacman.board.Square[][] { squareArray2, squareArray3, squareArray4 };
        nl.tudelft.jpacman.board.Board board6 = boardFactory1.createBoard(squareArray5);
        nl.tudelft.jpacman.board.Square[] squareArray7 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray8 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[][] squareArray9 = new nl.tudelft.jpacman.board.Square[][] { squareArray7, squareArray8 };
        nl.tudelft.jpacman.board.Board board10 = boardFactory1.createBoard(squareArray9);
        java.lang.Class<?> wildcardClass11 = board10.getClass();
        org.junit.Assert.assertNotNull(squareArray2);
        org.junit.Assert.assertArrayEquals(squareArray2, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray3);
        org.junit.Assert.assertArrayEquals(squareArray3, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray4);
        org.junit.Assert.assertArrayEquals(squareArray4, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray5);
        org.junit.Assert.assertNotNull(board6);
        org.junit.Assert.assertNotNull(squareArray7);
        org.junit.Assert.assertArrayEquals(squareArray7, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray8);
        org.junit.Assert.assertArrayEquals(squareArray8, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray9);
        org.junit.Assert.assertNotNull(board10);
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test12() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test12");
        nl.tudelft.jpacman.sprite.PacManSprites pacManSprites0 = null;
        nl.tudelft.jpacman.board.BoardFactory boardFactory1 = new nl.tudelft.jpacman.board.BoardFactory(pacManSprites0);
        nl.tudelft.jpacman.board.Square[] squareArray2 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray3 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray4 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[][] squareArray5 = new nl.tudelft.jpacman.board.Square[][] { squareArray2, squareArray3, squareArray4 };
        nl.tudelft.jpacman.board.Board board6 = boardFactory1.createBoard(squareArray5);
        nl.tudelft.jpacman.board.Square[] squareArray7 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray8 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[][] squareArray9 = new nl.tudelft.jpacman.board.Square[][] { squareArray7, squareArray8 };
        nl.tudelft.jpacman.board.Board board10 = boardFactory1.createBoard(squareArray9);
        java.lang.Class<?> wildcardClass11 = squareArray9.getClass();
        org.junit.Assert.assertNotNull(squareArray2);
        org.junit.Assert.assertArrayEquals(squareArray2, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray3);
        org.junit.Assert.assertArrayEquals(squareArray3, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray4);
        org.junit.Assert.assertArrayEquals(squareArray4, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray5);
        org.junit.Assert.assertNotNull(board6);
        org.junit.Assert.assertNotNull(squareArray7);
        org.junit.Assert.assertArrayEquals(squareArray7, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray8);
        org.junit.Assert.assertArrayEquals(squareArray8, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray9);
        org.junit.Assert.assertNotNull(board10);
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test13() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test13");
        nl.tudelft.jpacman.sprite.PacManSprites pacManSprites0 = null;
        nl.tudelft.jpacman.board.BoardFactory boardFactory1 = new nl.tudelft.jpacman.board.BoardFactory(pacManSprites0);
        nl.tudelft.jpacman.board.Square[] squareArray2 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray3 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray4 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[][] squareArray5 = new nl.tudelft.jpacman.board.Square[][] { squareArray2, squareArray3, squareArray4 };
        nl.tudelft.jpacman.board.Board board6 = boardFactory1.createBoard(squareArray5);
        nl.tudelft.jpacman.sprite.PacManSprites pacManSprites7 = null;
        nl.tudelft.jpacman.board.BoardFactory boardFactory8 = new nl.tudelft.jpacman.board.BoardFactory(pacManSprites7);
        nl.tudelft.jpacman.board.Square[] squareArray9 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray10 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray11 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[][] squareArray12 = new nl.tudelft.jpacman.board.Square[][] { squareArray9, squareArray10, squareArray11 };
        nl.tudelft.jpacman.board.Board board13 = boardFactory8.createBoard(squareArray12);
        nl.tudelft.jpacman.board.Board board14 = boardFactory1.createBoard(squareArray12);
        // The following exception was thrown during execution in test generation
        try {
            nl.tudelft.jpacman.board.Square square15 = boardFactory1.createGround();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"nl.tudelft.jpacman.sprite.PacManSprites.getGroundSprite()\" because \"this.sprites\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(squareArray2);
        org.junit.Assert.assertArrayEquals(squareArray2, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray3);
        org.junit.Assert.assertArrayEquals(squareArray3, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray4);
        org.junit.Assert.assertArrayEquals(squareArray4, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray5);
        org.junit.Assert.assertNotNull(board6);
        org.junit.Assert.assertNotNull(squareArray9);
        org.junit.Assert.assertArrayEquals(squareArray9, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray10);
        org.junit.Assert.assertArrayEquals(squareArray10, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray11);
        org.junit.Assert.assertArrayEquals(squareArray11, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray12);
        org.junit.Assert.assertNotNull(board13);
        org.junit.Assert.assertNotNull(board14);
    }

    @Test
    public void test14() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test14");
        nl.tudelft.jpacman.sprite.PacManSprites pacManSprites0 = null;
        nl.tudelft.jpacman.board.BoardFactory boardFactory1 = new nl.tudelft.jpacman.board.BoardFactory(pacManSprites0);
        nl.tudelft.jpacman.board.Square[] squareArray2 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray3 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray4 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[][] squareArray5 = new nl.tudelft.jpacman.board.Square[][] { squareArray2, squareArray3, squareArray4 };
        nl.tudelft.jpacman.board.Board board6 = boardFactory1.createBoard(squareArray5);
        java.lang.Class<?> wildcardClass7 = board6.getClass();
        org.junit.Assert.assertNotNull(squareArray2);
        org.junit.Assert.assertArrayEquals(squareArray2, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray3);
        org.junit.Assert.assertArrayEquals(squareArray3, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray4);
        org.junit.Assert.assertArrayEquals(squareArray4, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray5);
        org.junit.Assert.assertNotNull(board6);
        org.junit.Assert.assertNotNull(wildcardClass7);
    }

    @Test
    public void test15() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test15");
        nl.tudelft.jpacman.sprite.PacManSprites pacManSprites0 = null;
        nl.tudelft.jpacman.board.BoardFactory boardFactory1 = new nl.tudelft.jpacman.board.BoardFactory(pacManSprites0);
        nl.tudelft.jpacman.board.Square[] squareArray2 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray3 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray4 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[][] squareArray5 = new nl.tudelft.jpacman.board.Square[][] { squareArray2, squareArray3, squareArray4 };
        nl.tudelft.jpacman.board.Board board6 = boardFactory1.createBoard(squareArray5);
        nl.tudelft.jpacman.board.Square[] squareArray7 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray8 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[][] squareArray9 = new nl.tudelft.jpacman.board.Square[][] { squareArray7, squareArray8 };
        nl.tudelft.jpacman.board.Board board10 = boardFactory1.createBoard(squareArray9);
        // The following exception was thrown during execution in test generation
        try {
            nl.tudelft.jpacman.board.Square square11 = boardFactory1.createGround();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"nl.tudelft.jpacman.sprite.PacManSprites.getGroundSprite()\" because \"this.sprites\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(squareArray2);
        org.junit.Assert.assertArrayEquals(squareArray2, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray3);
        org.junit.Assert.assertArrayEquals(squareArray3, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray4);
        org.junit.Assert.assertArrayEquals(squareArray4, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray5);
        org.junit.Assert.assertNotNull(board6);
        org.junit.Assert.assertNotNull(squareArray7);
        org.junit.Assert.assertArrayEquals(squareArray7, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray8);
        org.junit.Assert.assertArrayEquals(squareArray8, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray9);
        org.junit.Assert.assertNotNull(board10);
    }

    @Test
    public void test16() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test16");
        nl.tudelft.jpacman.sprite.PacManSprites pacManSprites0 = null;
        nl.tudelft.jpacman.board.BoardFactory boardFactory1 = new nl.tudelft.jpacman.board.BoardFactory(pacManSprites0);
        nl.tudelft.jpacman.board.Square[] squareArray2 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray3 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray4 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[][] squareArray5 = new nl.tudelft.jpacman.board.Square[][] { squareArray2, squareArray3, squareArray4 };
        nl.tudelft.jpacman.board.Board board6 = boardFactory1.createBoard(squareArray5);
        nl.tudelft.jpacman.sprite.PacManSprites pacManSprites7 = null;
        nl.tudelft.jpacman.board.BoardFactory boardFactory8 = new nl.tudelft.jpacman.board.BoardFactory(pacManSprites7);
        nl.tudelft.jpacman.board.Square[] squareArray9 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray10 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray11 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[][] squareArray12 = new nl.tudelft.jpacman.board.Square[][] { squareArray9, squareArray10, squareArray11 };
        nl.tudelft.jpacman.board.Board board13 = boardFactory8.createBoard(squareArray12);
        nl.tudelft.jpacman.board.Board board14 = boardFactory1.createBoard(squareArray12);
        nl.tudelft.jpacman.sprite.PacManSprites pacManSprites15 = null;
        nl.tudelft.jpacman.board.BoardFactory boardFactory16 = new nl.tudelft.jpacman.board.BoardFactory(pacManSprites15);
        nl.tudelft.jpacman.board.Square[] squareArray17 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray18 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray19 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[][] squareArray20 = new nl.tudelft.jpacman.board.Square[][] { squareArray17, squareArray18, squareArray19 };
        nl.tudelft.jpacman.board.Board board21 = boardFactory16.createBoard(squareArray20);
        nl.tudelft.jpacman.sprite.PacManSprites pacManSprites22 = null;
        nl.tudelft.jpacman.board.BoardFactory boardFactory23 = new nl.tudelft.jpacman.board.BoardFactory(pacManSprites22);
        nl.tudelft.jpacman.board.Square[] squareArray24 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray25 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray26 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[][] squareArray27 = new nl.tudelft.jpacman.board.Square[][] { squareArray24, squareArray25, squareArray26 };
        nl.tudelft.jpacman.board.Board board28 = boardFactory23.createBoard(squareArray27);
        nl.tudelft.jpacman.sprite.PacManSprites pacManSprites29 = null;
        nl.tudelft.jpacman.board.BoardFactory boardFactory30 = new nl.tudelft.jpacman.board.BoardFactory(pacManSprites29);
        nl.tudelft.jpacman.board.Square[] squareArray31 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray32 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray33 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[][] squareArray34 = new nl.tudelft.jpacman.board.Square[][] { squareArray31, squareArray32, squareArray33 };
        nl.tudelft.jpacman.board.Board board35 = boardFactory30.createBoard(squareArray34);
        nl.tudelft.jpacman.sprite.PacManSprites pacManSprites36 = null;
        nl.tudelft.jpacman.board.BoardFactory boardFactory37 = new nl.tudelft.jpacman.board.BoardFactory(pacManSprites36);
        nl.tudelft.jpacman.board.Square[] squareArray38 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray39 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray40 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[][] squareArray41 = new nl.tudelft.jpacman.board.Square[][] { squareArray38, squareArray39, squareArray40 };
        nl.tudelft.jpacman.board.Board board42 = boardFactory37.createBoard(squareArray41);
        nl.tudelft.jpacman.board.Board board43 = boardFactory30.createBoard(squareArray41);
        nl.tudelft.jpacman.board.Board board44 = boardFactory23.createBoard(squareArray41);
        nl.tudelft.jpacman.board.Board board45 = boardFactory16.createBoard(squareArray41);
        nl.tudelft.jpacman.board.Board board46 = boardFactory1.createBoard(squareArray41);
        // The following exception was thrown during execution in test generation
        try {
            nl.tudelft.jpacman.board.Square square47 = boardFactory1.createWall();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"nl.tudelft.jpacman.sprite.PacManSprites.getWallSprite()\" because \"this.sprites\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(squareArray2);
        org.junit.Assert.assertArrayEquals(squareArray2, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray3);
        org.junit.Assert.assertArrayEquals(squareArray3, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray4);
        org.junit.Assert.assertArrayEquals(squareArray4, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray5);
        org.junit.Assert.assertNotNull(board6);
        org.junit.Assert.assertNotNull(squareArray9);
        org.junit.Assert.assertArrayEquals(squareArray9, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray10);
        org.junit.Assert.assertArrayEquals(squareArray10, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray11);
        org.junit.Assert.assertArrayEquals(squareArray11, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray12);
        org.junit.Assert.assertNotNull(board13);
        org.junit.Assert.assertNotNull(board14);
        org.junit.Assert.assertNotNull(squareArray17);
        org.junit.Assert.assertArrayEquals(squareArray17, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray18);
        org.junit.Assert.assertArrayEquals(squareArray18, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray19);
        org.junit.Assert.assertArrayEquals(squareArray19, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray20);
        org.junit.Assert.assertNotNull(board21);
        org.junit.Assert.assertNotNull(squareArray24);
        org.junit.Assert.assertArrayEquals(squareArray24, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray25);
        org.junit.Assert.assertArrayEquals(squareArray25, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray26);
        org.junit.Assert.assertArrayEquals(squareArray26, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray27);
        org.junit.Assert.assertNotNull(board28);
        org.junit.Assert.assertNotNull(squareArray31);
        org.junit.Assert.assertArrayEquals(squareArray31, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray32);
        org.junit.Assert.assertArrayEquals(squareArray32, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray33);
        org.junit.Assert.assertArrayEquals(squareArray33, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray34);
        org.junit.Assert.assertNotNull(board35);
        org.junit.Assert.assertNotNull(squareArray38);
        org.junit.Assert.assertArrayEquals(squareArray38, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray39);
        org.junit.Assert.assertArrayEquals(squareArray39, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray40);
        org.junit.Assert.assertArrayEquals(squareArray40, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray41);
        org.junit.Assert.assertNotNull(board42);
        org.junit.Assert.assertNotNull(board43);
        org.junit.Assert.assertNotNull(board44);
        org.junit.Assert.assertNotNull(board45);
        org.junit.Assert.assertNotNull(board46);
    }

    @Test
    public void test17() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test17");
        nl.tudelft.jpacman.sprite.PacManSprites pacManSprites0 = null;
        nl.tudelft.jpacman.board.BoardFactory boardFactory1 = new nl.tudelft.jpacman.board.BoardFactory(pacManSprites0);
        nl.tudelft.jpacman.board.Square[] squareArray2 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray3 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray4 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[][] squareArray5 = new nl.tudelft.jpacman.board.Square[][] { squareArray2, squareArray3, squareArray4 };
        nl.tudelft.jpacman.board.Board board6 = boardFactory1.createBoard(squareArray5);
        nl.tudelft.jpacman.sprite.PacManSprites pacManSprites7 = null;
        nl.tudelft.jpacman.board.BoardFactory boardFactory8 = new nl.tudelft.jpacman.board.BoardFactory(pacManSprites7);
        nl.tudelft.jpacman.board.Square[] squareArray9 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray10 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray11 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[][] squareArray12 = new nl.tudelft.jpacman.board.Square[][] { squareArray9, squareArray10, squareArray11 };
        nl.tudelft.jpacman.board.Board board13 = boardFactory8.createBoard(squareArray12);
        nl.tudelft.jpacman.sprite.PacManSprites pacManSprites14 = null;
        nl.tudelft.jpacman.board.BoardFactory boardFactory15 = new nl.tudelft.jpacman.board.BoardFactory(pacManSprites14);
        nl.tudelft.jpacman.board.Square[] squareArray16 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray17 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray18 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[][] squareArray19 = new nl.tudelft.jpacman.board.Square[][] { squareArray16, squareArray17, squareArray18 };
        nl.tudelft.jpacman.board.Board board20 = boardFactory15.createBoard(squareArray19);
        nl.tudelft.jpacman.sprite.PacManSprites pacManSprites21 = null;
        nl.tudelft.jpacman.board.BoardFactory boardFactory22 = new nl.tudelft.jpacman.board.BoardFactory(pacManSprites21);
        nl.tudelft.jpacman.board.Square[] squareArray23 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray24 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray25 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[][] squareArray26 = new nl.tudelft.jpacman.board.Square[][] { squareArray23, squareArray24, squareArray25 };
        nl.tudelft.jpacman.board.Board board27 = boardFactory22.createBoard(squareArray26);
        nl.tudelft.jpacman.board.Board board28 = boardFactory15.createBoard(squareArray26);
        nl.tudelft.jpacman.board.Board board29 = boardFactory8.createBoard(squareArray26);
        nl.tudelft.jpacman.board.Board board30 = boardFactory1.createBoard(squareArray26);
        // The following exception was thrown during execution in test generation
        try {
            nl.tudelft.jpacman.board.Square square31 = boardFactory1.createWall();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"nl.tudelft.jpacman.sprite.PacManSprites.getWallSprite()\" because \"this.sprites\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(squareArray2);
        org.junit.Assert.assertArrayEquals(squareArray2, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray3);
        org.junit.Assert.assertArrayEquals(squareArray3, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray4);
        org.junit.Assert.assertArrayEquals(squareArray4, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray5);
        org.junit.Assert.assertNotNull(board6);
        org.junit.Assert.assertNotNull(squareArray9);
        org.junit.Assert.assertArrayEquals(squareArray9, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray10);
        org.junit.Assert.assertArrayEquals(squareArray10, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray11);
        org.junit.Assert.assertArrayEquals(squareArray11, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray12);
        org.junit.Assert.assertNotNull(board13);
        org.junit.Assert.assertNotNull(squareArray16);
        org.junit.Assert.assertArrayEquals(squareArray16, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray17);
        org.junit.Assert.assertArrayEquals(squareArray17, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray18);
        org.junit.Assert.assertArrayEquals(squareArray18, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray19);
        org.junit.Assert.assertNotNull(board20);
        org.junit.Assert.assertNotNull(squareArray23);
        org.junit.Assert.assertArrayEquals(squareArray23, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray24);
        org.junit.Assert.assertArrayEquals(squareArray24, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray25);
        org.junit.Assert.assertArrayEquals(squareArray25, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray26);
        org.junit.Assert.assertNotNull(board27);
        org.junit.Assert.assertNotNull(board28);
        org.junit.Assert.assertNotNull(board29);
        org.junit.Assert.assertNotNull(board30);
    }

    @Test
    public void test18() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test18");
        nl.tudelft.jpacman.sprite.PacManSprites pacManSprites0 = null;
        nl.tudelft.jpacman.board.BoardFactory boardFactory1 = new nl.tudelft.jpacman.board.BoardFactory(pacManSprites0);
        nl.tudelft.jpacman.board.Square[] squareArray2 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray3 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray4 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[][] squareArray5 = new nl.tudelft.jpacman.board.Square[][] { squareArray2, squareArray3, squareArray4 };
        nl.tudelft.jpacman.board.Board board6 = boardFactory1.createBoard(squareArray5);
        nl.tudelft.jpacman.board.Square[] squareArray7 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray8 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[][] squareArray9 = new nl.tudelft.jpacman.board.Square[][] { squareArray7, squareArray8 };
        nl.tudelft.jpacman.board.Board board10 = boardFactory1.createBoard(squareArray9);
        nl.tudelft.jpacman.sprite.PacManSprites pacManSprites11 = null;
        nl.tudelft.jpacman.board.BoardFactory boardFactory12 = new nl.tudelft.jpacman.board.BoardFactory(pacManSprites11);
        nl.tudelft.jpacman.board.Square[] squareArray13 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray14 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray15 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[][] squareArray16 = new nl.tudelft.jpacman.board.Square[][] { squareArray13, squareArray14, squareArray15 };
        nl.tudelft.jpacman.board.Board board17 = boardFactory12.createBoard(squareArray16);
        nl.tudelft.jpacman.sprite.PacManSprites pacManSprites18 = null;
        nl.tudelft.jpacman.board.BoardFactory boardFactory19 = new nl.tudelft.jpacman.board.BoardFactory(pacManSprites18);
        nl.tudelft.jpacman.board.Square[] squareArray20 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray21 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray22 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[][] squareArray23 = new nl.tudelft.jpacman.board.Square[][] { squareArray20, squareArray21, squareArray22 };
        nl.tudelft.jpacman.board.Board board24 = boardFactory19.createBoard(squareArray23);
        nl.tudelft.jpacman.board.Board board25 = boardFactory12.createBoard(squareArray23);
        nl.tudelft.jpacman.sprite.PacManSprites pacManSprites26 = null;
        nl.tudelft.jpacman.board.BoardFactory boardFactory27 = new nl.tudelft.jpacman.board.BoardFactory(pacManSprites26);
        nl.tudelft.jpacman.board.Square[] squareArray28 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray29 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray30 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[][] squareArray31 = new nl.tudelft.jpacman.board.Square[][] { squareArray28, squareArray29, squareArray30 };
        nl.tudelft.jpacman.board.Board board32 = boardFactory27.createBoard(squareArray31);
        nl.tudelft.jpacman.sprite.PacManSprites pacManSprites33 = null;
        nl.tudelft.jpacman.board.BoardFactory boardFactory34 = new nl.tudelft.jpacman.board.BoardFactory(pacManSprites33);
        nl.tudelft.jpacman.board.Square[] squareArray35 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray36 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray37 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[][] squareArray38 = new nl.tudelft.jpacman.board.Square[][] { squareArray35, squareArray36, squareArray37 };
        nl.tudelft.jpacman.board.Board board39 = boardFactory34.createBoard(squareArray38);
        nl.tudelft.jpacman.sprite.PacManSprites pacManSprites40 = null;
        nl.tudelft.jpacman.board.BoardFactory boardFactory41 = new nl.tudelft.jpacman.board.BoardFactory(pacManSprites40);
        nl.tudelft.jpacman.board.Square[] squareArray42 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray43 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray44 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[][] squareArray45 = new nl.tudelft.jpacman.board.Square[][] { squareArray42, squareArray43, squareArray44 };
        nl.tudelft.jpacman.board.Board board46 = boardFactory41.createBoard(squareArray45);
        nl.tudelft.jpacman.sprite.PacManSprites pacManSprites47 = null;
        nl.tudelft.jpacman.board.BoardFactory boardFactory48 = new nl.tudelft.jpacman.board.BoardFactory(pacManSprites47);
        nl.tudelft.jpacman.board.Square[] squareArray49 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray50 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray51 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[][] squareArray52 = new nl.tudelft.jpacman.board.Square[][] { squareArray49, squareArray50, squareArray51 };
        nl.tudelft.jpacman.board.Board board53 = boardFactory48.createBoard(squareArray52);
        nl.tudelft.jpacman.board.Board board54 = boardFactory41.createBoard(squareArray52);
        nl.tudelft.jpacman.board.Board board55 = boardFactory34.createBoard(squareArray52);
        nl.tudelft.jpacman.board.Board board56 = boardFactory27.createBoard(squareArray52);
        nl.tudelft.jpacman.board.Board board57 = boardFactory12.createBoard(squareArray52);
        nl.tudelft.jpacman.board.Board board58 = boardFactory1.createBoard(squareArray52);
        // The following exception was thrown during execution in test generation
        try {
            nl.tudelft.jpacman.board.Square square59 = boardFactory1.createWall();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"nl.tudelft.jpacman.sprite.PacManSprites.getWallSprite()\" because \"this.sprites\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(squareArray2);
        org.junit.Assert.assertArrayEquals(squareArray2, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray3);
        org.junit.Assert.assertArrayEquals(squareArray3, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray4);
        org.junit.Assert.assertArrayEquals(squareArray4, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray5);
        org.junit.Assert.assertNotNull(board6);
        org.junit.Assert.assertNotNull(squareArray7);
        org.junit.Assert.assertArrayEquals(squareArray7, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray8);
        org.junit.Assert.assertArrayEquals(squareArray8, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray9);
        org.junit.Assert.assertNotNull(board10);
        org.junit.Assert.assertNotNull(squareArray13);
        org.junit.Assert.assertArrayEquals(squareArray13, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray14);
        org.junit.Assert.assertArrayEquals(squareArray14, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray15);
        org.junit.Assert.assertArrayEquals(squareArray15, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray16);
        org.junit.Assert.assertNotNull(board17);
        org.junit.Assert.assertNotNull(squareArray20);
        org.junit.Assert.assertArrayEquals(squareArray20, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray21);
        org.junit.Assert.assertArrayEquals(squareArray21, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray22);
        org.junit.Assert.assertArrayEquals(squareArray22, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray23);
        org.junit.Assert.assertNotNull(board24);
        org.junit.Assert.assertNotNull(board25);
        org.junit.Assert.assertNotNull(squareArray28);
        org.junit.Assert.assertArrayEquals(squareArray28, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray29);
        org.junit.Assert.assertArrayEquals(squareArray29, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray30);
        org.junit.Assert.assertArrayEquals(squareArray30, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray31);
        org.junit.Assert.assertNotNull(board32);
        org.junit.Assert.assertNotNull(squareArray35);
        org.junit.Assert.assertArrayEquals(squareArray35, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray36);
        org.junit.Assert.assertArrayEquals(squareArray36, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray37);
        org.junit.Assert.assertArrayEquals(squareArray37, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray38);
        org.junit.Assert.assertNotNull(board39);
        org.junit.Assert.assertNotNull(squareArray42);
        org.junit.Assert.assertArrayEquals(squareArray42, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray43);
        org.junit.Assert.assertArrayEquals(squareArray43, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray44);
        org.junit.Assert.assertArrayEquals(squareArray44, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray45);
        org.junit.Assert.assertNotNull(board46);
        org.junit.Assert.assertNotNull(squareArray49);
        org.junit.Assert.assertArrayEquals(squareArray49, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray50);
        org.junit.Assert.assertArrayEquals(squareArray50, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray51);
        org.junit.Assert.assertArrayEquals(squareArray51, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray52);
        org.junit.Assert.assertNotNull(board53);
        org.junit.Assert.assertNotNull(board54);
        org.junit.Assert.assertNotNull(board55);
        org.junit.Assert.assertNotNull(board56);
        org.junit.Assert.assertNotNull(board57);
        org.junit.Assert.assertNotNull(board58);
    }

    @Test
    public void test19() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test19");
        nl.tudelft.jpacman.sprite.PacManSprites pacManSprites0 = null;
        nl.tudelft.jpacman.board.BoardFactory boardFactory1 = new nl.tudelft.jpacman.board.BoardFactory(pacManSprites0);
        nl.tudelft.jpacman.board.Square[] squareArray2 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray3 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray4 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[][] squareArray5 = new nl.tudelft.jpacman.board.Square[][] { squareArray2, squareArray3, squareArray4 };
        nl.tudelft.jpacman.board.Board board6 = boardFactory1.createBoard(squareArray5);
        nl.tudelft.jpacman.sprite.PacManSprites pacManSprites7 = null;
        nl.tudelft.jpacman.board.BoardFactory boardFactory8 = new nl.tudelft.jpacman.board.BoardFactory(pacManSprites7);
        nl.tudelft.jpacman.board.Square[] squareArray9 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray10 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray11 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[][] squareArray12 = new nl.tudelft.jpacman.board.Square[][] { squareArray9, squareArray10, squareArray11 };
        nl.tudelft.jpacman.board.Board board13 = boardFactory8.createBoard(squareArray12);
        nl.tudelft.jpacman.sprite.PacManSprites pacManSprites14 = null;
        nl.tudelft.jpacman.board.BoardFactory boardFactory15 = new nl.tudelft.jpacman.board.BoardFactory(pacManSprites14);
        nl.tudelft.jpacman.board.Square[] squareArray16 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray17 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray18 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[][] squareArray19 = new nl.tudelft.jpacman.board.Square[][] { squareArray16, squareArray17, squareArray18 };
        nl.tudelft.jpacman.board.Board board20 = boardFactory15.createBoard(squareArray19);
        nl.tudelft.jpacman.board.Board board21 = boardFactory8.createBoard(squareArray19);
        nl.tudelft.jpacman.board.Board board22 = boardFactory1.createBoard(squareArray19);
        nl.tudelft.jpacman.sprite.PacManSprites pacManSprites23 = null;
        nl.tudelft.jpacman.board.BoardFactory boardFactory24 = new nl.tudelft.jpacman.board.BoardFactory(pacManSprites23);
        nl.tudelft.jpacman.board.Square[] squareArray25 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray26 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray27 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[][] squareArray28 = new nl.tudelft.jpacman.board.Square[][] { squareArray25, squareArray26, squareArray27 };
        nl.tudelft.jpacman.board.Board board29 = boardFactory24.createBoard(squareArray28);
        nl.tudelft.jpacman.sprite.PacManSprites pacManSprites30 = null;
        nl.tudelft.jpacman.board.BoardFactory boardFactory31 = new nl.tudelft.jpacman.board.BoardFactory(pacManSprites30);
        nl.tudelft.jpacman.board.Square[] squareArray32 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray33 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray34 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[][] squareArray35 = new nl.tudelft.jpacman.board.Square[][] { squareArray32, squareArray33, squareArray34 };
        nl.tudelft.jpacman.board.Board board36 = boardFactory31.createBoard(squareArray35);
        nl.tudelft.jpacman.sprite.PacManSprites pacManSprites37 = null;
        nl.tudelft.jpacman.board.BoardFactory boardFactory38 = new nl.tudelft.jpacman.board.BoardFactory(pacManSprites37);
        nl.tudelft.jpacman.board.Square[] squareArray39 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray40 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray41 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[][] squareArray42 = new nl.tudelft.jpacman.board.Square[][] { squareArray39, squareArray40, squareArray41 };
        nl.tudelft.jpacman.board.Board board43 = boardFactory38.createBoard(squareArray42);
        nl.tudelft.jpacman.sprite.PacManSprites pacManSprites44 = null;
        nl.tudelft.jpacman.board.BoardFactory boardFactory45 = new nl.tudelft.jpacman.board.BoardFactory(pacManSprites44);
        nl.tudelft.jpacman.board.Square[] squareArray46 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray47 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray48 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[][] squareArray49 = new nl.tudelft.jpacman.board.Square[][] { squareArray46, squareArray47, squareArray48 };
        nl.tudelft.jpacman.board.Board board50 = boardFactory45.createBoard(squareArray49);
        nl.tudelft.jpacman.board.Board board51 = boardFactory38.createBoard(squareArray49);
        nl.tudelft.jpacman.board.Board board52 = boardFactory31.createBoard(squareArray49);
        nl.tudelft.jpacman.board.Board board53 = boardFactory24.createBoard(squareArray49);
        nl.tudelft.jpacman.board.Board board54 = boardFactory1.createBoard(squareArray49);
        // The following exception was thrown during execution in test generation
        try {
            nl.tudelft.jpacman.board.Square square55 = boardFactory1.createWall();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"nl.tudelft.jpacman.sprite.PacManSprites.getWallSprite()\" because \"this.sprites\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(squareArray2);
        org.junit.Assert.assertArrayEquals(squareArray2, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray3);
        org.junit.Assert.assertArrayEquals(squareArray3, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray4);
        org.junit.Assert.assertArrayEquals(squareArray4, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray5);
        org.junit.Assert.assertNotNull(board6);
        org.junit.Assert.assertNotNull(squareArray9);
        org.junit.Assert.assertArrayEquals(squareArray9, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray10);
        org.junit.Assert.assertArrayEquals(squareArray10, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray11);
        org.junit.Assert.assertArrayEquals(squareArray11, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray12);
        org.junit.Assert.assertNotNull(board13);
        org.junit.Assert.assertNotNull(squareArray16);
        org.junit.Assert.assertArrayEquals(squareArray16, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray17);
        org.junit.Assert.assertArrayEquals(squareArray17, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray18);
        org.junit.Assert.assertArrayEquals(squareArray18, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray19);
        org.junit.Assert.assertNotNull(board20);
        org.junit.Assert.assertNotNull(board21);
        org.junit.Assert.assertNotNull(board22);
        org.junit.Assert.assertNotNull(squareArray25);
        org.junit.Assert.assertArrayEquals(squareArray25, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray26);
        org.junit.Assert.assertArrayEquals(squareArray26, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray27);
        org.junit.Assert.assertArrayEquals(squareArray27, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray28);
        org.junit.Assert.assertNotNull(board29);
        org.junit.Assert.assertNotNull(squareArray32);
        org.junit.Assert.assertArrayEquals(squareArray32, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray33);
        org.junit.Assert.assertArrayEquals(squareArray33, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray34);
        org.junit.Assert.assertArrayEquals(squareArray34, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray35);
        org.junit.Assert.assertNotNull(board36);
        org.junit.Assert.assertNotNull(squareArray39);
        org.junit.Assert.assertArrayEquals(squareArray39, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray40);
        org.junit.Assert.assertArrayEquals(squareArray40, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray41);
        org.junit.Assert.assertArrayEquals(squareArray41, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray42);
        org.junit.Assert.assertNotNull(board43);
        org.junit.Assert.assertNotNull(squareArray46);
        org.junit.Assert.assertArrayEquals(squareArray46, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray47);
        org.junit.Assert.assertArrayEquals(squareArray47, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray48);
        org.junit.Assert.assertArrayEquals(squareArray48, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray49);
        org.junit.Assert.assertNotNull(board50);
        org.junit.Assert.assertNotNull(board51);
        org.junit.Assert.assertNotNull(board52);
        org.junit.Assert.assertNotNull(board53);
        org.junit.Assert.assertNotNull(board54);
    }

    @Test
    public void test20() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test20");
        nl.tudelft.jpacman.sprite.PacManSprites pacManSprites0 = null;
        nl.tudelft.jpacman.board.BoardFactory boardFactory1 = new nl.tudelft.jpacman.board.BoardFactory(pacManSprites0);
        nl.tudelft.jpacman.board.Square[] squareArray2 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray3 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray4 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[][] squareArray5 = new nl.tudelft.jpacman.board.Square[][] { squareArray2, squareArray3, squareArray4 };
        nl.tudelft.jpacman.board.Board board6 = boardFactory1.createBoard(squareArray5);
        nl.tudelft.jpacman.board.Square[] squareArray7 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray8 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[][] squareArray9 = new nl.tudelft.jpacman.board.Square[][] { squareArray7, squareArray8 };
        nl.tudelft.jpacman.board.Board board10 = boardFactory1.createBoard(squareArray9);
        nl.tudelft.jpacman.sprite.PacManSprites pacManSprites11 = null;
        nl.tudelft.jpacman.board.BoardFactory boardFactory12 = new nl.tudelft.jpacman.board.BoardFactory(pacManSprites11);
        nl.tudelft.jpacman.board.Square[] squareArray13 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray14 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray15 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[][] squareArray16 = new nl.tudelft.jpacman.board.Square[][] { squareArray13, squareArray14, squareArray15 };
        nl.tudelft.jpacman.board.Board board17 = boardFactory12.createBoard(squareArray16);
        nl.tudelft.jpacman.sprite.PacManSprites pacManSprites18 = null;
        nl.tudelft.jpacman.board.BoardFactory boardFactory19 = new nl.tudelft.jpacman.board.BoardFactory(pacManSprites18);
        nl.tudelft.jpacman.board.Square[] squareArray20 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray21 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray22 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[][] squareArray23 = new nl.tudelft.jpacman.board.Square[][] { squareArray20, squareArray21, squareArray22 };
        nl.tudelft.jpacman.board.Board board24 = boardFactory19.createBoard(squareArray23);
        nl.tudelft.jpacman.board.Board board25 = boardFactory12.createBoard(squareArray23);
        nl.tudelft.jpacman.sprite.PacManSprites pacManSprites26 = null;
        nl.tudelft.jpacman.board.BoardFactory boardFactory27 = new nl.tudelft.jpacman.board.BoardFactory(pacManSprites26);
        nl.tudelft.jpacman.board.Square[] squareArray28 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray29 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray30 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[][] squareArray31 = new nl.tudelft.jpacman.board.Square[][] { squareArray28, squareArray29, squareArray30 };
        nl.tudelft.jpacman.board.Board board32 = boardFactory27.createBoard(squareArray31);
        nl.tudelft.jpacman.sprite.PacManSprites pacManSprites33 = null;
        nl.tudelft.jpacman.board.BoardFactory boardFactory34 = new nl.tudelft.jpacman.board.BoardFactory(pacManSprites33);
        nl.tudelft.jpacman.board.Square[] squareArray35 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray36 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray37 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[][] squareArray38 = new nl.tudelft.jpacman.board.Square[][] { squareArray35, squareArray36, squareArray37 };
        nl.tudelft.jpacman.board.Board board39 = boardFactory34.createBoard(squareArray38);
        nl.tudelft.jpacman.sprite.PacManSprites pacManSprites40 = null;
        nl.tudelft.jpacman.board.BoardFactory boardFactory41 = new nl.tudelft.jpacman.board.BoardFactory(pacManSprites40);
        nl.tudelft.jpacman.board.Square[] squareArray42 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray43 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray44 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[][] squareArray45 = new nl.tudelft.jpacman.board.Square[][] { squareArray42, squareArray43, squareArray44 };
        nl.tudelft.jpacman.board.Board board46 = boardFactory41.createBoard(squareArray45);
        nl.tudelft.jpacman.sprite.PacManSprites pacManSprites47 = null;
        nl.tudelft.jpacman.board.BoardFactory boardFactory48 = new nl.tudelft.jpacman.board.BoardFactory(pacManSprites47);
        nl.tudelft.jpacman.board.Square[] squareArray49 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray50 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray51 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[][] squareArray52 = new nl.tudelft.jpacman.board.Square[][] { squareArray49, squareArray50, squareArray51 };
        nl.tudelft.jpacman.board.Board board53 = boardFactory48.createBoard(squareArray52);
        nl.tudelft.jpacman.board.Board board54 = boardFactory41.createBoard(squareArray52);
        nl.tudelft.jpacman.board.Board board55 = boardFactory34.createBoard(squareArray52);
        nl.tudelft.jpacman.board.Board board56 = boardFactory27.createBoard(squareArray52);
        nl.tudelft.jpacman.board.Board board57 = boardFactory12.createBoard(squareArray52);
        nl.tudelft.jpacman.board.Board board58 = boardFactory1.createBoard(squareArray52);
        java.lang.Class<?> wildcardClass59 = boardFactory1.getClass();
        org.junit.Assert.assertNotNull(squareArray2);
        org.junit.Assert.assertArrayEquals(squareArray2, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray3);
        org.junit.Assert.assertArrayEquals(squareArray3, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray4);
        org.junit.Assert.assertArrayEquals(squareArray4, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray5);
        org.junit.Assert.assertNotNull(board6);
        org.junit.Assert.assertNotNull(squareArray7);
        org.junit.Assert.assertArrayEquals(squareArray7, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray8);
        org.junit.Assert.assertArrayEquals(squareArray8, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray9);
        org.junit.Assert.assertNotNull(board10);
        org.junit.Assert.assertNotNull(squareArray13);
        org.junit.Assert.assertArrayEquals(squareArray13, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray14);
        org.junit.Assert.assertArrayEquals(squareArray14, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray15);
        org.junit.Assert.assertArrayEquals(squareArray15, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray16);
        org.junit.Assert.assertNotNull(board17);
        org.junit.Assert.assertNotNull(squareArray20);
        org.junit.Assert.assertArrayEquals(squareArray20, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray21);
        org.junit.Assert.assertArrayEquals(squareArray21, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray22);
        org.junit.Assert.assertArrayEquals(squareArray22, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray23);
        org.junit.Assert.assertNotNull(board24);
        org.junit.Assert.assertNotNull(board25);
        org.junit.Assert.assertNotNull(squareArray28);
        org.junit.Assert.assertArrayEquals(squareArray28, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray29);
        org.junit.Assert.assertArrayEquals(squareArray29, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray30);
        org.junit.Assert.assertArrayEquals(squareArray30, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray31);
        org.junit.Assert.assertNotNull(board32);
        org.junit.Assert.assertNotNull(squareArray35);
        org.junit.Assert.assertArrayEquals(squareArray35, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray36);
        org.junit.Assert.assertArrayEquals(squareArray36, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray37);
        org.junit.Assert.assertArrayEquals(squareArray37, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray38);
        org.junit.Assert.assertNotNull(board39);
        org.junit.Assert.assertNotNull(squareArray42);
        org.junit.Assert.assertArrayEquals(squareArray42, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray43);
        org.junit.Assert.assertArrayEquals(squareArray43, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray44);
        org.junit.Assert.assertArrayEquals(squareArray44, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray45);
        org.junit.Assert.assertNotNull(board46);
        org.junit.Assert.assertNotNull(squareArray49);
        org.junit.Assert.assertArrayEquals(squareArray49, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray50);
        org.junit.Assert.assertArrayEquals(squareArray50, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray51);
        org.junit.Assert.assertArrayEquals(squareArray51, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray52);
        org.junit.Assert.assertNotNull(board53);
        org.junit.Assert.assertNotNull(board54);
        org.junit.Assert.assertNotNull(board55);
        org.junit.Assert.assertNotNull(board56);
        org.junit.Assert.assertNotNull(board57);
        org.junit.Assert.assertNotNull(board58);
        org.junit.Assert.assertNotNull(wildcardClass59);
    }

    @Test
    public void test21() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test21");
        nl.tudelft.jpacman.sprite.PacManSprites pacManSprites0 = null;
        nl.tudelft.jpacman.board.BoardFactory boardFactory1 = new nl.tudelft.jpacman.board.BoardFactory(pacManSprites0);
        nl.tudelft.jpacman.sprite.PacManSprites pacManSprites2 = null;
        nl.tudelft.jpacman.board.BoardFactory boardFactory3 = new nl.tudelft.jpacman.board.BoardFactory(pacManSprites2);
        nl.tudelft.jpacman.board.Square[] squareArray4 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray5 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray6 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[][] squareArray7 = new nl.tudelft.jpacman.board.Square[][] { squareArray4, squareArray5, squareArray6 };
        nl.tudelft.jpacman.board.Board board8 = boardFactory3.createBoard(squareArray7);
        nl.tudelft.jpacman.board.Board board9 = boardFactory1.createBoard(squareArray7);
        java.lang.Class<?> wildcardClass10 = boardFactory1.getClass();
        org.junit.Assert.assertNotNull(squareArray4);
        org.junit.Assert.assertArrayEquals(squareArray4, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray5);
        org.junit.Assert.assertArrayEquals(squareArray5, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray6);
        org.junit.Assert.assertArrayEquals(squareArray6, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray7);
        org.junit.Assert.assertNotNull(board8);
        org.junit.Assert.assertNotNull(board9);
        org.junit.Assert.assertNotNull(wildcardClass10);
    }

    @Test
    public void test22() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test22");
        nl.tudelft.jpacman.sprite.PacManSprites pacManSprites0 = null;
        nl.tudelft.jpacman.board.BoardFactory boardFactory1 = new nl.tudelft.jpacman.board.BoardFactory(pacManSprites0);
        nl.tudelft.jpacman.board.Square[] squareArray2 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray3 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray4 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[][] squareArray5 = new nl.tudelft.jpacman.board.Square[][] { squareArray2, squareArray3, squareArray4 };
        nl.tudelft.jpacman.board.Board board6 = boardFactory1.createBoard(squareArray5);
        nl.tudelft.jpacman.sprite.PacManSprites pacManSprites7 = null;
        nl.tudelft.jpacman.board.BoardFactory boardFactory8 = new nl.tudelft.jpacman.board.BoardFactory(pacManSprites7);
        nl.tudelft.jpacman.board.Square[] squareArray9 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray10 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray11 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[][] squareArray12 = new nl.tudelft.jpacman.board.Square[][] { squareArray9, squareArray10, squareArray11 };
        nl.tudelft.jpacman.board.Board board13 = boardFactory8.createBoard(squareArray12);
        nl.tudelft.jpacman.sprite.PacManSprites pacManSprites14 = null;
        nl.tudelft.jpacman.board.BoardFactory boardFactory15 = new nl.tudelft.jpacman.board.BoardFactory(pacManSprites14);
        nl.tudelft.jpacman.board.Square[] squareArray16 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray17 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray18 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[][] squareArray19 = new nl.tudelft.jpacman.board.Square[][] { squareArray16, squareArray17, squareArray18 };
        nl.tudelft.jpacman.board.Board board20 = boardFactory15.createBoard(squareArray19);
        nl.tudelft.jpacman.board.Board board21 = boardFactory8.createBoard(squareArray19);
        nl.tudelft.jpacman.board.Board board22 = boardFactory1.createBoard(squareArray19);
        nl.tudelft.jpacman.sprite.PacManSprites pacManSprites23 = null;
        nl.tudelft.jpacman.board.BoardFactory boardFactory24 = new nl.tudelft.jpacman.board.BoardFactory(pacManSprites23);
        nl.tudelft.jpacman.board.Square[] squareArray25 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray26 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray27 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[][] squareArray28 = new nl.tudelft.jpacman.board.Square[][] { squareArray25, squareArray26, squareArray27 };
        nl.tudelft.jpacman.board.Board board29 = boardFactory24.createBoard(squareArray28);
        nl.tudelft.jpacman.board.Board board30 = boardFactory1.createBoard(squareArray28);
        java.lang.Class<?> wildcardClass31 = board30.getClass();
        org.junit.Assert.assertNotNull(squareArray2);
        org.junit.Assert.assertArrayEquals(squareArray2, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray3);
        org.junit.Assert.assertArrayEquals(squareArray3, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray4);
        org.junit.Assert.assertArrayEquals(squareArray4, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray5);
        org.junit.Assert.assertNotNull(board6);
        org.junit.Assert.assertNotNull(squareArray9);
        org.junit.Assert.assertArrayEquals(squareArray9, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray10);
        org.junit.Assert.assertArrayEquals(squareArray10, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray11);
        org.junit.Assert.assertArrayEquals(squareArray11, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray12);
        org.junit.Assert.assertNotNull(board13);
        org.junit.Assert.assertNotNull(squareArray16);
        org.junit.Assert.assertArrayEquals(squareArray16, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray17);
        org.junit.Assert.assertArrayEquals(squareArray17, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray18);
        org.junit.Assert.assertArrayEquals(squareArray18, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray19);
        org.junit.Assert.assertNotNull(board20);
        org.junit.Assert.assertNotNull(board21);
        org.junit.Assert.assertNotNull(board22);
        org.junit.Assert.assertNotNull(squareArray25);
        org.junit.Assert.assertArrayEquals(squareArray25, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray26);
        org.junit.Assert.assertArrayEquals(squareArray26, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray27);
        org.junit.Assert.assertArrayEquals(squareArray27, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray28);
        org.junit.Assert.assertNotNull(board29);
        org.junit.Assert.assertNotNull(board30);
        org.junit.Assert.assertNotNull(wildcardClass31);
    }

    @Test
    public void test23() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test23");
        nl.tudelft.jpacman.sprite.PacManSprites pacManSprites0 = null;
        nl.tudelft.jpacman.board.BoardFactory boardFactory1 = new nl.tudelft.jpacman.board.BoardFactory(pacManSprites0);
        nl.tudelft.jpacman.sprite.PacManSprites pacManSprites2 = null;
        nl.tudelft.jpacman.board.BoardFactory boardFactory3 = new nl.tudelft.jpacman.board.BoardFactory(pacManSprites2);
        nl.tudelft.jpacman.board.Square[] squareArray4 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray5 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray6 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[][] squareArray7 = new nl.tudelft.jpacman.board.Square[][] { squareArray4, squareArray5, squareArray6 };
        nl.tudelft.jpacman.board.Board board8 = boardFactory3.createBoard(squareArray7);
        nl.tudelft.jpacman.board.Board board9 = boardFactory1.createBoard(squareArray7);
        // The following exception was thrown during execution in test generation
        try {
            nl.tudelft.jpacman.board.Square square10 = boardFactory1.createGround();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"nl.tudelft.jpacman.sprite.PacManSprites.getGroundSprite()\" because \"this.sprites\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(squareArray4);
        org.junit.Assert.assertArrayEquals(squareArray4, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray5);
        org.junit.Assert.assertArrayEquals(squareArray5, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray6);
        org.junit.Assert.assertArrayEquals(squareArray6, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray7);
        org.junit.Assert.assertNotNull(board8);
        org.junit.Assert.assertNotNull(board9);
    }

    @Test
    public void test24() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test24");
        nl.tudelft.jpacman.sprite.PacManSprites pacManSprites0 = null;
        nl.tudelft.jpacman.board.BoardFactory boardFactory1 = new nl.tudelft.jpacman.board.BoardFactory(pacManSprites0);
        nl.tudelft.jpacman.board.Square[] squareArray2 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray3 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray4 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[][] squareArray5 = new nl.tudelft.jpacman.board.Square[][] { squareArray2, squareArray3, squareArray4 };
        nl.tudelft.jpacman.board.Board board6 = boardFactory1.createBoard(squareArray5);
        nl.tudelft.jpacman.sprite.PacManSprites pacManSprites7 = null;
        nl.tudelft.jpacman.board.BoardFactory boardFactory8 = new nl.tudelft.jpacman.board.BoardFactory(pacManSprites7);
        nl.tudelft.jpacman.board.Square[] squareArray9 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray10 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray11 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[][] squareArray12 = new nl.tudelft.jpacman.board.Square[][] { squareArray9, squareArray10, squareArray11 };
        nl.tudelft.jpacman.board.Board board13 = boardFactory8.createBoard(squareArray12);
        nl.tudelft.jpacman.sprite.PacManSprites pacManSprites14 = null;
        nl.tudelft.jpacman.board.BoardFactory boardFactory15 = new nl.tudelft.jpacman.board.BoardFactory(pacManSprites14);
        nl.tudelft.jpacman.board.Square[] squareArray16 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray17 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray18 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[][] squareArray19 = new nl.tudelft.jpacman.board.Square[][] { squareArray16, squareArray17, squareArray18 };
        nl.tudelft.jpacman.board.Board board20 = boardFactory15.createBoard(squareArray19);
        nl.tudelft.jpacman.board.Board board21 = boardFactory8.createBoard(squareArray19);
        nl.tudelft.jpacman.board.Board board22 = boardFactory1.createBoard(squareArray19);
        nl.tudelft.jpacman.sprite.PacManSprites pacManSprites23 = null;
        nl.tudelft.jpacman.board.BoardFactory boardFactory24 = new nl.tudelft.jpacman.board.BoardFactory(pacManSprites23);
        nl.tudelft.jpacman.board.Square[] squareArray25 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray26 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray27 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[][] squareArray28 = new nl.tudelft.jpacman.board.Square[][] { squareArray25, squareArray26, squareArray27 };
        nl.tudelft.jpacman.board.Board board29 = boardFactory24.createBoard(squareArray28);
        nl.tudelft.jpacman.sprite.PacManSprites pacManSprites30 = null;
        nl.tudelft.jpacman.board.BoardFactory boardFactory31 = new nl.tudelft.jpacman.board.BoardFactory(pacManSprites30);
        nl.tudelft.jpacman.board.Square[] squareArray32 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray33 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray34 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[][] squareArray35 = new nl.tudelft.jpacman.board.Square[][] { squareArray32, squareArray33, squareArray34 };
        nl.tudelft.jpacman.board.Board board36 = boardFactory31.createBoard(squareArray35);
        nl.tudelft.jpacman.sprite.PacManSprites pacManSprites37 = null;
        nl.tudelft.jpacman.board.BoardFactory boardFactory38 = new nl.tudelft.jpacman.board.BoardFactory(pacManSprites37);
        nl.tudelft.jpacman.board.Square[] squareArray39 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray40 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray41 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[][] squareArray42 = new nl.tudelft.jpacman.board.Square[][] { squareArray39, squareArray40, squareArray41 };
        nl.tudelft.jpacman.board.Board board43 = boardFactory38.createBoard(squareArray42);
        nl.tudelft.jpacman.sprite.PacManSprites pacManSprites44 = null;
        nl.tudelft.jpacman.board.BoardFactory boardFactory45 = new nl.tudelft.jpacman.board.BoardFactory(pacManSprites44);
        nl.tudelft.jpacman.board.Square[] squareArray46 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray47 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray48 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[][] squareArray49 = new nl.tudelft.jpacman.board.Square[][] { squareArray46, squareArray47, squareArray48 };
        nl.tudelft.jpacman.board.Board board50 = boardFactory45.createBoard(squareArray49);
        nl.tudelft.jpacman.board.Board board51 = boardFactory38.createBoard(squareArray49);
        nl.tudelft.jpacman.board.Board board52 = boardFactory31.createBoard(squareArray49);
        nl.tudelft.jpacman.board.Board board53 = boardFactory24.createBoard(squareArray49);
        nl.tudelft.jpacman.board.Board board54 = boardFactory1.createBoard(squareArray49);
        // The following exception was thrown during execution in test generation
        try {
            nl.tudelft.jpacman.board.Square square55 = boardFactory1.createGround();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"nl.tudelft.jpacman.sprite.PacManSprites.getGroundSprite()\" because \"this.sprites\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(squareArray2);
        org.junit.Assert.assertArrayEquals(squareArray2, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray3);
        org.junit.Assert.assertArrayEquals(squareArray3, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray4);
        org.junit.Assert.assertArrayEquals(squareArray4, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray5);
        org.junit.Assert.assertNotNull(board6);
        org.junit.Assert.assertNotNull(squareArray9);
        org.junit.Assert.assertArrayEquals(squareArray9, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray10);
        org.junit.Assert.assertArrayEquals(squareArray10, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray11);
        org.junit.Assert.assertArrayEquals(squareArray11, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray12);
        org.junit.Assert.assertNotNull(board13);
        org.junit.Assert.assertNotNull(squareArray16);
        org.junit.Assert.assertArrayEquals(squareArray16, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray17);
        org.junit.Assert.assertArrayEquals(squareArray17, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray18);
        org.junit.Assert.assertArrayEquals(squareArray18, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray19);
        org.junit.Assert.assertNotNull(board20);
        org.junit.Assert.assertNotNull(board21);
        org.junit.Assert.assertNotNull(board22);
        org.junit.Assert.assertNotNull(squareArray25);
        org.junit.Assert.assertArrayEquals(squareArray25, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray26);
        org.junit.Assert.assertArrayEquals(squareArray26, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray27);
        org.junit.Assert.assertArrayEquals(squareArray27, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray28);
        org.junit.Assert.assertNotNull(board29);
        org.junit.Assert.assertNotNull(squareArray32);
        org.junit.Assert.assertArrayEquals(squareArray32, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray33);
        org.junit.Assert.assertArrayEquals(squareArray33, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray34);
        org.junit.Assert.assertArrayEquals(squareArray34, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray35);
        org.junit.Assert.assertNotNull(board36);
        org.junit.Assert.assertNotNull(squareArray39);
        org.junit.Assert.assertArrayEquals(squareArray39, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray40);
        org.junit.Assert.assertArrayEquals(squareArray40, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray41);
        org.junit.Assert.assertArrayEquals(squareArray41, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray42);
        org.junit.Assert.assertNotNull(board43);
        org.junit.Assert.assertNotNull(squareArray46);
        org.junit.Assert.assertArrayEquals(squareArray46, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray47);
        org.junit.Assert.assertArrayEquals(squareArray47, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray48);
        org.junit.Assert.assertArrayEquals(squareArray48, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray49);
        org.junit.Assert.assertNotNull(board50);
        org.junit.Assert.assertNotNull(board51);
        org.junit.Assert.assertNotNull(board52);
        org.junit.Assert.assertNotNull(board53);
        org.junit.Assert.assertNotNull(board54);
    }

    @Test
    public void test25() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test25");
        nl.tudelft.jpacman.sprite.PacManSprites pacManSprites0 = null;
        nl.tudelft.jpacman.board.BoardFactory boardFactory1 = new nl.tudelft.jpacman.board.BoardFactory(pacManSprites0);
        nl.tudelft.jpacman.board.Square[] squareArray2 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray3 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray4 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[][] squareArray5 = new nl.tudelft.jpacman.board.Square[][] { squareArray2, squareArray3, squareArray4 };
        nl.tudelft.jpacman.board.Board board6 = boardFactory1.createBoard(squareArray5);
        nl.tudelft.jpacman.board.Square[] squareArray7 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray8 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[][] squareArray9 = new nl.tudelft.jpacman.board.Square[][] { squareArray7, squareArray8 };
        nl.tudelft.jpacman.board.Board board10 = boardFactory1.createBoard(squareArray9);
        nl.tudelft.jpacman.sprite.PacManSprites pacManSprites11 = null;
        nl.tudelft.jpacman.board.BoardFactory boardFactory12 = new nl.tudelft.jpacman.board.BoardFactory(pacManSprites11);
        nl.tudelft.jpacman.board.Square[] squareArray13 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray14 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray15 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[][] squareArray16 = new nl.tudelft.jpacman.board.Square[][] { squareArray13, squareArray14, squareArray15 };
        nl.tudelft.jpacman.board.Board board17 = boardFactory12.createBoard(squareArray16);
        nl.tudelft.jpacman.board.Square[] squareArray18 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray19 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[][] squareArray20 = new nl.tudelft.jpacman.board.Square[][] { squareArray18, squareArray19 };
        nl.tudelft.jpacman.board.Board board21 = boardFactory12.createBoard(squareArray20);
        nl.tudelft.jpacman.sprite.PacManSprites pacManSprites22 = null;
        nl.tudelft.jpacman.board.BoardFactory boardFactory23 = new nl.tudelft.jpacman.board.BoardFactory(pacManSprites22);
        nl.tudelft.jpacman.board.Square[] squareArray24 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray25 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray26 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[][] squareArray27 = new nl.tudelft.jpacman.board.Square[][] { squareArray24, squareArray25, squareArray26 };
        nl.tudelft.jpacman.board.Board board28 = boardFactory23.createBoard(squareArray27);
        nl.tudelft.jpacman.sprite.PacManSprites pacManSprites29 = null;
        nl.tudelft.jpacman.board.BoardFactory boardFactory30 = new nl.tudelft.jpacman.board.BoardFactory(pacManSprites29);
        nl.tudelft.jpacman.board.Square[] squareArray31 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray32 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray33 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[][] squareArray34 = new nl.tudelft.jpacman.board.Square[][] { squareArray31, squareArray32, squareArray33 };
        nl.tudelft.jpacman.board.Board board35 = boardFactory30.createBoard(squareArray34);
        nl.tudelft.jpacman.board.Board board36 = boardFactory23.createBoard(squareArray34);
        nl.tudelft.jpacman.sprite.PacManSprites pacManSprites37 = null;
        nl.tudelft.jpacman.board.BoardFactory boardFactory38 = new nl.tudelft.jpacman.board.BoardFactory(pacManSprites37);
        nl.tudelft.jpacman.board.Square[] squareArray39 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray40 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray41 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[][] squareArray42 = new nl.tudelft.jpacman.board.Square[][] { squareArray39, squareArray40, squareArray41 };
        nl.tudelft.jpacman.board.Board board43 = boardFactory38.createBoard(squareArray42);
        nl.tudelft.jpacman.sprite.PacManSprites pacManSprites44 = null;
        nl.tudelft.jpacman.board.BoardFactory boardFactory45 = new nl.tudelft.jpacman.board.BoardFactory(pacManSprites44);
        nl.tudelft.jpacman.board.Square[] squareArray46 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray47 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray48 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[][] squareArray49 = new nl.tudelft.jpacman.board.Square[][] { squareArray46, squareArray47, squareArray48 };
        nl.tudelft.jpacman.board.Board board50 = boardFactory45.createBoard(squareArray49);
        nl.tudelft.jpacman.sprite.PacManSprites pacManSprites51 = null;
        nl.tudelft.jpacman.board.BoardFactory boardFactory52 = new nl.tudelft.jpacman.board.BoardFactory(pacManSprites51);
        nl.tudelft.jpacman.board.Square[] squareArray53 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray54 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray55 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[][] squareArray56 = new nl.tudelft.jpacman.board.Square[][] { squareArray53, squareArray54, squareArray55 };
        nl.tudelft.jpacman.board.Board board57 = boardFactory52.createBoard(squareArray56);
        nl.tudelft.jpacman.sprite.PacManSprites pacManSprites58 = null;
        nl.tudelft.jpacman.board.BoardFactory boardFactory59 = new nl.tudelft.jpacman.board.BoardFactory(pacManSprites58);
        nl.tudelft.jpacman.board.Square[] squareArray60 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray61 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray62 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[][] squareArray63 = new nl.tudelft.jpacman.board.Square[][] { squareArray60, squareArray61, squareArray62 };
        nl.tudelft.jpacman.board.Board board64 = boardFactory59.createBoard(squareArray63);
        nl.tudelft.jpacman.board.Board board65 = boardFactory52.createBoard(squareArray63);
        nl.tudelft.jpacman.board.Board board66 = boardFactory45.createBoard(squareArray63);
        nl.tudelft.jpacman.board.Board board67 = boardFactory38.createBoard(squareArray63);
        nl.tudelft.jpacman.board.Board board68 = boardFactory23.createBoard(squareArray63);
        nl.tudelft.jpacman.board.Board board69 = boardFactory12.createBoard(squareArray63);
        nl.tudelft.jpacman.board.Board board70 = boardFactory1.createBoard(squareArray63);
        java.lang.Class<?> wildcardClass71 = board70.getClass();
        org.junit.Assert.assertNotNull(squareArray2);
        org.junit.Assert.assertArrayEquals(squareArray2, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray3);
        org.junit.Assert.assertArrayEquals(squareArray3, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray4);
        org.junit.Assert.assertArrayEquals(squareArray4, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray5);
        org.junit.Assert.assertNotNull(board6);
        org.junit.Assert.assertNotNull(squareArray7);
        org.junit.Assert.assertArrayEquals(squareArray7, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray8);
        org.junit.Assert.assertArrayEquals(squareArray8, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray9);
        org.junit.Assert.assertNotNull(board10);
        org.junit.Assert.assertNotNull(squareArray13);
        org.junit.Assert.assertArrayEquals(squareArray13, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray14);
        org.junit.Assert.assertArrayEquals(squareArray14, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray15);
        org.junit.Assert.assertArrayEquals(squareArray15, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray16);
        org.junit.Assert.assertNotNull(board17);
        org.junit.Assert.assertNotNull(squareArray18);
        org.junit.Assert.assertArrayEquals(squareArray18, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray19);
        org.junit.Assert.assertArrayEquals(squareArray19, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray20);
        org.junit.Assert.assertNotNull(board21);
        org.junit.Assert.assertNotNull(squareArray24);
        org.junit.Assert.assertArrayEquals(squareArray24, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray25);
        org.junit.Assert.assertArrayEquals(squareArray25, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray26);
        org.junit.Assert.assertArrayEquals(squareArray26, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray27);
        org.junit.Assert.assertNotNull(board28);
        org.junit.Assert.assertNotNull(squareArray31);
        org.junit.Assert.assertArrayEquals(squareArray31, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray32);
        org.junit.Assert.assertArrayEquals(squareArray32, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray33);
        org.junit.Assert.assertArrayEquals(squareArray33, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray34);
        org.junit.Assert.assertNotNull(board35);
        org.junit.Assert.assertNotNull(board36);
        org.junit.Assert.assertNotNull(squareArray39);
        org.junit.Assert.assertArrayEquals(squareArray39, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray40);
        org.junit.Assert.assertArrayEquals(squareArray40, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray41);
        org.junit.Assert.assertArrayEquals(squareArray41, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray42);
        org.junit.Assert.assertNotNull(board43);
        org.junit.Assert.assertNotNull(squareArray46);
        org.junit.Assert.assertArrayEquals(squareArray46, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray47);
        org.junit.Assert.assertArrayEquals(squareArray47, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray48);
        org.junit.Assert.assertArrayEquals(squareArray48, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray49);
        org.junit.Assert.assertNotNull(board50);
        org.junit.Assert.assertNotNull(squareArray53);
        org.junit.Assert.assertArrayEquals(squareArray53, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray54);
        org.junit.Assert.assertArrayEquals(squareArray54, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray55);
        org.junit.Assert.assertArrayEquals(squareArray55, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray56);
        org.junit.Assert.assertNotNull(board57);
        org.junit.Assert.assertNotNull(squareArray60);
        org.junit.Assert.assertArrayEquals(squareArray60, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray61);
        org.junit.Assert.assertArrayEquals(squareArray61, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray62);
        org.junit.Assert.assertArrayEquals(squareArray62, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray63);
        org.junit.Assert.assertNotNull(board64);
        org.junit.Assert.assertNotNull(board65);
        org.junit.Assert.assertNotNull(board66);
        org.junit.Assert.assertNotNull(board67);
        org.junit.Assert.assertNotNull(board68);
        org.junit.Assert.assertNotNull(board69);
        org.junit.Assert.assertNotNull(board70);
        org.junit.Assert.assertNotNull(wildcardClass71);
    }

    @Test
    public void test26() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test26");
        nl.tudelft.jpacman.sprite.PacManSprites pacManSprites0 = null;
        nl.tudelft.jpacman.board.BoardFactory boardFactory1 = new nl.tudelft.jpacman.board.BoardFactory(pacManSprites0);
        nl.tudelft.jpacman.board.Square[] squareArray2 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray3 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray4 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[][] squareArray5 = new nl.tudelft.jpacman.board.Square[][] { squareArray2, squareArray3, squareArray4 };
        nl.tudelft.jpacman.board.Board board6 = boardFactory1.createBoard(squareArray5);
        nl.tudelft.jpacman.sprite.PacManSprites pacManSprites7 = null;
        nl.tudelft.jpacman.board.BoardFactory boardFactory8 = new nl.tudelft.jpacman.board.BoardFactory(pacManSprites7);
        nl.tudelft.jpacman.board.Square[] squareArray9 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray10 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray11 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[][] squareArray12 = new nl.tudelft.jpacman.board.Square[][] { squareArray9, squareArray10, squareArray11 };
        nl.tudelft.jpacman.board.Board board13 = boardFactory8.createBoard(squareArray12);
        nl.tudelft.jpacman.board.Board board14 = boardFactory1.createBoard(squareArray12);
        // The following exception was thrown during execution in test generation
        try {
            nl.tudelft.jpacman.board.Square square15 = boardFactory1.createWall();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"nl.tudelft.jpacman.sprite.PacManSprites.getWallSprite()\" because \"this.sprites\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(squareArray2);
        org.junit.Assert.assertArrayEquals(squareArray2, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray3);
        org.junit.Assert.assertArrayEquals(squareArray3, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray4);
        org.junit.Assert.assertArrayEquals(squareArray4, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray5);
        org.junit.Assert.assertNotNull(board6);
        org.junit.Assert.assertNotNull(squareArray9);
        org.junit.Assert.assertArrayEquals(squareArray9, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray10);
        org.junit.Assert.assertArrayEquals(squareArray10, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray11);
        org.junit.Assert.assertArrayEquals(squareArray11, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray12);
        org.junit.Assert.assertNotNull(board13);
        org.junit.Assert.assertNotNull(board14);
    }

    @Test
    public void test27() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test27");
        nl.tudelft.jpacman.sprite.PacManSprites pacManSprites0 = null;
        nl.tudelft.jpacman.board.BoardFactory boardFactory1 = new nl.tudelft.jpacman.board.BoardFactory(pacManSprites0);
        nl.tudelft.jpacman.board.Square[] squareArray2 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray3 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray4 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[][] squareArray5 = new nl.tudelft.jpacman.board.Square[][] { squareArray2, squareArray3, squareArray4 };
        nl.tudelft.jpacman.board.Board board6 = boardFactory1.createBoard(squareArray5);
        nl.tudelft.jpacman.sprite.PacManSprites pacManSprites7 = null;
        nl.tudelft.jpacman.board.BoardFactory boardFactory8 = new nl.tudelft.jpacman.board.BoardFactory(pacManSprites7);
        nl.tudelft.jpacman.board.Square[] squareArray9 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray10 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray11 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[][] squareArray12 = new nl.tudelft.jpacman.board.Square[][] { squareArray9, squareArray10, squareArray11 };
        nl.tudelft.jpacman.board.Board board13 = boardFactory8.createBoard(squareArray12);
        nl.tudelft.jpacman.board.Board board14 = boardFactory1.createBoard(squareArray12);
        nl.tudelft.jpacman.sprite.PacManSprites pacManSprites15 = null;
        nl.tudelft.jpacman.board.BoardFactory boardFactory16 = new nl.tudelft.jpacman.board.BoardFactory(pacManSprites15);
        nl.tudelft.jpacman.board.Square[] squareArray17 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray18 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray19 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[][] squareArray20 = new nl.tudelft.jpacman.board.Square[][] { squareArray17, squareArray18, squareArray19 };
        nl.tudelft.jpacman.board.Board board21 = boardFactory16.createBoard(squareArray20);
        nl.tudelft.jpacman.sprite.PacManSprites pacManSprites22 = null;
        nl.tudelft.jpacman.board.BoardFactory boardFactory23 = new nl.tudelft.jpacman.board.BoardFactory(pacManSprites22);
        nl.tudelft.jpacman.board.Square[] squareArray24 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray25 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray26 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[][] squareArray27 = new nl.tudelft.jpacman.board.Square[][] { squareArray24, squareArray25, squareArray26 };
        nl.tudelft.jpacman.board.Board board28 = boardFactory23.createBoard(squareArray27);
        nl.tudelft.jpacman.sprite.PacManSprites pacManSprites29 = null;
        nl.tudelft.jpacman.board.BoardFactory boardFactory30 = new nl.tudelft.jpacman.board.BoardFactory(pacManSprites29);
        nl.tudelft.jpacman.board.Square[] squareArray31 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray32 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray33 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[][] squareArray34 = new nl.tudelft.jpacman.board.Square[][] { squareArray31, squareArray32, squareArray33 };
        nl.tudelft.jpacman.board.Board board35 = boardFactory30.createBoard(squareArray34);
        nl.tudelft.jpacman.sprite.PacManSprites pacManSprites36 = null;
        nl.tudelft.jpacman.board.BoardFactory boardFactory37 = new nl.tudelft.jpacman.board.BoardFactory(pacManSprites36);
        nl.tudelft.jpacman.board.Square[] squareArray38 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray39 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray40 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[][] squareArray41 = new nl.tudelft.jpacman.board.Square[][] { squareArray38, squareArray39, squareArray40 };
        nl.tudelft.jpacman.board.Board board42 = boardFactory37.createBoard(squareArray41);
        nl.tudelft.jpacman.board.Board board43 = boardFactory30.createBoard(squareArray41);
        nl.tudelft.jpacman.board.Board board44 = boardFactory23.createBoard(squareArray41);
        nl.tudelft.jpacman.board.Board board45 = boardFactory16.createBoard(squareArray41);
        nl.tudelft.jpacman.board.Board board46 = boardFactory1.createBoard(squareArray41);
        nl.tudelft.jpacman.sprite.PacManSprites pacManSprites47 = null;
        nl.tudelft.jpacman.board.BoardFactory boardFactory48 = new nl.tudelft.jpacman.board.BoardFactory(pacManSprites47);
        nl.tudelft.jpacman.board.Square[] squareArray49 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray50 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray51 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[][] squareArray52 = new nl.tudelft.jpacman.board.Square[][] { squareArray49, squareArray50, squareArray51 };
        nl.tudelft.jpacman.board.Board board53 = boardFactory48.createBoard(squareArray52);
        nl.tudelft.jpacman.sprite.PacManSprites pacManSprites54 = null;
        nl.tudelft.jpacman.board.BoardFactory boardFactory55 = new nl.tudelft.jpacman.board.BoardFactory(pacManSprites54);
        nl.tudelft.jpacman.board.Square[] squareArray56 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray57 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray58 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[][] squareArray59 = new nl.tudelft.jpacman.board.Square[][] { squareArray56, squareArray57, squareArray58 };
        nl.tudelft.jpacman.board.Board board60 = boardFactory55.createBoard(squareArray59);
        nl.tudelft.jpacman.sprite.PacManSprites pacManSprites61 = null;
        nl.tudelft.jpacman.board.BoardFactory boardFactory62 = new nl.tudelft.jpacman.board.BoardFactory(pacManSprites61);
        nl.tudelft.jpacman.board.Square[] squareArray63 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray64 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray65 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[][] squareArray66 = new nl.tudelft.jpacman.board.Square[][] { squareArray63, squareArray64, squareArray65 };
        nl.tudelft.jpacman.board.Board board67 = boardFactory62.createBoard(squareArray66);
        nl.tudelft.jpacman.board.Board board68 = boardFactory55.createBoard(squareArray66);
        nl.tudelft.jpacman.board.Board board69 = boardFactory48.createBoard(squareArray66);
        nl.tudelft.jpacman.board.Board board70 = boardFactory1.createBoard(squareArray66);
        java.lang.Class<?> wildcardClass71 = board70.getClass();
        org.junit.Assert.assertNotNull(squareArray2);
        org.junit.Assert.assertArrayEquals(squareArray2, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray3);
        org.junit.Assert.assertArrayEquals(squareArray3, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray4);
        org.junit.Assert.assertArrayEquals(squareArray4, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray5);
        org.junit.Assert.assertNotNull(board6);
        org.junit.Assert.assertNotNull(squareArray9);
        org.junit.Assert.assertArrayEquals(squareArray9, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray10);
        org.junit.Assert.assertArrayEquals(squareArray10, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray11);
        org.junit.Assert.assertArrayEquals(squareArray11, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray12);
        org.junit.Assert.assertNotNull(board13);
        org.junit.Assert.assertNotNull(board14);
        org.junit.Assert.assertNotNull(squareArray17);
        org.junit.Assert.assertArrayEquals(squareArray17, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray18);
        org.junit.Assert.assertArrayEquals(squareArray18, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray19);
        org.junit.Assert.assertArrayEquals(squareArray19, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray20);
        org.junit.Assert.assertNotNull(board21);
        org.junit.Assert.assertNotNull(squareArray24);
        org.junit.Assert.assertArrayEquals(squareArray24, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray25);
        org.junit.Assert.assertArrayEquals(squareArray25, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray26);
        org.junit.Assert.assertArrayEquals(squareArray26, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray27);
        org.junit.Assert.assertNotNull(board28);
        org.junit.Assert.assertNotNull(squareArray31);
        org.junit.Assert.assertArrayEquals(squareArray31, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray32);
        org.junit.Assert.assertArrayEquals(squareArray32, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray33);
        org.junit.Assert.assertArrayEquals(squareArray33, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray34);
        org.junit.Assert.assertNotNull(board35);
        org.junit.Assert.assertNotNull(squareArray38);
        org.junit.Assert.assertArrayEquals(squareArray38, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray39);
        org.junit.Assert.assertArrayEquals(squareArray39, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray40);
        org.junit.Assert.assertArrayEquals(squareArray40, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray41);
        org.junit.Assert.assertNotNull(board42);
        org.junit.Assert.assertNotNull(board43);
        org.junit.Assert.assertNotNull(board44);
        org.junit.Assert.assertNotNull(board45);
        org.junit.Assert.assertNotNull(board46);
        org.junit.Assert.assertNotNull(squareArray49);
        org.junit.Assert.assertArrayEquals(squareArray49, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray50);
        org.junit.Assert.assertArrayEquals(squareArray50, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray51);
        org.junit.Assert.assertArrayEquals(squareArray51, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray52);
        org.junit.Assert.assertNotNull(board53);
        org.junit.Assert.assertNotNull(squareArray56);
        org.junit.Assert.assertArrayEquals(squareArray56, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray57);
        org.junit.Assert.assertArrayEquals(squareArray57, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray58);
        org.junit.Assert.assertArrayEquals(squareArray58, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray59);
        org.junit.Assert.assertNotNull(board60);
        org.junit.Assert.assertNotNull(squareArray63);
        org.junit.Assert.assertArrayEquals(squareArray63, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray64);
        org.junit.Assert.assertArrayEquals(squareArray64, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray65);
        org.junit.Assert.assertArrayEquals(squareArray65, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray66);
        org.junit.Assert.assertNotNull(board67);
        org.junit.Assert.assertNotNull(board68);
        org.junit.Assert.assertNotNull(board69);
        org.junit.Assert.assertNotNull(board70);
        org.junit.Assert.assertNotNull(wildcardClass71);
    }

    @Test
    public void test28() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test28");
        nl.tudelft.jpacman.sprite.PacManSprites pacManSprites0 = null;
        nl.tudelft.jpacman.board.BoardFactory boardFactory1 = new nl.tudelft.jpacman.board.BoardFactory(pacManSprites0);
        nl.tudelft.jpacman.board.Square[] squareArray2 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray3 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray4 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[][] squareArray5 = new nl.tudelft.jpacman.board.Square[][] { squareArray2, squareArray3, squareArray4 };
        nl.tudelft.jpacman.board.Board board6 = boardFactory1.createBoard(squareArray5);
        java.lang.Class<?> wildcardClass7 = boardFactory1.getClass();
        org.junit.Assert.assertNotNull(squareArray2);
        org.junit.Assert.assertArrayEquals(squareArray2, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray3);
        org.junit.Assert.assertArrayEquals(squareArray3, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray4);
        org.junit.Assert.assertArrayEquals(squareArray4, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray5);
        org.junit.Assert.assertNotNull(board6);
        org.junit.Assert.assertNotNull(wildcardClass7);
    }

    @Test
    public void test29() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test29");
        nl.tudelft.jpacman.sprite.PacManSprites pacManSprites0 = null;
        nl.tudelft.jpacman.board.BoardFactory boardFactory1 = new nl.tudelft.jpacman.board.BoardFactory(pacManSprites0);
        nl.tudelft.jpacman.board.Square[] squareArray2 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray3 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray4 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[][] squareArray5 = new nl.tudelft.jpacman.board.Square[][] { squareArray2, squareArray3, squareArray4 };
        nl.tudelft.jpacman.board.Board board6 = boardFactory1.createBoard(squareArray5);
        nl.tudelft.jpacman.sprite.PacManSprites pacManSprites7 = null;
        nl.tudelft.jpacman.board.BoardFactory boardFactory8 = new nl.tudelft.jpacman.board.BoardFactory(pacManSprites7);
        nl.tudelft.jpacman.board.Square[] squareArray9 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray10 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray11 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[][] squareArray12 = new nl.tudelft.jpacman.board.Square[][] { squareArray9, squareArray10, squareArray11 };
        nl.tudelft.jpacman.board.Board board13 = boardFactory8.createBoard(squareArray12);
        nl.tudelft.jpacman.sprite.PacManSprites pacManSprites14 = null;
        nl.tudelft.jpacman.board.BoardFactory boardFactory15 = new nl.tudelft.jpacman.board.BoardFactory(pacManSprites14);
        nl.tudelft.jpacman.board.Square[] squareArray16 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray17 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray18 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[][] squareArray19 = new nl.tudelft.jpacman.board.Square[][] { squareArray16, squareArray17, squareArray18 };
        nl.tudelft.jpacman.board.Board board20 = boardFactory15.createBoard(squareArray19);
        nl.tudelft.jpacman.board.Board board21 = boardFactory8.createBoard(squareArray19);
        nl.tudelft.jpacman.board.Board board22 = boardFactory1.createBoard(squareArray19);
        nl.tudelft.jpacman.sprite.PacManSprites pacManSprites23 = null;
        nl.tudelft.jpacman.board.BoardFactory boardFactory24 = new nl.tudelft.jpacman.board.BoardFactory(pacManSprites23);
        nl.tudelft.jpacman.board.Square[] squareArray25 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray26 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray27 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[][] squareArray28 = new nl.tudelft.jpacman.board.Square[][] { squareArray25, squareArray26, squareArray27 };
        nl.tudelft.jpacman.board.Board board29 = boardFactory24.createBoard(squareArray28);
        nl.tudelft.jpacman.sprite.PacManSprites pacManSprites30 = null;
        nl.tudelft.jpacman.board.BoardFactory boardFactory31 = new nl.tudelft.jpacman.board.BoardFactory(pacManSprites30);
        nl.tudelft.jpacman.board.Square[] squareArray32 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray33 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray34 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[][] squareArray35 = new nl.tudelft.jpacman.board.Square[][] { squareArray32, squareArray33, squareArray34 };
        nl.tudelft.jpacman.board.Board board36 = boardFactory31.createBoard(squareArray35);
        nl.tudelft.jpacman.sprite.PacManSprites pacManSprites37 = null;
        nl.tudelft.jpacman.board.BoardFactory boardFactory38 = new nl.tudelft.jpacman.board.BoardFactory(pacManSprites37);
        nl.tudelft.jpacman.board.Square[] squareArray39 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray40 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray41 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[][] squareArray42 = new nl.tudelft.jpacman.board.Square[][] { squareArray39, squareArray40, squareArray41 };
        nl.tudelft.jpacman.board.Board board43 = boardFactory38.createBoard(squareArray42);
        nl.tudelft.jpacman.sprite.PacManSprites pacManSprites44 = null;
        nl.tudelft.jpacman.board.BoardFactory boardFactory45 = new nl.tudelft.jpacman.board.BoardFactory(pacManSprites44);
        nl.tudelft.jpacman.board.Square[] squareArray46 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray47 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray48 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[][] squareArray49 = new nl.tudelft.jpacman.board.Square[][] { squareArray46, squareArray47, squareArray48 };
        nl.tudelft.jpacman.board.Board board50 = boardFactory45.createBoard(squareArray49);
        nl.tudelft.jpacman.board.Board board51 = boardFactory38.createBoard(squareArray49);
        nl.tudelft.jpacman.board.Board board52 = boardFactory31.createBoard(squareArray49);
        nl.tudelft.jpacman.board.Board board53 = boardFactory24.createBoard(squareArray49);
        nl.tudelft.jpacman.board.Board board54 = boardFactory1.createBoard(squareArray49);
        nl.tudelft.jpacman.board.Square[] squareArray55 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray56 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[][] squareArray57 = new nl.tudelft.jpacman.board.Square[][] { squareArray55, squareArray56 };
        nl.tudelft.jpacman.board.Board board58 = boardFactory1.createBoard(squareArray57);
        nl.tudelft.jpacman.sprite.PacManSprites pacManSprites59 = null;
        nl.tudelft.jpacman.board.BoardFactory boardFactory60 = new nl.tudelft.jpacman.board.BoardFactory(pacManSprites59);
        nl.tudelft.jpacman.sprite.PacManSprites pacManSprites61 = null;
        nl.tudelft.jpacman.board.BoardFactory boardFactory62 = new nl.tudelft.jpacman.board.BoardFactory(pacManSprites61);
        nl.tudelft.jpacman.board.Square[] squareArray63 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray64 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray65 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[][] squareArray66 = new nl.tudelft.jpacman.board.Square[][] { squareArray63, squareArray64, squareArray65 };
        nl.tudelft.jpacman.board.Board board67 = boardFactory62.createBoard(squareArray66);
        nl.tudelft.jpacman.board.Board board68 = boardFactory60.createBoard(squareArray66);
        nl.tudelft.jpacman.sprite.PacManSprites pacManSprites69 = null;
        nl.tudelft.jpacman.board.BoardFactory boardFactory70 = new nl.tudelft.jpacman.board.BoardFactory(pacManSprites69);
        nl.tudelft.jpacman.board.Square[] squareArray71 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray72 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray73 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[][] squareArray74 = new nl.tudelft.jpacman.board.Square[][] { squareArray71, squareArray72, squareArray73 };
        nl.tudelft.jpacman.board.Board board75 = boardFactory70.createBoard(squareArray74);
        nl.tudelft.jpacman.sprite.PacManSprites pacManSprites76 = null;
        nl.tudelft.jpacman.board.BoardFactory boardFactory77 = new nl.tudelft.jpacman.board.BoardFactory(pacManSprites76);
        nl.tudelft.jpacman.board.Square[] squareArray78 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray79 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray80 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[][] squareArray81 = new nl.tudelft.jpacman.board.Square[][] { squareArray78, squareArray79, squareArray80 };
        nl.tudelft.jpacman.board.Board board82 = boardFactory77.createBoard(squareArray81);
        nl.tudelft.jpacman.board.Board board83 = boardFactory70.createBoard(squareArray81);
        nl.tudelft.jpacman.board.Board board84 = boardFactory60.createBoard(squareArray81);
        nl.tudelft.jpacman.board.Board board85 = boardFactory1.createBoard(squareArray81);
        java.lang.Class<?> wildcardClass86 = board85.getClass();
        org.junit.Assert.assertNotNull(squareArray2);
        org.junit.Assert.assertArrayEquals(squareArray2, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray3);
        org.junit.Assert.assertArrayEquals(squareArray3, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray4);
        org.junit.Assert.assertArrayEquals(squareArray4, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray5);
        org.junit.Assert.assertNotNull(board6);
        org.junit.Assert.assertNotNull(squareArray9);
        org.junit.Assert.assertArrayEquals(squareArray9, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray10);
        org.junit.Assert.assertArrayEquals(squareArray10, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray11);
        org.junit.Assert.assertArrayEquals(squareArray11, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray12);
        org.junit.Assert.assertNotNull(board13);
        org.junit.Assert.assertNotNull(squareArray16);
        org.junit.Assert.assertArrayEquals(squareArray16, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray17);
        org.junit.Assert.assertArrayEquals(squareArray17, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray18);
        org.junit.Assert.assertArrayEquals(squareArray18, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray19);
        org.junit.Assert.assertNotNull(board20);
        org.junit.Assert.assertNotNull(board21);
        org.junit.Assert.assertNotNull(board22);
        org.junit.Assert.assertNotNull(squareArray25);
        org.junit.Assert.assertArrayEquals(squareArray25, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray26);
        org.junit.Assert.assertArrayEquals(squareArray26, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray27);
        org.junit.Assert.assertArrayEquals(squareArray27, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray28);
        org.junit.Assert.assertNotNull(board29);
        org.junit.Assert.assertNotNull(squareArray32);
        org.junit.Assert.assertArrayEquals(squareArray32, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray33);
        org.junit.Assert.assertArrayEquals(squareArray33, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray34);
        org.junit.Assert.assertArrayEquals(squareArray34, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray35);
        org.junit.Assert.assertNotNull(board36);
        org.junit.Assert.assertNotNull(squareArray39);
        org.junit.Assert.assertArrayEquals(squareArray39, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray40);
        org.junit.Assert.assertArrayEquals(squareArray40, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray41);
        org.junit.Assert.assertArrayEquals(squareArray41, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray42);
        org.junit.Assert.assertNotNull(board43);
        org.junit.Assert.assertNotNull(squareArray46);
        org.junit.Assert.assertArrayEquals(squareArray46, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray47);
        org.junit.Assert.assertArrayEquals(squareArray47, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray48);
        org.junit.Assert.assertArrayEquals(squareArray48, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray49);
        org.junit.Assert.assertNotNull(board50);
        org.junit.Assert.assertNotNull(board51);
        org.junit.Assert.assertNotNull(board52);
        org.junit.Assert.assertNotNull(board53);
        org.junit.Assert.assertNotNull(board54);
        org.junit.Assert.assertNotNull(squareArray55);
        org.junit.Assert.assertArrayEquals(squareArray55, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray56);
        org.junit.Assert.assertArrayEquals(squareArray56, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray57);
        org.junit.Assert.assertNotNull(board58);
        org.junit.Assert.assertNotNull(squareArray63);
        org.junit.Assert.assertArrayEquals(squareArray63, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray64);
        org.junit.Assert.assertArrayEquals(squareArray64, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray65);
        org.junit.Assert.assertArrayEquals(squareArray65, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray66);
        org.junit.Assert.assertNotNull(board67);
        org.junit.Assert.assertNotNull(board68);
        org.junit.Assert.assertNotNull(squareArray71);
        org.junit.Assert.assertArrayEquals(squareArray71, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray72);
        org.junit.Assert.assertArrayEquals(squareArray72, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray73);
        org.junit.Assert.assertArrayEquals(squareArray73, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray74);
        org.junit.Assert.assertNotNull(board75);
        org.junit.Assert.assertNotNull(squareArray78);
        org.junit.Assert.assertArrayEquals(squareArray78, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray79);
        org.junit.Assert.assertArrayEquals(squareArray79, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray80);
        org.junit.Assert.assertArrayEquals(squareArray80, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray81);
        org.junit.Assert.assertNotNull(board82);
        org.junit.Assert.assertNotNull(board83);
        org.junit.Assert.assertNotNull(board84);
        org.junit.Assert.assertNotNull(board85);
        org.junit.Assert.assertNotNull(wildcardClass86);
    }

    @Test
    public void test30() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test30");
        java.lang.Object obj0 = new java.lang.Object();
        java.lang.Class<?> wildcardClass1 = obj0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass1);
    }

    @Test
    public void test31() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test31");
        nl.tudelft.jpacman.sprite.PacManSprites pacManSprites0 = null;
        nl.tudelft.jpacman.board.BoardFactory boardFactory1 = new nl.tudelft.jpacman.board.BoardFactory(pacManSprites0);
        nl.tudelft.jpacman.board.Square[] squareArray2 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray3 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray4 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[][] squareArray5 = new nl.tudelft.jpacman.board.Square[][] { squareArray2, squareArray3, squareArray4 };
        nl.tudelft.jpacman.board.Board board6 = boardFactory1.createBoard(squareArray5);
        nl.tudelft.jpacman.board.Square[] squareArray7 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray8 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[][] squareArray9 = new nl.tudelft.jpacman.board.Square[][] { squareArray7, squareArray8 };
        nl.tudelft.jpacman.board.Board board10 = boardFactory1.createBoard(squareArray9);
        nl.tudelft.jpacman.sprite.PacManSprites pacManSprites11 = null;
        nl.tudelft.jpacman.board.BoardFactory boardFactory12 = new nl.tudelft.jpacman.board.BoardFactory(pacManSprites11);
        nl.tudelft.jpacman.board.Square[] squareArray13 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray14 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray15 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[][] squareArray16 = new nl.tudelft.jpacman.board.Square[][] { squareArray13, squareArray14, squareArray15 };
        nl.tudelft.jpacman.board.Board board17 = boardFactory12.createBoard(squareArray16);
        nl.tudelft.jpacman.sprite.PacManSprites pacManSprites18 = null;
        nl.tudelft.jpacman.board.BoardFactory boardFactory19 = new nl.tudelft.jpacman.board.BoardFactory(pacManSprites18);
        nl.tudelft.jpacman.board.Square[] squareArray20 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray21 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray22 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[][] squareArray23 = new nl.tudelft.jpacman.board.Square[][] { squareArray20, squareArray21, squareArray22 };
        nl.tudelft.jpacman.board.Board board24 = boardFactory19.createBoard(squareArray23);
        nl.tudelft.jpacman.board.Board board25 = boardFactory12.createBoard(squareArray23);
        nl.tudelft.jpacman.sprite.PacManSprites pacManSprites26 = null;
        nl.tudelft.jpacman.board.BoardFactory boardFactory27 = new nl.tudelft.jpacman.board.BoardFactory(pacManSprites26);
        nl.tudelft.jpacman.board.Square[] squareArray28 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray29 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray30 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[][] squareArray31 = new nl.tudelft.jpacman.board.Square[][] { squareArray28, squareArray29, squareArray30 };
        nl.tudelft.jpacman.board.Board board32 = boardFactory27.createBoard(squareArray31);
        nl.tudelft.jpacman.sprite.PacManSprites pacManSprites33 = null;
        nl.tudelft.jpacman.board.BoardFactory boardFactory34 = new nl.tudelft.jpacman.board.BoardFactory(pacManSprites33);
        nl.tudelft.jpacman.board.Square[] squareArray35 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray36 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray37 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[][] squareArray38 = new nl.tudelft.jpacman.board.Square[][] { squareArray35, squareArray36, squareArray37 };
        nl.tudelft.jpacman.board.Board board39 = boardFactory34.createBoard(squareArray38);
        nl.tudelft.jpacman.sprite.PacManSprites pacManSprites40 = null;
        nl.tudelft.jpacman.board.BoardFactory boardFactory41 = new nl.tudelft.jpacman.board.BoardFactory(pacManSprites40);
        nl.tudelft.jpacman.board.Square[] squareArray42 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray43 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray44 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[][] squareArray45 = new nl.tudelft.jpacman.board.Square[][] { squareArray42, squareArray43, squareArray44 };
        nl.tudelft.jpacman.board.Board board46 = boardFactory41.createBoard(squareArray45);
        nl.tudelft.jpacman.sprite.PacManSprites pacManSprites47 = null;
        nl.tudelft.jpacman.board.BoardFactory boardFactory48 = new nl.tudelft.jpacman.board.BoardFactory(pacManSprites47);
        nl.tudelft.jpacman.board.Square[] squareArray49 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray50 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray51 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[][] squareArray52 = new nl.tudelft.jpacman.board.Square[][] { squareArray49, squareArray50, squareArray51 };
        nl.tudelft.jpacman.board.Board board53 = boardFactory48.createBoard(squareArray52);
        nl.tudelft.jpacman.board.Board board54 = boardFactory41.createBoard(squareArray52);
        nl.tudelft.jpacman.board.Board board55 = boardFactory34.createBoard(squareArray52);
        nl.tudelft.jpacman.board.Board board56 = boardFactory27.createBoard(squareArray52);
        nl.tudelft.jpacman.board.Board board57 = boardFactory12.createBoard(squareArray52);
        nl.tudelft.jpacman.board.Board board58 = boardFactory1.createBoard(squareArray52);
        // The following exception was thrown during execution in test generation
        try {
            nl.tudelft.jpacman.board.Square square59 = boardFactory1.createGround();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"nl.tudelft.jpacman.sprite.PacManSprites.getGroundSprite()\" because \"this.sprites\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(squareArray2);
        org.junit.Assert.assertArrayEquals(squareArray2, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray3);
        org.junit.Assert.assertArrayEquals(squareArray3, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray4);
        org.junit.Assert.assertArrayEquals(squareArray4, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray5);
        org.junit.Assert.assertNotNull(board6);
        org.junit.Assert.assertNotNull(squareArray7);
        org.junit.Assert.assertArrayEquals(squareArray7, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray8);
        org.junit.Assert.assertArrayEquals(squareArray8, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray9);
        org.junit.Assert.assertNotNull(board10);
        org.junit.Assert.assertNotNull(squareArray13);
        org.junit.Assert.assertArrayEquals(squareArray13, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray14);
        org.junit.Assert.assertArrayEquals(squareArray14, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray15);
        org.junit.Assert.assertArrayEquals(squareArray15, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray16);
        org.junit.Assert.assertNotNull(board17);
        org.junit.Assert.assertNotNull(squareArray20);
        org.junit.Assert.assertArrayEquals(squareArray20, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray21);
        org.junit.Assert.assertArrayEquals(squareArray21, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray22);
        org.junit.Assert.assertArrayEquals(squareArray22, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray23);
        org.junit.Assert.assertNotNull(board24);
        org.junit.Assert.assertNotNull(board25);
        org.junit.Assert.assertNotNull(squareArray28);
        org.junit.Assert.assertArrayEquals(squareArray28, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray29);
        org.junit.Assert.assertArrayEquals(squareArray29, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray30);
        org.junit.Assert.assertArrayEquals(squareArray30, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray31);
        org.junit.Assert.assertNotNull(board32);
        org.junit.Assert.assertNotNull(squareArray35);
        org.junit.Assert.assertArrayEquals(squareArray35, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray36);
        org.junit.Assert.assertArrayEquals(squareArray36, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray37);
        org.junit.Assert.assertArrayEquals(squareArray37, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray38);
        org.junit.Assert.assertNotNull(board39);
        org.junit.Assert.assertNotNull(squareArray42);
        org.junit.Assert.assertArrayEquals(squareArray42, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray43);
        org.junit.Assert.assertArrayEquals(squareArray43, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray44);
        org.junit.Assert.assertArrayEquals(squareArray44, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray45);
        org.junit.Assert.assertNotNull(board46);
        org.junit.Assert.assertNotNull(squareArray49);
        org.junit.Assert.assertArrayEquals(squareArray49, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray50);
        org.junit.Assert.assertArrayEquals(squareArray50, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray51);
        org.junit.Assert.assertArrayEquals(squareArray51, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray52);
        org.junit.Assert.assertNotNull(board53);
        org.junit.Assert.assertNotNull(board54);
        org.junit.Assert.assertNotNull(board55);
        org.junit.Assert.assertNotNull(board56);
        org.junit.Assert.assertNotNull(board57);
        org.junit.Assert.assertNotNull(board58);
    }

    @Test
    public void test32() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test32");
        nl.tudelft.jpacman.sprite.PacManSprites pacManSprites0 = null;
        nl.tudelft.jpacman.board.BoardFactory boardFactory1 = new nl.tudelft.jpacman.board.BoardFactory(pacManSprites0);
        nl.tudelft.jpacman.board.Square[] squareArray2 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray3 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray4 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[][] squareArray5 = new nl.tudelft.jpacman.board.Square[][] { squareArray2, squareArray3, squareArray4 };
        nl.tudelft.jpacman.board.Board board6 = boardFactory1.createBoard(squareArray5);
        nl.tudelft.jpacman.sprite.PacManSprites pacManSprites7 = null;
        nl.tudelft.jpacman.board.BoardFactory boardFactory8 = new nl.tudelft.jpacman.board.BoardFactory(pacManSprites7);
        nl.tudelft.jpacman.board.Square[] squareArray9 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray10 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray11 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[][] squareArray12 = new nl.tudelft.jpacman.board.Square[][] { squareArray9, squareArray10, squareArray11 };
        nl.tudelft.jpacman.board.Board board13 = boardFactory8.createBoard(squareArray12);
        nl.tudelft.jpacman.board.Board board14 = boardFactory1.createBoard(squareArray12);
        nl.tudelft.jpacman.sprite.PacManSprites pacManSprites15 = null;
        nl.tudelft.jpacman.board.BoardFactory boardFactory16 = new nl.tudelft.jpacman.board.BoardFactory(pacManSprites15);
        nl.tudelft.jpacman.board.Square[] squareArray17 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray18 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray19 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[][] squareArray20 = new nl.tudelft.jpacman.board.Square[][] { squareArray17, squareArray18, squareArray19 };
        nl.tudelft.jpacman.board.Board board21 = boardFactory16.createBoard(squareArray20);
        nl.tudelft.jpacman.sprite.PacManSprites pacManSprites22 = null;
        nl.tudelft.jpacman.board.BoardFactory boardFactory23 = new nl.tudelft.jpacman.board.BoardFactory(pacManSprites22);
        nl.tudelft.jpacman.board.Square[] squareArray24 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray25 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray26 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[][] squareArray27 = new nl.tudelft.jpacman.board.Square[][] { squareArray24, squareArray25, squareArray26 };
        nl.tudelft.jpacman.board.Board board28 = boardFactory23.createBoard(squareArray27);
        nl.tudelft.jpacman.sprite.PacManSprites pacManSprites29 = null;
        nl.tudelft.jpacman.board.BoardFactory boardFactory30 = new nl.tudelft.jpacman.board.BoardFactory(pacManSprites29);
        nl.tudelft.jpacman.board.Square[] squareArray31 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray32 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray33 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[][] squareArray34 = new nl.tudelft.jpacman.board.Square[][] { squareArray31, squareArray32, squareArray33 };
        nl.tudelft.jpacman.board.Board board35 = boardFactory30.createBoard(squareArray34);
        nl.tudelft.jpacman.sprite.PacManSprites pacManSprites36 = null;
        nl.tudelft.jpacman.board.BoardFactory boardFactory37 = new nl.tudelft.jpacman.board.BoardFactory(pacManSprites36);
        nl.tudelft.jpacman.board.Square[] squareArray38 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray39 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray40 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[][] squareArray41 = new nl.tudelft.jpacman.board.Square[][] { squareArray38, squareArray39, squareArray40 };
        nl.tudelft.jpacman.board.Board board42 = boardFactory37.createBoard(squareArray41);
        nl.tudelft.jpacman.board.Board board43 = boardFactory30.createBoard(squareArray41);
        nl.tudelft.jpacman.board.Board board44 = boardFactory23.createBoard(squareArray41);
        nl.tudelft.jpacman.board.Board board45 = boardFactory16.createBoard(squareArray41);
        nl.tudelft.jpacman.board.Board board46 = boardFactory1.createBoard(squareArray41);
        nl.tudelft.jpacman.sprite.PacManSprites pacManSprites47 = null;
        nl.tudelft.jpacman.board.BoardFactory boardFactory48 = new nl.tudelft.jpacman.board.BoardFactory(pacManSprites47);
        nl.tudelft.jpacman.board.Square[] squareArray49 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray50 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray51 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[][] squareArray52 = new nl.tudelft.jpacman.board.Square[][] { squareArray49, squareArray50, squareArray51 };
        nl.tudelft.jpacman.board.Board board53 = boardFactory48.createBoard(squareArray52);
        nl.tudelft.jpacman.sprite.PacManSprites pacManSprites54 = null;
        nl.tudelft.jpacman.board.BoardFactory boardFactory55 = new nl.tudelft.jpacman.board.BoardFactory(pacManSprites54);
        nl.tudelft.jpacman.board.Square[] squareArray56 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray57 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray58 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[][] squareArray59 = new nl.tudelft.jpacman.board.Square[][] { squareArray56, squareArray57, squareArray58 };
        nl.tudelft.jpacman.board.Board board60 = boardFactory55.createBoard(squareArray59);
        nl.tudelft.jpacman.sprite.PacManSprites pacManSprites61 = null;
        nl.tudelft.jpacman.board.BoardFactory boardFactory62 = new nl.tudelft.jpacman.board.BoardFactory(pacManSprites61);
        nl.tudelft.jpacman.board.Square[] squareArray63 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray64 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray65 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[][] squareArray66 = new nl.tudelft.jpacman.board.Square[][] { squareArray63, squareArray64, squareArray65 };
        nl.tudelft.jpacman.board.Board board67 = boardFactory62.createBoard(squareArray66);
        nl.tudelft.jpacman.board.Board board68 = boardFactory55.createBoard(squareArray66);
        nl.tudelft.jpacman.board.Board board69 = boardFactory48.createBoard(squareArray66);
        nl.tudelft.jpacman.board.Board board70 = boardFactory1.createBoard(squareArray66);
        java.lang.Class<?> wildcardClass71 = squareArray66.getClass();
        org.junit.Assert.assertNotNull(squareArray2);
        org.junit.Assert.assertArrayEquals(squareArray2, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray3);
        org.junit.Assert.assertArrayEquals(squareArray3, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray4);
        org.junit.Assert.assertArrayEquals(squareArray4, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray5);
        org.junit.Assert.assertNotNull(board6);
        org.junit.Assert.assertNotNull(squareArray9);
        org.junit.Assert.assertArrayEquals(squareArray9, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray10);
        org.junit.Assert.assertArrayEquals(squareArray10, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray11);
        org.junit.Assert.assertArrayEquals(squareArray11, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray12);
        org.junit.Assert.assertNotNull(board13);
        org.junit.Assert.assertNotNull(board14);
        org.junit.Assert.assertNotNull(squareArray17);
        org.junit.Assert.assertArrayEquals(squareArray17, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray18);
        org.junit.Assert.assertArrayEquals(squareArray18, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray19);
        org.junit.Assert.assertArrayEquals(squareArray19, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray20);
        org.junit.Assert.assertNotNull(board21);
        org.junit.Assert.assertNotNull(squareArray24);
        org.junit.Assert.assertArrayEquals(squareArray24, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray25);
        org.junit.Assert.assertArrayEquals(squareArray25, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray26);
        org.junit.Assert.assertArrayEquals(squareArray26, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray27);
        org.junit.Assert.assertNotNull(board28);
        org.junit.Assert.assertNotNull(squareArray31);
        org.junit.Assert.assertArrayEquals(squareArray31, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray32);
        org.junit.Assert.assertArrayEquals(squareArray32, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray33);
        org.junit.Assert.assertArrayEquals(squareArray33, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray34);
        org.junit.Assert.assertNotNull(board35);
        org.junit.Assert.assertNotNull(squareArray38);
        org.junit.Assert.assertArrayEquals(squareArray38, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray39);
        org.junit.Assert.assertArrayEquals(squareArray39, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray40);
        org.junit.Assert.assertArrayEquals(squareArray40, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray41);
        org.junit.Assert.assertNotNull(board42);
        org.junit.Assert.assertNotNull(board43);
        org.junit.Assert.assertNotNull(board44);
        org.junit.Assert.assertNotNull(board45);
        org.junit.Assert.assertNotNull(board46);
        org.junit.Assert.assertNotNull(squareArray49);
        org.junit.Assert.assertArrayEquals(squareArray49, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray50);
        org.junit.Assert.assertArrayEquals(squareArray50, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray51);
        org.junit.Assert.assertArrayEquals(squareArray51, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray52);
        org.junit.Assert.assertNotNull(board53);
        org.junit.Assert.assertNotNull(squareArray56);
        org.junit.Assert.assertArrayEquals(squareArray56, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray57);
        org.junit.Assert.assertArrayEquals(squareArray57, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray58);
        org.junit.Assert.assertArrayEquals(squareArray58, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray59);
        org.junit.Assert.assertNotNull(board60);
        org.junit.Assert.assertNotNull(squareArray63);
        org.junit.Assert.assertArrayEquals(squareArray63, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray64);
        org.junit.Assert.assertArrayEquals(squareArray64, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray65);
        org.junit.Assert.assertArrayEquals(squareArray65, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray66);
        org.junit.Assert.assertNotNull(board67);
        org.junit.Assert.assertNotNull(board68);
        org.junit.Assert.assertNotNull(board69);
        org.junit.Assert.assertNotNull(board70);
        org.junit.Assert.assertNotNull(wildcardClass71);
    }

    @Test
    public void test33() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test33");
        nl.tudelft.jpacman.sprite.PacManSprites pacManSprites0 = null;
        nl.tudelft.jpacman.board.BoardFactory boardFactory1 = new nl.tudelft.jpacman.board.BoardFactory(pacManSprites0);
        nl.tudelft.jpacman.board.Square[] squareArray2 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray3 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray4 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[][] squareArray5 = new nl.tudelft.jpacman.board.Square[][] { squareArray2, squareArray3, squareArray4 };
        nl.tudelft.jpacman.board.Board board6 = boardFactory1.createBoard(squareArray5);
        nl.tudelft.jpacman.board.Square[] squareArray7 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray8 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[][] squareArray9 = new nl.tudelft.jpacman.board.Square[][] { squareArray7, squareArray8 };
        nl.tudelft.jpacman.board.Board board10 = boardFactory1.createBoard(squareArray9);
        nl.tudelft.jpacman.sprite.PacManSprites pacManSprites11 = null;
        nl.tudelft.jpacman.board.BoardFactory boardFactory12 = new nl.tudelft.jpacman.board.BoardFactory(pacManSprites11);
        nl.tudelft.jpacman.board.Square[] squareArray13 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray14 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray15 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[][] squareArray16 = new nl.tudelft.jpacman.board.Square[][] { squareArray13, squareArray14, squareArray15 };
        nl.tudelft.jpacman.board.Board board17 = boardFactory12.createBoard(squareArray16);
        nl.tudelft.jpacman.board.Square[] squareArray18 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray19 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[][] squareArray20 = new nl.tudelft.jpacman.board.Square[][] { squareArray18, squareArray19 };
        nl.tudelft.jpacman.board.Board board21 = boardFactory12.createBoard(squareArray20);
        nl.tudelft.jpacman.sprite.PacManSprites pacManSprites22 = null;
        nl.tudelft.jpacman.board.BoardFactory boardFactory23 = new nl.tudelft.jpacman.board.BoardFactory(pacManSprites22);
        nl.tudelft.jpacman.board.Square[] squareArray24 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray25 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray26 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[][] squareArray27 = new nl.tudelft.jpacman.board.Square[][] { squareArray24, squareArray25, squareArray26 };
        nl.tudelft.jpacman.board.Board board28 = boardFactory23.createBoard(squareArray27);
        nl.tudelft.jpacman.board.Square[] squareArray29 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray30 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[][] squareArray31 = new nl.tudelft.jpacman.board.Square[][] { squareArray29, squareArray30 };
        nl.tudelft.jpacman.board.Board board32 = boardFactory23.createBoard(squareArray31);
        nl.tudelft.jpacman.sprite.PacManSprites pacManSprites33 = null;
        nl.tudelft.jpacman.board.BoardFactory boardFactory34 = new nl.tudelft.jpacman.board.BoardFactory(pacManSprites33);
        nl.tudelft.jpacman.board.Square[] squareArray35 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray36 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray37 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[][] squareArray38 = new nl.tudelft.jpacman.board.Square[][] { squareArray35, squareArray36, squareArray37 };
        nl.tudelft.jpacman.board.Board board39 = boardFactory34.createBoard(squareArray38);
        nl.tudelft.jpacman.sprite.PacManSprites pacManSprites40 = null;
        nl.tudelft.jpacman.board.BoardFactory boardFactory41 = new nl.tudelft.jpacman.board.BoardFactory(pacManSprites40);
        nl.tudelft.jpacman.board.Square[] squareArray42 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray43 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray44 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[][] squareArray45 = new nl.tudelft.jpacman.board.Square[][] { squareArray42, squareArray43, squareArray44 };
        nl.tudelft.jpacman.board.Board board46 = boardFactory41.createBoard(squareArray45);
        nl.tudelft.jpacman.board.Board board47 = boardFactory34.createBoard(squareArray45);
        nl.tudelft.jpacman.sprite.PacManSprites pacManSprites48 = null;
        nl.tudelft.jpacman.board.BoardFactory boardFactory49 = new nl.tudelft.jpacman.board.BoardFactory(pacManSprites48);
        nl.tudelft.jpacman.board.Square[] squareArray50 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray51 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray52 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[][] squareArray53 = new nl.tudelft.jpacman.board.Square[][] { squareArray50, squareArray51, squareArray52 };
        nl.tudelft.jpacman.board.Board board54 = boardFactory49.createBoard(squareArray53);
        nl.tudelft.jpacman.sprite.PacManSprites pacManSprites55 = null;
        nl.tudelft.jpacman.board.BoardFactory boardFactory56 = new nl.tudelft.jpacman.board.BoardFactory(pacManSprites55);
        nl.tudelft.jpacman.board.Square[] squareArray57 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray58 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray59 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[][] squareArray60 = new nl.tudelft.jpacman.board.Square[][] { squareArray57, squareArray58, squareArray59 };
        nl.tudelft.jpacman.board.Board board61 = boardFactory56.createBoard(squareArray60);
        nl.tudelft.jpacman.sprite.PacManSprites pacManSprites62 = null;
        nl.tudelft.jpacman.board.BoardFactory boardFactory63 = new nl.tudelft.jpacman.board.BoardFactory(pacManSprites62);
        nl.tudelft.jpacman.board.Square[] squareArray64 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray65 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray66 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[][] squareArray67 = new nl.tudelft.jpacman.board.Square[][] { squareArray64, squareArray65, squareArray66 };
        nl.tudelft.jpacman.board.Board board68 = boardFactory63.createBoard(squareArray67);
        nl.tudelft.jpacman.sprite.PacManSprites pacManSprites69 = null;
        nl.tudelft.jpacman.board.BoardFactory boardFactory70 = new nl.tudelft.jpacman.board.BoardFactory(pacManSprites69);
        nl.tudelft.jpacman.board.Square[] squareArray71 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray72 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray73 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[][] squareArray74 = new nl.tudelft.jpacman.board.Square[][] { squareArray71, squareArray72, squareArray73 };
        nl.tudelft.jpacman.board.Board board75 = boardFactory70.createBoard(squareArray74);
        nl.tudelft.jpacman.board.Board board76 = boardFactory63.createBoard(squareArray74);
        nl.tudelft.jpacman.board.Board board77 = boardFactory56.createBoard(squareArray74);
        nl.tudelft.jpacman.board.Board board78 = boardFactory49.createBoard(squareArray74);
        nl.tudelft.jpacman.board.Board board79 = boardFactory34.createBoard(squareArray74);
        nl.tudelft.jpacman.board.Board board80 = boardFactory23.createBoard(squareArray74);
        nl.tudelft.jpacman.board.Board board81 = boardFactory12.createBoard(squareArray74);
        nl.tudelft.jpacman.board.Board board82 = boardFactory1.createBoard(squareArray74);
        // The following exception was thrown during execution in test generation
        try {
            nl.tudelft.jpacman.board.Square square83 = boardFactory1.createWall();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"nl.tudelft.jpacman.sprite.PacManSprites.getWallSprite()\" because \"this.sprites\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(squareArray2);
        org.junit.Assert.assertArrayEquals(squareArray2, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray3);
        org.junit.Assert.assertArrayEquals(squareArray3, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray4);
        org.junit.Assert.assertArrayEquals(squareArray4, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray5);
        org.junit.Assert.assertNotNull(board6);
        org.junit.Assert.assertNotNull(squareArray7);
        org.junit.Assert.assertArrayEquals(squareArray7, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray8);
        org.junit.Assert.assertArrayEquals(squareArray8, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray9);
        org.junit.Assert.assertNotNull(board10);
        org.junit.Assert.assertNotNull(squareArray13);
        org.junit.Assert.assertArrayEquals(squareArray13, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray14);
        org.junit.Assert.assertArrayEquals(squareArray14, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray15);
        org.junit.Assert.assertArrayEquals(squareArray15, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray16);
        org.junit.Assert.assertNotNull(board17);
        org.junit.Assert.assertNotNull(squareArray18);
        org.junit.Assert.assertArrayEquals(squareArray18, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray19);
        org.junit.Assert.assertArrayEquals(squareArray19, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray20);
        org.junit.Assert.assertNotNull(board21);
        org.junit.Assert.assertNotNull(squareArray24);
        org.junit.Assert.assertArrayEquals(squareArray24, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray25);
        org.junit.Assert.assertArrayEquals(squareArray25, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray26);
        org.junit.Assert.assertArrayEquals(squareArray26, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray27);
        org.junit.Assert.assertNotNull(board28);
        org.junit.Assert.assertNotNull(squareArray29);
        org.junit.Assert.assertArrayEquals(squareArray29, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray30);
        org.junit.Assert.assertArrayEquals(squareArray30, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray31);
        org.junit.Assert.assertNotNull(board32);
        org.junit.Assert.assertNotNull(squareArray35);
        org.junit.Assert.assertArrayEquals(squareArray35, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray36);
        org.junit.Assert.assertArrayEquals(squareArray36, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray37);
        org.junit.Assert.assertArrayEquals(squareArray37, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray38);
        org.junit.Assert.assertNotNull(board39);
        org.junit.Assert.assertNotNull(squareArray42);
        org.junit.Assert.assertArrayEquals(squareArray42, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray43);
        org.junit.Assert.assertArrayEquals(squareArray43, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray44);
        org.junit.Assert.assertArrayEquals(squareArray44, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray45);
        org.junit.Assert.assertNotNull(board46);
        org.junit.Assert.assertNotNull(board47);
        org.junit.Assert.assertNotNull(squareArray50);
        org.junit.Assert.assertArrayEquals(squareArray50, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray51);
        org.junit.Assert.assertArrayEquals(squareArray51, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray52);
        org.junit.Assert.assertArrayEquals(squareArray52, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray53);
        org.junit.Assert.assertNotNull(board54);
        org.junit.Assert.assertNotNull(squareArray57);
        org.junit.Assert.assertArrayEquals(squareArray57, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray58);
        org.junit.Assert.assertArrayEquals(squareArray58, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray59);
        org.junit.Assert.assertArrayEquals(squareArray59, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray60);
        org.junit.Assert.assertNotNull(board61);
        org.junit.Assert.assertNotNull(squareArray64);
        org.junit.Assert.assertArrayEquals(squareArray64, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray65);
        org.junit.Assert.assertArrayEquals(squareArray65, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray66);
        org.junit.Assert.assertArrayEquals(squareArray66, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray67);
        org.junit.Assert.assertNotNull(board68);
        org.junit.Assert.assertNotNull(squareArray71);
        org.junit.Assert.assertArrayEquals(squareArray71, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray72);
        org.junit.Assert.assertArrayEquals(squareArray72, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray73);
        org.junit.Assert.assertArrayEquals(squareArray73, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray74);
        org.junit.Assert.assertNotNull(board75);
        org.junit.Assert.assertNotNull(board76);
        org.junit.Assert.assertNotNull(board77);
        org.junit.Assert.assertNotNull(board78);
        org.junit.Assert.assertNotNull(board79);
        org.junit.Assert.assertNotNull(board80);
        org.junit.Assert.assertNotNull(board81);
        org.junit.Assert.assertNotNull(board82);
    }

    @Test
    public void test34() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test34");
        nl.tudelft.jpacman.sprite.PacManSprites pacManSprites0 = null;
        nl.tudelft.jpacman.board.BoardFactory boardFactory1 = new nl.tudelft.jpacman.board.BoardFactory(pacManSprites0);
        nl.tudelft.jpacman.sprite.PacManSprites pacManSprites2 = null;
        nl.tudelft.jpacman.board.BoardFactory boardFactory3 = new nl.tudelft.jpacman.board.BoardFactory(pacManSprites2);
        nl.tudelft.jpacman.board.Square[] squareArray4 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray5 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray6 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[][] squareArray7 = new nl.tudelft.jpacman.board.Square[][] { squareArray4, squareArray5, squareArray6 };
        nl.tudelft.jpacman.board.Board board8 = boardFactory3.createBoard(squareArray7);
        nl.tudelft.jpacman.board.Board board9 = boardFactory1.createBoard(squareArray7);
        nl.tudelft.jpacman.sprite.PacManSprites pacManSprites10 = null;
        nl.tudelft.jpacman.board.BoardFactory boardFactory11 = new nl.tudelft.jpacman.board.BoardFactory(pacManSprites10);
        nl.tudelft.jpacman.board.Square[] squareArray12 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray13 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray14 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[][] squareArray15 = new nl.tudelft.jpacman.board.Square[][] { squareArray12, squareArray13, squareArray14 };
        nl.tudelft.jpacman.board.Board board16 = boardFactory11.createBoard(squareArray15);
        nl.tudelft.jpacman.sprite.PacManSprites pacManSprites17 = null;
        nl.tudelft.jpacman.board.BoardFactory boardFactory18 = new nl.tudelft.jpacman.board.BoardFactory(pacManSprites17);
        nl.tudelft.jpacman.board.Square[] squareArray19 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray20 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray21 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[][] squareArray22 = new nl.tudelft.jpacman.board.Square[][] { squareArray19, squareArray20, squareArray21 };
        nl.tudelft.jpacman.board.Board board23 = boardFactory18.createBoard(squareArray22);
        nl.tudelft.jpacman.board.Board board24 = boardFactory11.createBoard(squareArray22);
        nl.tudelft.jpacman.board.Board board25 = boardFactory1.createBoard(squareArray22);
        java.lang.Class<?> wildcardClass26 = board25.getClass();
        org.junit.Assert.assertNotNull(squareArray4);
        org.junit.Assert.assertArrayEquals(squareArray4, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray5);
        org.junit.Assert.assertArrayEquals(squareArray5, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray6);
        org.junit.Assert.assertArrayEquals(squareArray6, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray7);
        org.junit.Assert.assertNotNull(board8);
        org.junit.Assert.assertNotNull(board9);
        org.junit.Assert.assertNotNull(squareArray12);
        org.junit.Assert.assertArrayEquals(squareArray12, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray13);
        org.junit.Assert.assertArrayEquals(squareArray13, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray14);
        org.junit.Assert.assertArrayEquals(squareArray14, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray15);
        org.junit.Assert.assertNotNull(board16);
        org.junit.Assert.assertNotNull(squareArray19);
        org.junit.Assert.assertArrayEquals(squareArray19, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray20);
        org.junit.Assert.assertArrayEquals(squareArray20, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray21);
        org.junit.Assert.assertArrayEquals(squareArray21, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray22);
        org.junit.Assert.assertNotNull(board23);
        org.junit.Assert.assertNotNull(board24);
        org.junit.Assert.assertNotNull(board25);
        org.junit.Assert.assertNotNull(wildcardClass26);
    }

    @Test
    public void test35() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test35");
        nl.tudelft.jpacman.sprite.PacManSprites pacManSprites0 = null;
        nl.tudelft.jpacman.board.BoardFactory boardFactory1 = new nl.tudelft.jpacman.board.BoardFactory(pacManSprites0);
        nl.tudelft.jpacman.board.Square[] squareArray2 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray3 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray4 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[][] squareArray5 = new nl.tudelft.jpacman.board.Square[][] { squareArray2, squareArray3, squareArray4 };
        nl.tudelft.jpacman.board.Board board6 = boardFactory1.createBoard(squareArray5);
        nl.tudelft.jpacman.board.Square[] squareArray7 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray8 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[][] squareArray9 = new nl.tudelft.jpacman.board.Square[][] { squareArray7, squareArray8 };
        nl.tudelft.jpacman.board.Board board10 = boardFactory1.createBoard(squareArray9);
        nl.tudelft.jpacman.sprite.PacManSprites pacManSprites11 = null;
        nl.tudelft.jpacman.board.BoardFactory boardFactory12 = new nl.tudelft.jpacman.board.BoardFactory(pacManSprites11);
        nl.tudelft.jpacman.board.Square[] squareArray13 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray14 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray15 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[][] squareArray16 = new nl.tudelft.jpacman.board.Square[][] { squareArray13, squareArray14, squareArray15 };
        nl.tudelft.jpacman.board.Board board17 = boardFactory12.createBoard(squareArray16);
        nl.tudelft.jpacman.board.Square[] squareArray18 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray19 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[][] squareArray20 = new nl.tudelft.jpacman.board.Square[][] { squareArray18, squareArray19 };
        nl.tudelft.jpacman.board.Board board21 = boardFactory12.createBoard(squareArray20);
        nl.tudelft.jpacman.sprite.PacManSprites pacManSprites22 = null;
        nl.tudelft.jpacman.board.BoardFactory boardFactory23 = new nl.tudelft.jpacman.board.BoardFactory(pacManSprites22);
        nl.tudelft.jpacman.board.Square[] squareArray24 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray25 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray26 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[][] squareArray27 = new nl.tudelft.jpacman.board.Square[][] { squareArray24, squareArray25, squareArray26 };
        nl.tudelft.jpacman.board.Board board28 = boardFactory23.createBoard(squareArray27);
        nl.tudelft.jpacman.sprite.PacManSprites pacManSprites29 = null;
        nl.tudelft.jpacman.board.BoardFactory boardFactory30 = new nl.tudelft.jpacman.board.BoardFactory(pacManSprites29);
        nl.tudelft.jpacman.board.Square[] squareArray31 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray32 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray33 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[][] squareArray34 = new nl.tudelft.jpacman.board.Square[][] { squareArray31, squareArray32, squareArray33 };
        nl.tudelft.jpacman.board.Board board35 = boardFactory30.createBoard(squareArray34);
        nl.tudelft.jpacman.board.Board board36 = boardFactory23.createBoard(squareArray34);
        nl.tudelft.jpacman.sprite.PacManSprites pacManSprites37 = null;
        nl.tudelft.jpacman.board.BoardFactory boardFactory38 = new nl.tudelft.jpacman.board.BoardFactory(pacManSprites37);
        nl.tudelft.jpacman.board.Square[] squareArray39 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray40 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray41 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[][] squareArray42 = new nl.tudelft.jpacman.board.Square[][] { squareArray39, squareArray40, squareArray41 };
        nl.tudelft.jpacman.board.Board board43 = boardFactory38.createBoard(squareArray42);
        nl.tudelft.jpacman.sprite.PacManSprites pacManSprites44 = null;
        nl.tudelft.jpacman.board.BoardFactory boardFactory45 = new nl.tudelft.jpacman.board.BoardFactory(pacManSprites44);
        nl.tudelft.jpacman.board.Square[] squareArray46 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray47 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray48 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[][] squareArray49 = new nl.tudelft.jpacman.board.Square[][] { squareArray46, squareArray47, squareArray48 };
        nl.tudelft.jpacman.board.Board board50 = boardFactory45.createBoard(squareArray49);
        nl.tudelft.jpacman.sprite.PacManSprites pacManSprites51 = null;
        nl.tudelft.jpacman.board.BoardFactory boardFactory52 = new nl.tudelft.jpacman.board.BoardFactory(pacManSprites51);
        nl.tudelft.jpacman.board.Square[] squareArray53 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray54 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray55 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[][] squareArray56 = new nl.tudelft.jpacman.board.Square[][] { squareArray53, squareArray54, squareArray55 };
        nl.tudelft.jpacman.board.Board board57 = boardFactory52.createBoard(squareArray56);
        nl.tudelft.jpacman.sprite.PacManSprites pacManSprites58 = null;
        nl.tudelft.jpacman.board.BoardFactory boardFactory59 = new nl.tudelft.jpacman.board.BoardFactory(pacManSprites58);
        nl.tudelft.jpacman.board.Square[] squareArray60 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray61 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray62 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[][] squareArray63 = new nl.tudelft.jpacman.board.Square[][] { squareArray60, squareArray61, squareArray62 };
        nl.tudelft.jpacman.board.Board board64 = boardFactory59.createBoard(squareArray63);
        nl.tudelft.jpacman.board.Board board65 = boardFactory52.createBoard(squareArray63);
        nl.tudelft.jpacman.board.Board board66 = boardFactory45.createBoard(squareArray63);
        nl.tudelft.jpacman.board.Board board67 = boardFactory38.createBoard(squareArray63);
        nl.tudelft.jpacman.board.Board board68 = boardFactory23.createBoard(squareArray63);
        nl.tudelft.jpacman.board.Board board69 = boardFactory12.createBoard(squareArray63);
        nl.tudelft.jpacman.board.Board board70 = boardFactory1.createBoard(squareArray63);
        java.lang.Class<?> wildcardClass71 = boardFactory1.getClass();
        org.junit.Assert.assertNotNull(squareArray2);
        org.junit.Assert.assertArrayEquals(squareArray2, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray3);
        org.junit.Assert.assertArrayEquals(squareArray3, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray4);
        org.junit.Assert.assertArrayEquals(squareArray4, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray5);
        org.junit.Assert.assertNotNull(board6);
        org.junit.Assert.assertNotNull(squareArray7);
        org.junit.Assert.assertArrayEquals(squareArray7, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray8);
        org.junit.Assert.assertArrayEquals(squareArray8, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray9);
        org.junit.Assert.assertNotNull(board10);
        org.junit.Assert.assertNotNull(squareArray13);
        org.junit.Assert.assertArrayEquals(squareArray13, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray14);
        org.junit.Assert.assertArrayEquals(squareArray14, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray15);
        org.junit.Assert.assertArrayEquals(squareArray15, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray16);
        org.junit.Assert.assertNotNull(board17);
        org.junit.Assert.assertNotNull(squareArray18);
        org.junit.Assert.assertArrayEquals(squareArray18, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray19);
        org.junit.Assert.assertArrayEquals(squareArray19, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray20);
        org.junit.Assert.assertNotNull(board21);
        org.junit.Assert.assertNotNull(squareArray24);
        org.junit.Assert.assertArrayEquals(squareArray24, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray25);
        org.junit.Assert.assertArrayEquals(squareArray25, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray26);
        org.junit.Assert.assertArrayEquals(squareArray26, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray27);
        org.junit.Assert.assertNotNull(board28);
        org.junit.Assert.assertNotNull(squareArray31);
        org.junit.Assert.assertArrayEquals(squareArray31, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray32);
        org.junit.Assert.assertArrayEquals(squareArray32, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray33);
        org.junit.Assert.assertArrayEquals(squareArray33, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray34);
        org.junit.Assert.assertNotNull(board35);
        org.junit.Assert.assertNotNull(board36);
        org.junit.Assert.assertNotNull(squareArray39);
        org.junit.Assert.assertArrayEquals(squareArray39, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray40);
        org.junit.Assert.assertArrayEquals(squareArray40, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray41);
        org.junit.Assert.assertArrayEquals(squareArray41, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray42);
        org.junit.Assert.assertNotNull(board43);
        org.junit.Assert.assertNotNull(squareArray46);
        org.junit.Assert.assertArrayEquals(squareArray46, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray47);
        org.junit.Assert.assertArrayEquals(squareArray47, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray48);
        org.junit.Assert.assertArrayEquals(squareArray48, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray49);
        org.junit.Assert.assertNotNull(board50);
        org.junit.Assert.assertNotNull(squareArray53);
        org.junit.Assert.assertArrayEquals(squareArray53, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray54);
        org.junit.Assert.assertArrayEquals(squareArray54, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray55);
        org.junit.Assert.assertArrayEquals(squareArray55, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray56);
        org.junit.Assert.assertNotNull(board57);
        org.junit.Assert.assertNotNull(squareArray60);
        org.junit.Assert.assertArrayEquals(squareArray60, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray61);
        org.junit.Assert.assertArrayEquals(squareArray61, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray62);
        org.junit.Assert.assertArrayEquals(squareArray62, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray63);
        org.junit.Assert.assertNotNull(board64);
        org.junit.Assert.assertNotNull(board65);
        org.junit.Assert.assertNotNull(board66);
        org.junit.Assert.assertNotNull(board67);
        org.junit.Assert.assertNotNull(board68);
        org.junit.Assert.assertNotNull(board69);
        org.junit.Assert.assertNotNull(board70);
        org.junit.Assert.assertNotNull(wildcardClass71);
    }

    @Test
    public void test36() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test36");
        nl.tudelft.jpacman.sprite.PacManSprites pacManSprites0 = null;
        nl.tudelft.jpacman.board.BoardFactory boardFactory1 = new nl.tudelft.jpacman.board.BoardFactory(pacManSprites0);
        nl.tudelft.jpacman.board.Square[] squareArray2 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray3 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray4 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[][] squareArray5 = new nl.tudelft.jpacman.board.Square[][] { squareArray2, squareArray3, squareArray4 };
        nl.tudelft.jpacman.board.Board board6 = boardFactory1.createBoard(squareArray5);
        nl.tudelft.jpacman.board.Square[] squareArray7 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray8 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[][] squareArray9 = new nl.tudelft.jpacman.board.Square[][] { squareArray7, squareArray8 };
        nl.tudelft.jpacman.board.Board board10 = boardFactory1.createBoard(squareArray9);
        nl.tudelft.jpacman.sprite.PacManSprites pacManSprites11 = null;
        nl.tudelft.jpacman.board.BoardFactory boardFactory12 = new nl.tudelft.jpacman.board.BoardFactory(pacManSprites11);
        nl.tudelft.jpacman.board.Square[] squareArray13 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray14 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray15 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[][] squareArray16 = new nl.tudelft.jpacman.board.Square[][] { squareArray13, squareArray14, squareArray15 };
        nl.tudelft.jpacman.board.Board board17 = boardFactory12.createBoard(squareArray16);
        nl.tudelft.jpacman.board.Square[] squareArray18 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray19 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[][] squareArray20 = new nl.tudelft.jpacman.board.Square[][] { squareArray18, squareArray19 };
        nl.tudelft.jpacman.board.Board board21 = boardFactory12.createBoard(squareArray20);
        nl.tudelft.jpacman.sprite.PacManSprites pacManSprites22 = null;
        nl.tudelft.jpacman.board.BoardFactory boardFactory23 = new nl.tudelft.jpacman.board.BoardFactory(pacManSprites22);
        nl.tudelft.jpacman.board.Square[] squareArray24 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray25 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray26 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[][] squareArray27 = new nl.tudelft.jpacman.board.Square[][] { squareArray24, squareArray25, squareArray26 };
        nl.tudelft.jpacman.board.Board board28 = boardFactory23.createBoard(squareArray27);
        nl.tudelft.jpacman.sprite.PacManSprites pacManSprites29 = null;
        nl.tudelft.jpacman.board.BoardFactory boardFactory30 = new nl.tudelft.jpacman.board.BoardFactory(pacManSprites29);
        nl.tudelft.jpacman.board.Square[] squareArray31 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray32 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray33 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[][] squareArray34 = new nl.tudelft.jpacman.board.Square[][] { squareArray31, squareArray32, squareArray33 };
        nl.tudelft.jpacman.board.Board board35 = boardFactory30.createBoard(squareArray34);
        nl.tudelft.jpacman.board.Board board36 = boardFactory23.createBoard(squareArray34);
        nl.tudelft.jpacman.sprite.PacManSprites pacManSprites37 = null;
        nl.tudelft.jpacman.board.BoardFactory boardFactory38 = new nl.tudelft.jpacman.board.BoardFactory(pacManSprites37);
        nl.tudelft.jpacman.board.Square[] squareArray39 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray40 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray41 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[][] squareArray42 = new nl.tudelft.jpacman.board.Square[][] { squareArray39, squareArray40, squareArray41 };
        nl.tudelft.jpacman.board.Board board43 = boardFactory38.createBoard(squareArray42);
        nl.tudelft.jpacman.sprite.PacManSprites pacManSprites44 = null;
        nl.tudelft.jpacman.board.BoardFactory boardFactory45 = new nl.tudelft.jpacman.board.BoardFactory(pacManSprites44);
        nl.tudelft.jpacman.board.Square[] squareArray46 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray47 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray48 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[][] squareArray49 = new nl.tudelft.jpacman.board.Square[][] { squareArray46, squareArray47, squareArray48 };
        nl.tudelft.jpacman.board.Board board50 = boardFactory45.createBoard(squareArray49);
        nl.tudelft.jpacman.sprite.PacManSprites pacManSprites51 = null;
        nl.tudelft.jpacman.board.BoardFactory boardFactory52 = new nl.tudelft.jpacman.board.BoardFactory(pacManSprites51);
        nl.tudelft.jpacman.board.Square[] squareArray53 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray54 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray55 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[][] squareArray56 = new nl.tudelft.jpacman.board.Square[][] { squareArray53, squareArray54, squareArray55 };
        nl.tudelft.jpacman.board.Board board57 = boardFactory52.createBoard(squareArray56);
        nl.tudelft.jpacman.sprite.PacManSprites pacManSprites58 = null;
        nl.tudelft.jpacman.board.BoardFactory boardFactory59 = new nl.tudelft.jpacman.board.BoardFactory(pacManSprites58);
        nl.tudelft.jpacman.board.Square[] squareArray60 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray61 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray62 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[][] squareArray63 = new nl.tudelft.jpacman.board.Square[][] { squareArray60, squareArray61, squareArray62 };
        nl.tudelft.jpacman.board.Board board64 = boardFactory59.createBoard(squareArray63);
        nl.tudelft.jpacman.board.Board board65 = boardFactory52.createBoard(squareArray63);
        nl.tudelft.jpacman.board.Board board66 = boardFactory45.createBoard(squareArray63);
        nl.tudelft.jpacman.board.Board board67 = boardFactory38.createBoard(squareArray63);
        nl.tudelft.jpacman.board.Board board68 = boardFactory23.createBoard(squareArray63);
        nl.tudelft.jpacman.board.Board board69 = boardFactory12.createBoard(squareArray63);
        nl.tudelft.jpacman.board.Board board70 = boardFactory1.createBoard(squareArray63);
        // The following exception was thrown during execution in test generation
        try {
            nl.tudelft.jpacman.board.Square square71 = boardFactory1.createWall();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"nl.tudelft.jpacman.sprite.PacManSprites.getWallSprite()\" because \"this.sprites\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(squareArray2);
        org.junit.Assert.assertArrayEquals(squareArray2, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray3);
        org.junit.Assert.assertArrayEquals(squareArray3, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray4);
        org.junit.Assert.assertArrayEquals(squareArray4, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray5);
        org.junit.Assert.assertNotNull(board6);
        org.junit.Assert.assertNotNull(squareArray7);
        org.junit.Assert.assertArrayEquals(squareArray7, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray8);
        org.junit.Assert.assertArrayEquals(squareArray8, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray9);
        org.junit.Assert.assertNotNull(board10);
        org.junit.Assert.assertNotNull(squareArray13);
        org.junit.Assert.assertArrayEquals(squareArray13, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray14);
        org.junit.Assert.assertArrayEquals(squareArray14, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray15);
        org.junit.Assert.assertArrayEquals(squareArray15, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray16);
        org.junit.Assert.assertNotNull(board17);
        org.junit.Assert.assertNotNull(squareArray18);
        org.junit.Assert.assertArrayEquals(squareArray18, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray19);
        org.junit.Assert.assertArrayEquals(squareArray19, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray20);
        org.junit.Assert.assertNotNull(board21);
        org.junit.Assert.assertNotNull(squareArray24);
        org.junit.Assert.assertArrayEquals(squareArray24, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray25);
        org.junit.Assert.assertArrayEquals(squareArray25, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray26);
        org.junit.Assert.assertArrayEquals(squareArray26, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray27);
        org.junit.Assert.assertNotNull(board28);
        org.junit.Assert.assertNotNull(squareArray31);
        org.junit.Assert.assertArrayEquals(squareArray31, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray32);
        org.junit.Assert.assertArrayEquals(squareArray32, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray33);
        org.junit.Assert.assertArrayEquals(squareArray33, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray34);
        org.junit.Assert.assertNotNull(board35);
        org.junit.Assert.assertNotNull(board36);
        org.junit.Assert.assertNotNull(squareArray39);
        org.junit.Assert.assertArrayEquals(squareArray39, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray40);
        org.junit.Assert.assertArrayEquals(squareArray40, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray41);
        org.junit.Assert.assertArrayEquals(squareArray41, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray42);
        org.junit.Assert.assertNotNull(board43);
        org.junit.Assert.assertNotNull(squareArray46);
        org.junit.Assert.assertArrayEquals(squareArray46, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray47);
        org.junit.Assert.assertArrayEquals(squareArray47, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray48);
        org.junit.Assert.assertArrayEquals(squareArray48, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray49);
        org.junit.Assert.assertNotNull(board50);
        org.junit.Assert.assertNotNull(squareArray53);
        org.junit.Assert.assertArrayEquals(squareArray53, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray54);
        org.junit.Assert.assertArrayEquals(squareArray54, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray55);
        org.junit.Assert.assertArrayEquals(squareArray55, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray56);
        org.junit.Assert.assertNotNull(board57);
        org.junit.Assert.assertNotNull(squareArray60);
        org.junit.Assert.assertArrayEquals(squareArray60, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray61);
        org.junit.Assert.assertArrayEquals(squareArray61, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray62);
        org.junit.Assert.assertArrayEquals(squareArray62, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray63);
        org.junit.Assert.assertNotNull(board64);
        org.junit.Assert.assertNotNull(board65);
        org.junit.Assert.assertNotNull(board66);
        org.junit.Assert.assertNotNull(board67);
        org.junit.Assert.assertNotNull(board68);
        org.junit.Assert.assertNotNull(board69);
        org.junit.Assert.assertNotNull(board70);
    }

    @Test
    public void test37() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test37");
        nl.tudelft.jpacman.sprite.PacManSprites pacManSprites0 = null;
        nl.tudelft.jpacman.board.BoardFactory boardFactory1 = new nl.tudelft.jpacman.board.BoardFactory(pacManSprites0);
        nl.tudelft.jpacman.board.Square[] squareArray2 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray3 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray4 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[][] squareArray5 = new nl.tudelft.jpacman.board.Square[][] { squareArray2, squareArray3, squareArray4 };
        nl.tudelft.jpacman.board.Board board6 = boardFactory1.createBoard(squareArray5);
        nl.tudelft.jpacman.sprite.PacManSprites pacManSprites7 = null;
        nl.tudelft.jpacman.board.BoardFactory boardFactory8 = new nl.tudelft.jpacman.board.BoardFactory(pacManSprites7);
        nl.tudelft.jpacman.board.Square[] squareArray9 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray10 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray11 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[][] squareArray12 = new nl.tudelft.jpacman.board.Square[][] { squareArray9, squareArray10, squareArray11 };
        nl.tudelft.jpacman.board.Board board13 = boardFactory8.createBoard(squareArray12);
        nl.tudelft.jpacman.sprite.PacManSprites pacManSprites14 = null;
        nl.tudelft.jpacman.board.BoardFactory boardFactory15 = new nl.tudelft.jpacman.board.BoardFactory(pacManSprites14);
        nl.tudelft.jpacman.board.Square[] squareArray16 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray17 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray18 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[][] squareArray19 = new nl.tudelft.jpacman.board.Square[][] { squareArray16, squareArray17, squareArray18 };
        nl.tudelft.jpacman.board.Board board20 = boardFactory15.createBoard(squareArray19);
        nl.tudelft.jpacman.board.Board board21 = boardFactory8.createBoard(squareArray19);
        nl.tudelft.jpacman.board.Board board22 = boardFactory1.createBoard(squareArray19);
        nl.tudelft.jpacman.sprite.PacManSprites pacManSprites23 = null;
        nl.tudelft.jpacman.board.BoardFactory boardFactory24 = new nl.tudelft.jpacman.board.BoardFactory(pacManSprites23);
        nl.tudelft.jpacman.board.Square[] squareArray25 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray26 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray27 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[][] squareArray28 = new nl.tudelft.jpacman.board.Square[][] { squareArray25, squareArray26, squareArray27 };
        nl.tudelft.jpacman.board.Board board29 = boardFactory24.createBoard(squareArray28);
        nl.tudelft.jpacman.sprite.PacManSprites pacManSprites30 = null;
        nl.tudelft.jpacman.board.BoardFactory boardFactory31 = new nl.tudelft.jpacman.board.BoardFactory(pacManSprites30);
        nl.tudelft.jpacman.board.Square[] squareArray32 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray33 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray34 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[][] squareArray35 = new nl.tudelft.jpacman.board.Square[][] { squareArray32, squareArray33, squareArray34 };
        nl.tudelft.jpacman.board.Board board36 = boardFactory31.createBoard(squareArray35);
        nl.tudelft.jpacman.sprite.PacManSprites pacManSprites37 = null;
        nl.tudelft.jpacman.board.BoardFactory boardFactory38 = new nl.tudelft.jpacman.board.BoardFactory(pacManSprites37);
        nl.tudelft.jpacman.board.Square[] squareArray39 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray40 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray41 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[][] squareArray42 = new nl.tudelft.jpacman.board.Square[][] { squareArray39, squareArray40, squareArray41 };
        nl.tudelft.jpacman.board.Board board43 = boardFactory38.createBoard(squareArray42);
        nl.tudelft.jpacman.sprite.PacManSprites pacManSprites44 = null;
        nl.tudelft.jpacman.board.BoardFactory boardFactory45 = new nl.tudelft.jpacman.board.BoardFactory(pacManSprites44);
        nl.tudelft.jpacman.board.Square[] squareArray46 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray47 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray48 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[][] squareArray49 = new nl.tudelft.jpacman.board.Square[][] { squareArray46, squareArray47, squareArray48 };
        nl.tudelft.jpacman.board.Board board50 = boardFactory45.createBoard(squareArray49);
        nl.tudelft.jpacman.board.Board board51 = boardFactory38.createBoard(squareArray49);
        nl.tudelft.jpacman.board.Board board52 = boardFactory31.createBoard(squareArray49);
        nl.tudelft.jpacman.board.Board board53 = boardFactory24.createBoard(squareArray49);
        nl.tudelft.jpacman.board.Board board54 = boardFactory1.createBoard(squareArray49);
        nl.tudelft.jpacman.board.Square[] squareArray55 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray56 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[][] squareArray57 = new nl.tudelft.jpacman.board.Square[][] { squareArray55, squareArray56 };
        nl.tudelft.jpacman.board.Board board58 = boardFactory1.createBoard(squareArray57);
        nl.tudelft.jpacman.sprite.PacManSprites pacManSprites59 = null;
        nl.tudelft.jpacman.board.BoardFactory boardFactory60 = new nl.tudelft.jpacman.board.BoardFactory(pacManSprites59);
        nl.tudelft.jpacman.sprite.PacManSprites pacManSprites61 = null;
        nl.tudelft.jpacman.board.BoardFactory boardFactory62 = new nl.tudelft.jpacman.board.BoardFactory(pacManSprites61);
        nl.tudelft.jpacman.board.Square[] squareArray63 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray64 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray65 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[][] squareArray66 = new nl.tudelft.jpacman.board.Square[][] { squareArray63, squareArray64, squareArray65 };
        nl.tudelft.jpacman.board.Board board67 = boardFactory62.createBoard(squareArray66);
        nl.tudelft.jpacman.board.Board board68 = boardFactory60.createBoard(squareArray66);
        nl.tudelft.jpacman.sprite.PacManSprites pacManSprites69 = null;
        nl.tudelft.jpacman.board.BoardFactory boardFactory70 = new nl.tudelft.jpacman.board.BoardFactory(pacManSprites69);
        nl.tudelft.jpacman.board.Square[] squareArray71 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray72 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray73 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[][] squareArray74 = new nl.tudelft.jpacman.board.Square[][] { squareArray71, squareArray72, squareArray73 };
        nl.tudelft.jpacman.board.Board board75 = boardFactory70.createBoard(squareArray74);
        nl.tudelft.jpacman.sprite.PacManSprites pacManSprites76 = null;
        nl.tudelft.jpacman.board.BoardFactory boardFactory77 = new nl.tudelft.jpacman.board.BoardFactory(pacManSprites76);
        nl.tudelft.jpacman.board.Square[] squareArray78 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray79 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray80 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[][] squareArray81 = new nl.tudelft.jpacman.board.Square[][] { squareArray78, squareArray79, squareArray80 };
        nl.tudelft.jpacman.board.Board board82 = boardFactory77.createBoard(squareArray81);
        nl.tudelft.jpacman.board.Board board83 = boardFactory70.createBoard(squareArray81);
        nl.tudelft.jpacman.board.Board board84 = boardFactory60.createBoard(squareArray81);
        nl.tudelft.jpacman.board.Board board85 = boardFactory1.createBoard(squareArray81);
        java.lang.Class<?> wildcardClass86 = boardFactory1.getClass();
        org.junit.Assert.assertNotNull(squareArray2);
        org.junit.Assert.assertArrayEquals(squareArray2, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray3);
        org.junit.Assert.assertArrayEquals(squareArray3, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray4);
        org.junit.Assert.assertArrayEquals(squareArray4, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray5);
        org.junit.Assert.assertNotNull(board6);
        org.junit.Assert.assertNotNull(squareArray9);
        org.junit.Assert.assertArrayEquals(squareArray9, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray10);
        org.junit.Assert.assertArrayEquals(squareArray10, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray11);
        org.junit.Assert.assertArrayEquals(squareArray11, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray12);
        org.junit.Assert.assertNotNull(board13);
        org.junit.Assert.assertNotNull(squareArray16);
        org.junit.Assert.assertArrayEquals(squareArray16, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray17);
        org.junit.Assert.assertArrayEquals(squareArray17, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray18);
        org.junit.Assert.assertArrayEquals(squareArray18, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray19);
        org.junit.Assert.assertNotNull(board20);
        org.junit.Assert.assertNotNull(board21);
        org.junit.Assert.assertNotNull(board22);
        org.junit.Assert.assertNotNull(squareArray25);
        org.junit.Assert.assertArrayEquals(squareArray25, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray26);
        org.junit.Assert.assertArrayEquals(squareArray26, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray27);
        org.junit.Assert.assertArrayEquals(squareArray27, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray28);
        org.junit.Assert.assertNotNull(board29);
        org.junit.Assert.assertNotNull(squareArray32);
        org.junit.Assert.assertArrayEquals(squareArray32, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray33);
        org.junit.Assert.assertArrayEquals(squareArray33, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray34);
        org.junit.Assert.assertArrayEquals(squareArray34, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray35);
        org.junit.Assert.assertNotNull(board36);
        org.junit.Assert.assertNotNull(squareArray39);
        org.junit.Assert.assertArrayEquals(squareArray39, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray40);
        org.junit.Assert.assertArrayEquals(squareArray40, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray41);
        org.junit.Assert.assertArrayEquals(squareArray41, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray42);
        org.junit.Assert.assertNotNull(board43);
        org.junit.Assert.assertNotNull(squareArray46);
        org.junit.Assert.assertArrayEquals(squareArray46, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray47);
        org.junit.Assert.assertArrayEquals(squareArray47, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray48);
        org.junit.Assert.assertArrayEquals(squareArray48, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray49);
        org.junit.Assert.assertNotNull(board50);
        org.junit.Assert.assertNotNull(board51);
        org.junit.Assert.assertNotNull(board52);
        org.junit.Assert.assertNotNull(board53);
        org.junit.Assert.assertNotNull(board54);
        org.junit.Assert.assertNotNull(squareArray55);
        org.junit.Assert.assertArrayEquals(squareArray55, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray56);
        org.junit.Assert.assertArrayEquals(squareArray56, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray57);
        org.junit.Assert.assertNotNull(board58);
        org.junit.Assert.assertNotNull(squareArray63);
        org.junit.Assert.assertArrayEquals(squareArray63, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray64);
        org.junit.Assert.assertArrayEquals(squareArray64, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray65);
        org.junit.Assert.assertArrayEquals(squareArray65, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray66);
        org.junit.Assert.assertNotNull(board67);
        org.junit.Assert.assertNotNull(board68);
        org.junit.Assert.assertNotNull(squareArray71);
        org.junit.Assert.assertArrayEquals(squareArray71, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray72);
        org.junit.Assert.assertArrayEquals(squareArray72, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray73);
        org.junit.Assert.assertArrayEquals(squareArray73, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray74);
        org.junit.Assert.assertNotNull(board75);
        org.junit.Assert.assertNotNull(squareArray78);
        org.junit.Assert.assertArrayEquals(squareArray78, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray79);
        org.junit.Assert.assertArrayEquals(squareArray79, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray80);
        org.junit.Assert.assertArrayEquals(squareArray80, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray81);
        org.junit.Assert.assertNotNull(board82);
        org.junit.Assert.assertNotNull(board83);
        org.junit.Assert.assertNotNull(board84);
        org.junit.Assert.assertNotNull(board85);
        org.junit.Assert.assertNotNull(wildcardClass86);
    }

    @Test
    public void test38() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test38");
        nl.tudelft.jpacman.sprite.PacManSprites pacManSprites0 = null;
        nl.tudelft.jpacman.board.BoardFactory boardFactory1 = new nl.tudelft.jpacman.board.BoardFactory(pacManSprites0);
        nl.tudelft.jpacman.board.Square[] squareArray2 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray3 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray4 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[][] squareArray5 = new nl.tudelft.jpacman.board.Square[][] { squareArray2, squareArray3, squareArray4 };
        nl.tudelft.jpacman.board.Board board6 = boardFactory1.createBoard(squareArray5);
        nl.tudelft.jpacman.board.Square[] squareArray7 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray8 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[][] squareArray9 = new nl.tudelft.jpacman.board.Square[][] { squareArray7, squareArray8 };
        nl.tudelft.jpacman.board.Board board10 = boardFactory1.createBoard(squareArray9);
        // The following exception was thrown during execution in test generation
        try {
            nl.tudelft.jpacman.board.Square square11 = boardFactory1.createWall();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"nl.tudelft.jpacman.sprite.PacManSprites.getWallSprite()\" because \"this.sprites\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(squareArray2);
        org.junit.Assert.assertArrayEquals(squareArray2, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray3);
        org.junit.Assert.assertArrayEquals(squareArray3, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray4);
        org.junit.Assert.assertArrayEquals(squareArray4, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray5);
        org.junit.Assert.assertNotNull(board6);
        org.junit.Assert.assertNotNull(squareArray7);
        org.junit.Assert.assertArrayEquals(squareArray7, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray8);
        org.junit.Assert.assertArrayEquals(squareArray8, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray9);
        org.junit.Assert.assertNotNull(board10);
    }

    @Test
    public void test39() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test39");
        nl.tudelft.jpacman.sprite.PacManSprites pacManSprites0 = null;
        nl.tudelft.jpacman.board.BoardFactory boardFactory1 = new nl.tudelft.jpacman.board.BoardFactory(pacManSprites0);
        nl.tudelft.jpacman.board.Square[] squareArray2 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray3 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray4 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[][] squareArray5 = new nl.tudelft.jpacman.board.Square[][] { squareArray2, squareArray3, squareArray4 };
        nl.tudelft.jpacman.board.Board board6 = boardFactory1.createBoard(squareArray5);
        nl.tudelft.jpacman.board.Square[] squareArray7 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray8 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[][] squareArray9 = new nl.tudelft.jpacman.board.Square[][] { squareArray7, squareArray8 };
        nl.tudelft.jpacman.board.Board board10 = boardFactory1.createBoard(squareArray9);
        nl.tudelft.jpacman.sprite.PacManSprites pacManSprites11 = null;
        nl.tudelft.jpacman.board.BoardFactory boardFactory12 = new nl.tudelft.jpacman.board.BoardFactory(pacManSprites11);
        nl.tudelft.jpacman.board.Square[] squareArray13 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray14 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray15 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[][] squareArray16 = new nl.tudelft.jpacman.board.Square[][] { squareArray13, squareArray14, squareArray15 };
        nl.tudelft.jpacman.board.Board board17 = boardFactory12.createBoard(squareArray16);
        nl.tudelft.jpacman.board.Square[] squareArray18 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray19 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[][] squareArray20 = new nl.tudelft.jpacman.board.Square[][] { squareArray18, squareArray19 };
        nl.tudelft.jpacman.board.Board board21 = boardFactory12.createBoard(squareArray20);
        nl.tudelft.jpacman.sprite.PacManSprites pacManSprites22 = null;
        nl.tudelft.jpacman.board.BoardFactory boardFactory23 = new nl.tudelft.jpacman.board.BoardFactory(pacManSprites22);
        nl.tudelft.jpacman.board.Square[] squareArray24 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray25 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray26 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[][] squareArray27 = new nl.tudelft.jpacman.board.Square[][] { squareArray24, squareArray25, squareArray26 };
        nl.tudelft.jpacman.board.Board board28 = boardFactory23.createBoard(squareArray27);
        nl.tudelft.jpacman.sprite.PacManSprites pacManSprites29 = null;
        nl.tudelft.jpacman.board.BoardFactory boardFactory30 = new nl.tudelft.jpacman.board.BoardFactory(pacManSprites29);
        nl.tudelft.jpacman.board.Square[] squareArray31 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray32 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray33 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[][] squareArray34 = new nl.tudelft.jpacman.board.Square[][] { squareArray31, squareArray32, squareArray33 };
        nl.tudelft.jpacman.board.Board board35 = boardFactory30.createBoard(squareArray34);
        nl.tudelft.jpacman.board.Board board36 = boardFactory23.createBoard(squareArray34);
        nl.tudelft.jpacman.sprite.PacManSprites pacManSprites37 = null;
        nl.tudelft.jpacman.board.BoardFactory boardFactory38 = new nl.tudelft.jpacman.board.BoardFactory(pacManSprites37);
        nl.tudelft.jpacman.board.Square[] squareArray39 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray40 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray41 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[][] squareArray42 = new nl.tudelft.jpacman.board.Square[][] { squareArray39, squareArray40, squareArray41 };
        nl.tudelft.jpacman.board.Board board43 = boardFactory38.createBoard(squareArray42);
        nl.tudelft.jpacman.sprite.PacManSprites pacManSprites44 = null;
        nl.tudelft.jpacman.board.BoardFactory boardFactory45 = new nl.tudelft.jpacman.board.BoardFactory(pacManSprites44);
        nl.tudelft.jpacman.board.Square[] squareArray46 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray47 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray48 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[][] squareArray49 = new nl.tudelft.jpacman.board.Square[][] { squareArray46, squareArray47, squareArray48 };
        nl.tudelft.jpacman.board.Board board50 = boardFactory45.createBoard(squareArray49);
        nl.tudelft.jpacman.sprite.PacManSprites pacManSprites51 = null;
        nl.tudelft.jpacman.board.BoardFactory boardFactory52 = new nl.tudelft.jpacman.board.BoardFactory(pacManSprites51);
        nl.tudelft.jpacman.board.Square[] squareArray53 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray54 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray55 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[][] squareArray56 = new nl.tudelft.jpacman.board.Square[][] { squareArray53, squareArray54, squareArray55 };
        nl.tudelft.jpacman.board.Board board57 = boardFactory52.createBoard(squareArray56);
        nl.tudelft.jpacman.sprite.PacManSprites pacManSprites58 = null;
        nl.tudelft.jpacman.board.BoardFactory boardFactory59 = new nl.tudelft.jpacman.board.BoardFactory(pacManSprites58);
        nl.tudelft.jpacman.board.Square[] squareArray60 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray61 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray62 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[][] squareArray63 = new nl.tudelft.jpacman.board.Square[][] { squareArray60, squareArray61, squareArray62 };
        nl.tudelft.jpacman.board.Board board64 = boardFactory59.createBoard(squareArray63);
        nl.tudelft.jpacman.board.Board board65 = boardFactory52.createBoard(squareArray63);
        nl.tudelft.jpacman.board.Board board66 = boardFactory45.createBoard(squareArray63);
        nl.tudelft.jpacman.board.Board board67 = boardFactory38.createBoard(squareArray63);
        nl.tudelft.jpacman.board.Board board68 = boardFactory23.createBoard(squareArray63);
        nl.tudelft.jpacman.board.Board board69 = boardFactory12.createBoard(squareArray63);
        nl.tudelft.jpacman.board.Board board70 = boardFactory1.createBoard(squareArray63);
        // The following exception was thrown during execution in test generation
        try {
            nl.tudelft.jpacman.board.Square square71 = boardFactory1.createGround();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"nl.tudelft.jpacman.sprite.PacManSprites.getGroundSprite()\" because \"this.sprites\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(squareArray2);
        org.junit.Assert.assertArrayEquals(squareArray2, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray3);
        org.junit.Assert.assertArrayEquals(squareArray3, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray4);
        org.junit.Assert.assertArrayEquals(squareArray4, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray5);
        org.junit.Assert.assertNotNull(board6);
        org.junit.Assert.assertNotNull(squareArray7);
        org.junit.Assert.assertArrayEquals(squareArray7, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray8);
        org.junit.Assert.assertArrayEquals(squareArray8, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray9);
        org.junit.Assert.assertNotNull(board10);
        org.junit.Assert.assertNotNull(squareArray13);
        org.junit.Assert.assertArrayEquals(squareArray13, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray14);
        org.junit.Assert.assertArrayEquals(squareArray14, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray15);
        org.junit.Assert.assertArrayEquals(squareArray15, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray16);
        org.junit.Assert.assertNotNull(board17);
        org.junit.Assert.assertNotNull(squareArray18);
        org.junit.Assert.assertArrayEquals(squareArray18, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray19);
        org.junit.Assert.assertArrayEquals(squareArray19, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray20);
        org.junit.Assert.assertNotNull(board21);
        org.junit.Assert.assertNotNull(squareArray24);
        org.junit.Assert.assertArrayEquals(squareArray24, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray25);
        org.junit.Assert.assertArrayEquals(squareArray25, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray26);
        org.junit.Assert.assertArrayEquals(squareArray26, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray27);
        org.junit.Assert.assertNotNull(board28);
        org.junit.Assert.assertNotNull(squareArray31);
        org.junit.Assert.assertArrayEquals(squareArray31, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray32);
        org.junit.Assert.assertArrayEquals(squareArray32, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray33);
        org.junit.Assert.assertArrayEquals(squareArray33, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray34);
        org.junit.Assert.assertNotNull(board35);
        org.junit.Assert.assertNotNull(board36);
        org.junit.Assert.assertNotNull(squareArray39);
        org.junit.Assert.assertArrayEquals(squareArray39, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray40);
        org.junit.Assert.assertArrayEquals(squareArray40, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray41);
        org.junit.Assert.assertArrayEquals(squareArray41, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray42);
        org.junit.Assert.assertNotNull(board43);
        org.junit.Assert.assertNotNull(squareArray46);
        org.junit.Assert.assertArrayEquals(squareArray46, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray47);
        org.junit.Assert.assertArrayEquals(squareArray47, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray48);
        org.junit.Assert.assertArrayEquals(squareArray48, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray49);
        org.junit.Assert.assertNotNull(board50);
        org.junit.Assert.assertNotNull(squareArray53);
        org.junit.Assert.assertArrayEquals(squareArray53, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray54);
        org.junit.Assert.assertArrayEquals(squareArray54, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray55);
        org.junit.Assert.assertArrayEquals(squareArray55, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray56);
        org.junit.Assert.assertNotNull(board57);
        org.junit.Assert.assertNotNull(squareArray60);
        org.junit.Assert.assertArrayEquals(squareArray60, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray61);
        org.junit.Assert.assertArrayEquals(squareArray61, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray62);
        org.junit.Assert.assertArrayEquals(squareArray62, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray63);
        org.junit.Assert.assertNotNull(board64);
        org.junit.Assert.assertNotNull(board65);
        org.junit.Assert.assertNotNull(board66);
        org.junit.Assert.assertNotNull(board67);
        org.junit.Assert.assertNotNull(board68);
        org.junit.Assert.assertNotNull(board69);
        org.junit.Assert.assertNotNull(board70);
    }

    @Test
    public void test40() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test40");
        nl.tudelft.jpacman.sprite.PacManSprites pacManSprites0 = null;
        nl.tudelft.jpacman.board.BoardFactory boardFactory1 = new nl.tudelft.jpacman.board.BoardFactory(pacManSprites0);
        nl.tudelft.jpacman.board.Square[] squareArray2 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray3 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray4 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[][] squareArray5 = new nl.tudelft.jpacman.board.Square[][] { squareArray2, squareArray3, squareArray4 };
        nl.tudelft.jpacman.board.Board board6 = boardFactory1.createBoard(squareArray5);
        nl.tudelft.jpacman.sprite.PacManSprites pacManSprites7 = null;
        nl.tudelft.jpacman.board.BoardFactory boardFactory8 = new nl.tudelft.jpacman.board.BoardFactory(pacManSprites7);
        nl.tudelft.jpacman.board.Square[] squareArray9 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray10 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray11 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[][] squareArray12 = new nl.tudelft.jpacman.board.Square[][] { squareArray9, squareArray10, squareArray11 };
        nl.tudelft.jpacman.board.Board board13 = boardFactory8.createBoard(squareArray12);
        nl.tudelft.jpacman.board.Board board14 = boardFactory1.createBoard(squareArray12);
        nl.tudelft.jpacman.sprite.PacManSprites pacManSprites15 = null;
        nl.tudelft.jpacman.board.BoardFactory boardFactory16 = new nl.tudelft.jpacman.board.BoardFactory(pacManSprites15);
        nl.tudelft.jpacman.board.Square[] squareArray17 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray18 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray19 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[][] squareArray20 = new nl.tudelft.jpacman.board.Square[][] { squareArray17, squareArray18, squareArray19 };
        nl.tudelft.jpacman.board.Board board21 = boardFactory16.createBoard(squareArray20);
        nl.tudelft.jpacman.sprite.PacManSprites pacManSprites22 = null;
        nl.tudelft.jpacman.board.BoardFactory boardFactory23 = new nl.tudelft.jpacman.board.BoardFactory(pacManSprites22);
        nl.tudelft.jpacman.board.Square[] squareArray24 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray25 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray26 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[][] squareArray27 = new nl.tudelft.jpacman.board.Square[][] { squareArray24, squareArray25, squareArray26 };
        nl.tudelft.jpacman.board.Board board28 = boardFactory23.createBoard(squareArray27);
        nl.tudelft.jpacman.sprite.PacManSprites pacManSprites29 = null;
        nl.tudelft.jpacman.board.BoardFactory boardFactory30 = new nl.tudelft.jpacman.board.BoardFactory(pacManSprites29);
        nl.tudelft.jpacman.board.Square[] squareArray31 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray32 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray33 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[][] squareArray34 = new nl.tudelft.jpacman.board.Square[][] { squareArray31, squareArray32, squareArray33 };
        nl.tudelft.jpacman.board.Board board35 = boardFactory30.createBoard(squareArray34);
        nl.tudelft.jpacman.sprite.PacManSprites pacManSprites36 = null;
        nl.tudelft.jpacman.board.BoardFactory boardFactory37 = new nl.tudelft.jpacman.board.BoardFactory(pacManSprites36);
        nl.tudelft.jpacman.board.Square[] squareArray38 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray39 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray40 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[][] squareArray41 = new nl.tudelft.jpacman.board.Square[][] { squareArray38, squareArray39, squareArray40 };
        nl.tudelft.jpacman.board.Board board42 = boardFactory37.createBoard(squareArray41);
        nl.tudelft.jpacman.board.Board board43 = boardFactory30.createBoard(squareArray41);
        nl.tudelft.jpacman.board.Board board44 = boardFactory23.createBoard(squareArray41);
        nl.tudelft.jpacman.board.Board board45 = boardFactory16.createBoard(squareArray41);
        nl.tudelft.jpacman.board.Board board46 = boardFactory1.createBoard(squareArray41);
        nl.tudelft.jpacman.sprite.PacManSprites pacManSprites47 = null;
        nl.tudelft.jpacman.board.BoardFactory boardFactory48 = new nl.tudelft.jpacman.board.BoardFactory(pacManSprites47);
        nl.tudelft.jpacman.board.Square[] squareArray49 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray50 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray51 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[][] squareArray52 = new nl.tudelft.jpacman.board.Square[][] { squareArray49, squareArray50, squareArray51 };
        nl.tudelft.jpacman.board.Board board53 = boardFactory48.createBoard(squareArray52);
        nl.tudelft.jpacman.sprite.PacManSprites pacManSprites54 = null;
        nl.tudelft.jpacman.board.BoardFactory boardFactory55 = new nl.tudelft.jpacman.board.BoardFactory(pacManSprites54);
        nl.tudelft.jpacman.board.Square[] squareArray56 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray57 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray58 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[][] squareArray59 = new nl.tudelft.jpacman.board.Square[][] { squareArray56, squareArray57, squareArray58 };
        nl.tudelft.jpacman.board.Board board60 = boardFactory55.createBoard(squareArray59);
        nl.tudelft.jpacman.sprite.PacManSprites pacManSprites61 = null;
        nl.tudelft.jpacman.board.BoardFactory boardFactory62 = new nl.tudelft.jpacman.board.BoardFactory(pacManSprites61);
        nl.tudelft.jpacman.board.Square[] squareArray63 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray64 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray65 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[][] squareArray66 = new nl.tudelft.jpacman.board.Square[][] { squareArray63, squareArray64, squareArray65 };
        nl.tudelft.jpacman.board.Board board67 = boardFactory62.createBoard(squareArray66);
        nl.tudelft.jpacman.sprite.PacManSprites pacManSprites68 = null;
        nl.tudelft.jpacman.board.BoardFactory boardFactory69 = new nl.tudelft.jpacman.board.BoardFactory(pacManSprites68);
        nl.tudelft.jpacman.board.Square[] squareArray70 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray71 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray72 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[][] squareArray73 = new nl.tudelft.jpacman.board.Square[][] { squareArray70, squareArray71, squareArray72 };
        nl.tudelft.jpacman.board.Board board74 = boardFactory69.createBoard(squareArray73);
        nl.tudelft.jpacman.board.Board board75 = boardFactory62.createBoard(squareArray73);
        nl.tudelft.jpacman.board.Board board76 = boardFactory55.createBoard(squareArray73);
        nl.tudelft.jpacman.board.Board board77 = boardFactory48.createBoard(squareArray73);
        nl.tudelft.jpacman.board.Board board78 = boardFactory1.createBoard(squareArray73);
        org.junit.Assert.assertNotNull(squareArray2);
        org.junit.Assert.assertArrayEquals(squareArray2, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray3);
        org.junit.Assert.assertArrayEquals(squareArray3, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray4);
        org.junit.Assert.assertArrayEquals(squareArray4, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray5);
        org.junit.Assert.assertNotNull(board6);
        org.junit.Assert.assertNotNull(squareArray9);
        org.junit.Assert.assertArrayEquals(squareArray9, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray10);
        org.junit.Assert.assertArrayEquals(squareArray10, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray11);
        org.junit.Assert.assertArrayEquals(squareArray11, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray12);
        org.junit.Assert.assertNotNull(board13);
        org.junit.Assert.assertNotNull(board14);
        org.junit.Assert.assertNotNull(squareArray17);
        org.junit.Assert.assertArrayEquals(squareArray17, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray18);
        org.junit.Assert.assertArrayEquals(squareArray18, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray19);
        org.junit.Assert.assertArrayEquals(squareArray19, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray20);
        org.junit.Assert.assertNotNull(board21);
        org.junit.Assert.assertNotNull(squareArray24);
        org.junit.Assert.assertArrayEquals(squareArray24, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray25);
        org.junit.Assert.assertArrayEquals(squareArray25, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray26);
        org.junit.Assert.assertArrayEquals(squareArray26, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray27);
        org.junit.Assert.assertNotNull(board28);
        org.junit.Assert.assertNotNull(squareArray31);
        org.junit.Assert.assertArrayEquals(squareArray31, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray32);
        org.junit.Assert.assertArrayEquals(squareArray32, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray33);
        org.junit.Assert.assertArrayEquals(squareArray33, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray34);
        org.junit.Assert.assertNotNull(board35);
        org.junit.Assert.assertNotNull(squareArray38);
        org.junit.Assert.assertArrayEquals(squareArray38, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray39);
        org.junit.Assert.assertArrayEquals(squareArray39, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray40);
        org.junit.Assert.assertArrayEquals(squareArray40, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray41);
        org.junit.Assert.assertNotNull(board42);
        org.junit.Assert.assertNotNull(board43);
        org.junit.Assert.assertNotNull(board44);
        org.junit.Assert.assertNotNull(board45);
        org.junit.Assert.assertNotNull(board46);
        org.junit.Assert.assertNotNull(squareArray49);
        org.junit.Assert.assertArrayEquals(squareArray49, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray50);
        org.junit.Assert.assertArrayEquals(squareArray50, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray51);
        org.junit.Assert.assertArrayEquals(squareArray51, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray52);
        org.junit.Assert.assertNotNull(board53);
        org.junit.Assert.assertNotNull(squareArray56);
        org.junit.Assert.assertArrayEquals(squareArray56, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray57);
        org.junit.Assert.assertArrayEquals(squareArray57, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray58);
        org.junit.Assert.assertArrayEquals(squareArray58, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray59);
        org.junit.Assert.assertNotNull(board60);
        org.junit.Assert.assertNotNull(squareArray63);
        org.junit.Assert.assertArrayEquals(squareArray63, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray64);
        org.junit.Assert.assertArrayEquals(squareArray64, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray65);
        org.junit.Assert.assertArrayEquals(squareArray65, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray66);
        org.junit.Assert.assertNotNull(board67);
        org.junit.Assert.assertNotNull(squareArray70);
        org.junit.Assert.assertArrayEquals(squareArray70, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray71);
        org.junit.Assert.assertArrayEquals(squareArray71, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray72);
        org.junit.Assert.assertArrayEquals(squareArray72, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray73);
        org.junit.Assert.assertNotNull(board74);
        org.junit.Assert.assertNotNull(board75);
        org.junit.Assert.assertNotNull(board76);
        org.junit.Assert.assertNotNull(board77);
        org.junit.Assert.assertNotNull(board78);
    }

    @Test
    public void test41() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test41");
        nl.tudelft.jpacman.sprite.PacManSprites pacManSprites0 = null;
        nl.tudelft.jpacman.board.BoardFactory boardFactory1 = new nl.tudelft.jpacman.board.BoardFactory(pacManSprites0);
        nl.tudelft.jpacman.sprite.PacManSprites pacManSprites2 = null;
        nl.tudelft.jpacman.board.BoardFactory boardFactory3 = new nl.tudelft.jpacman.board.BoardFactory(pacManSprites2);
        nl.tudelft.jpacman.board.Square[] squareArray4 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray5 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray6 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[][] squareArray7 = new nl.tudelft.jpacman.board.Square[][] { squareArray4, squareArray5, squareArray6 };
        nl.tudelft.jpacman.board.Board board8 = boardFactory3.createBoard(squareArray7);
        nl.tudelft.jpacman.board.Board board9 = boardFactory1.createBoard(squareArray7);
        // The following exception was thrown during execution in test generation
        try {
            nl.tudelft.jpacman.board.Square square10 = boardFactory1.createWall();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"nl.tudelft.jpacman.sprite.PacManSprites.getWallSprite()\" because \"this.sprites\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(squareArray4);
        org.junit.Assert.assertArrayEquals(squareArray4, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray5);
        org.junit.Assert.assertArrayEquals(squareArray5, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray6);
        org.junit.Assert.assertArrayEquals(squareArray6, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray7);
        org.junit.Assert.assertNotNull(board8);
        org.junit.Assert.assertNotNull(board9);
    }

    @Test
    public void test42() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test42");
        nl.tudelft.jpacman.sprite.PacManSprites pacManSprites0 = null;
        nl.tudelft.jpacman.board.BoardFactory boardFactory1 = new nl.tudelft.jpacman.board.BoardFactory(pacManSprites0);
        nl.tudelft.jpacman.board.Square[] squareArray2 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray3 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray4 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[][] squareArray5 = new nl.tudelft.jpacman.board.Square[][] { squareArray2, squareArray3, squareArray4 };
        nl.tudelft.jpacman.board.Board board6 = boardFactory1.createBoard(squareArray5);
        nl.tudelft.jpacman.sprite.PacManSprites pacManSprites7 = null;
        nl.tudelft.jpacman.board.BoardFactory boardFactory8 = new nl.tudelft.jpacman.board.BoardFactory(pacManSprites7);
        nl.tudelft.jpacman.board.Square[] squareArray9 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray10 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray11 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[][] squareArray12 = new nl.tudelft.jpacman.board.Square[][] { squareArray9, squareArray10, squareArray11 };
        nl.tudelft.jpacman.board.Board board13 = boardFactory8.createBoard(squareArray12);
        nl.tudelft.jpacman.board.Board board14 = boardFactory1.createBoard(squareArray12);
        nl.tudelft.jpacman.sprite.PacManSprites pacManSprites15 = null;
        nl.tudelft.jpacman.board.BoardFactory boardFactory16 = new nl.tudelft.jpacman.board.BoardFactory(pacManSprites15);
        nl.tudelft.jpacman.board.Square[] squareArray17 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray18 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray19 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[][] squareArray20 = new nl.tudelft.jpacman.board.Square[][] { squareArray17, squareArray18, squareArray19 };
        nl.tudelft.jpacman.board.Board board21 = boardFactory16.createBoard(squareArray20);
        nl.tudelft.jpacman.sprite.PacManSprites pacManSprites22 = null;
        nl.tudelft.jpacman.board.BoardFactory boardFactory23 = new nl.tudelft.jpacman.board.BoardFactory(pacManSprites22);
        nl.tudelft.jpacman.board.Square[] squareArray24 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray25 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray26 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[][] squareArray27 = new nl.tudelft.jpacman.board.Square[][] { squareArray24, squareArray25, squareArray26 };
        nl.tudelft.jpacman.board.Board board28 = boardFactory23.createBoard(squareArray27);
        nl.tudelft.jpacman.sprite.PacManSprites pacManSprites29 = null;
        nl.tudelft.jpacman.board.BoardFactory boardFactory30 = new nl.tudelft.jpacman.board.BoardFactory(pacManSprites29);
        nl.tudelft.jpacman.board.Square[] squareArray31 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray32 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray33 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[][] squareArray34 = new nl.tudelft.jpacman.board.Square[][] { squareArray31, squareArray32, squareArray33 };
        nl.tudelft.jpacman.board.Board board35 = boardFactory30.createBoard(squareArray34);
        nl.tudelft.jpacman.sprite.PacManSprites pacManSprites36 = null;
        nl.tudelft.jpacman.board.BoardFactory boardFactory37 = new nl.tudelft.jpacman.board.BoardFactory(pacManSprites36);
        nl.tudelft.jpacman.board.Square[] squareArray38 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray39 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray40 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[][] squareArray41 = new nl.tudelft.jpacman.board.Square[][] { squareArray38, squareArray39, squareArray40 };
        nl.tudelft.jpacman.board.Board board42 = boardFactory37.createBoard(squareArray41);
        nl.tudelft.jpacman.board.Board board43 = boardFactory30.createBoard(squareArray41);
        nl.tudelft.jpacman.board.Board board44 = boardFactory23.createBoard(squareArray41);
        nl.tudelft.jpacman.board.Board board45 = boardFactory16.createBoard(squareArray41);
        nl.tudelft.jpacman.board.Board board46 = boardFactory1.createBoard(squareArray41);
        java.lang.Class<?> wildcardClass47 = board46.getClass();
        org.junit.Assert.assertNotNull(squareArray2);
        org.junit.Assert.assertArrayEquals(squareArray2, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray3);
        org.junit.Assert.assertArrayEquals(squareArray3, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray4);
        org.junit.Assert.assertArrayEquals(squareArray4, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray5);
        org.junit.Assert.assertNotNull(board6);
        org.junit.Assert.assertNotNull(squareArray9);
        org.junit.Assert.assertArrayEquals(squareArray9, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray10);
        org.junit.Assert.assertArrayEquals(squareArray10, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray11);
        org.junit.Assert.assertArrayEquals(squareArray11, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray12);
        org.junit.Assert.assertNotNull(board13);
        org.junit.Assert.assertNotNull(board14);
        org.junit.Assert.assertNotNull(squareArray17);
        org.junit.Assert.assertArrayEquals(squareArray17, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray18);
        org.junit.Assert.assertArrayEquals(squareArray18, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray19);
        org.junit.Assert.assertArrayEquals(squareArray19, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray20);
        org.junit.Assert.assertNotNull(board21);
        org.junit.Assert.assertNotNull(squareArray24);
        org.junit.Assert.assertArrayEquals(squareArray24, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray25);
        org.junit.Assert.assertArrayEquals(squareArray25, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray26);
        org.junit.Assert.assertArrayEquals(squareArray26, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray27);
        org.junit.Assert.assertNotNull(board28);
        org.junit.Assert.assertNotNull(squareArray31);
        org.junit.Assert.assertArrayEquals(squareArray31, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray32);
        org.junit.Assert.assertArrayEquals(squareArray32, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray33);
        org.junit.Assert.assertArrayEquals(squareArray33, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray34);
        org.junit.Assert.assertNotNull(board35);
        org.junit.Assert.assertNotNull(squareArray38);
        org.junit.Assert.assertArrayEquals(squareArray38, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray39);
        org.junit.Assert.assertArrayEquals(squareArray39, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray40);
        org.junit.Assert.assertArrayEquals(squareArray40, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray41);
        org.junit.Assert.assertNotNull(board42);
        org.junit.Assert.assertNotNull(board43);
        org.junit.Assert.assertNotNull(board44);
        org.junit.Assert.assertNotNull(board45);
        org.junit.Assert.assertNotNull(board46);
        org.junit.Assert.assertNotNull(wildcardClass47);
    }

    @Test
    public void test43() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test43");
        nl.tudelft.jpacman.sprite.PacManSprites pacManSprites0 = null;
        nl.tudelft.jpacman.board.BoardFactory boardFactory1 = new nl.tudelft.jpacman.board.BoardFactory(pacManSprites0);
        nl.tudelft.jpacman.sprite.PacManSprites pacManSprites2 = null;
        nl.tudelft.jpacman.board.BoardFactory boardFactory3 = new nl.tudelft.jpacman.board.BoardFactory(pacManSprites2);
        nl.tudelft.jpacman.board.Square[] squareArray4 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray5 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray6 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[][] squareArray7 = new nl.tudelft.jpacman.board.Square[][] { squareArray4, squareArray5, squareArray6 };
        nl.tudelft.jpacman.board.Board board8 = boardFactory3.createBoard(squareArray7);
        nl.tudelft.jpacman.board.Board board9 = boardFactory1.createBoard(squareArray7);
        nl.tudelft.jpacman.sprite.PacManSprites pacManSprites10 = null;
        nl.tudelft.jpacman.board.BoardFactory boardFactory11 = new nl.tudelft.jpacman.board.BoardFactory(pacManSprites10);
        nl.tudelft.jpacman.board.Square[] squareArray12 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray13 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray14 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[][] squareArray15 = new nl.tudelft.jpacman.board.Square[][] { squareArray12, squareArray13, squareArray14 };
        nl.tudelft.jpacman.board.Board board16 = boardFactory11.createBoard(squareArray15);
        nl.tudelft.jpacman.sprite.PacManSprites pacManSprites17 = null;
        nl.tudelft.jpacman.board.BoardFactory boardFactory18 = new nl.tudelft.jpacman.board.BoardFactory(pacManSprites17);
        nl.tudelft.jpacman.board.Square[] squareArray19 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray20 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray21 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[][] squareArray22 = new nl.tudelft.jpacman.board.Square[][] { squareArray19, squareArray20, squareArray21 };
        nl.tudelft.jpacman.board.Board board23 = boardFactory18.createBoard(squareArray22);
        nl.tudelft.jpacman.board.Board board24 = boardFactory11.createBoard(squareArray22);
        nl.tudelft.jpacman.board.Board board25 = boardFactory1.createBoard(squareArray22);
        // The following exception was thrown during execution in test generation
        try {
            nl.tudelft.jpacman.board.Square square26 = boardFactory1.createGround();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"nl.tudelft.jpacman.sprite.PacManSprites.getGroundSprite()\" because \"this.sprites\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(squareArray4);
        org.junit.Assert.assertArrayEquals(squareArray4, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray5);
        org.junit.Assert.assertArrayEquals(squareArray5, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray6);
        org.junit.Assert.assertArrayEquals(squareArray6, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray7);
        org.junit.Assert.assertNotNull(board8);
        org.junit.Assert.assertNotNull(board9);
        org.junit.Assert.assertNotNull(squareArray12);
        org.junit.Assert.assertArrayEquals(squareArray12, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray13);
        org.junit.Assert.assertArrayEquals(squareArray13, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray14);
        org.junit.Assert.assertArrayEquals(squareArray14, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray15);
        org.junit.Assert.assertNotNull(board16);
        org.junit.Assert.assertNotNull(squareArray19);
        org.junit.Assert.assertArrayEquals(squareArray19, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray20);
        org.junit.Assert.assertArrayEquals(squareArray20, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray21);
        org.junit.Assert.assertArrayEquals(squareArray21, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray22);
        org.junit.Assert.assertNotNull(board23);
        org.junit.Assert.assertNotNull(board24);
        org.junit.Assert.assertNotNull(board25);
    }

    @Test
    public void test44() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test44");
        nl.tudelft.jpacman.sprite.PacManSprites pacManSprites0 = null;
        nl.tudelft.jpacman.board.BoardFactory boardFactory1 = new nl.tudelft.jpacman.board.BoardFactory(pacManSprites0);
        nl.tudelft.jpacman.board.Square[] squareArray2 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray3 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray4 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[][] squareArray5 = new nl.tudelft.jpacman.board.Square[][] { squareArray2, squareArray3, squareArray4 };
        nl.tudelft.jpacman.board.Board board6 = boardFactory1.createBoard(squareArray5);
        nl.tudelft.jpacman.board.Square[] squareArray7 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray8 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[][] squareArray9 = new nl.tudelft.jpacman.board.Square[][] { squareArray7, squareArray8 };
        nl.tudelft.jpacman.board.Board board10 = boardFactory1.createBoard(squareArray9);
        nl.tudelft.jpacman.sprite.PacManSprites pacManSprites11 = null;
        nl.tudelft.jpacman.board.BoardFactory boardFactory12 = new nl.tudelft.jpacman.board.BoardFactory(pacManSprites11);
        nl.tudelft.jpacman.board.Square[] squareArray13 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray14 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray15 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[][] squareArray16 = new nl.tudelft.jpacman.board.Square[][] { squareArray13, squareArray14, squareArray15 };
        nl.tudelft.jpacman.board.Board board17 = boardFactory12.createBoard(squareArray16);
        nl.tudelft.jpacman.board.Square[] squareArray18 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray19 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[][] squareArray20 = new nl.tudelft.jpacman.board.Square[][] { squareArray18, squareArray19 };
        nl.tudelft.jpacman.board.Board board21 = boardFactory12.createBoard(squareArray20);
        nl.tudelft.jpacman.sprite.PacManSprites pacManSprites22 = null;
        nl.tudelft.jpacman.board.BoardFactory boardFactory23 = new nl.tudelft.jpacman.board.BoardFactory(pacManSprites22);
        nl.tudelft.jpacman.board.Square[] squareArray24 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray25 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray26 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[][] squareArray27 = new nl.tudelft.jpacman.board.Square[][] { squareArray24, squareArray25, squareArray26 };
        nl.tudelft.jpacman.board.Board board28 = boardFactory23.createBoard(squareArray27);
        nl.tudelft.jpacman.board.Square[] squareArray29 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray30 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[][] squareArray31 = new nl.tudelft.jpacman.board.Square[][] { squareArray29, squareArray30 };
        nl.tudelft.jpacman.board.Board board32 = boardFactory23.createBoard(squareArray31);
        nl.tudelft.jpacman.sprite.PacManSprites pacManSprites33 = null;
        nl.tudelft.jpacman.board.BoardFactory boardFactory34 = new nl.tudelft.jpacman.board.BoardFactory(pacManSprites33);
        nl.tudelft.jpacman.board.Square[] squareArray35 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray36 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray37 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[][] squareArray38 = new nl.tudelft.jpacman.board.Square[][] { squareArray35, squareArray36, squareArray37 };
        nl.tudelft.jpacman.board.Board board39 = boardFactory34.createBoard(squareArray38);
        nl.tudelft.jpacman.sprite.PacManSprites pacManSprites40 = null;
        nl.tudelft.jpacman.board.BoardFactory boardFactory41 = new nl.tudelft.jpacman.board.BoardFactory(pacManSprites40);
        nl.tudelft.jpacman.board.Square[] squareArray42 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray43 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray44 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[][] squareArray45 = new nl.tudelft.jpacman.board.Square[][] { squareArray42, squareArray43, squareArray44 };
        nl.tudelft.jpacman.board.Board board46 = boardFactory41.createBoard(squareArray45);
        nl.tudelft.jpacman.board.Board board47 = boardFactory34.createBoard(squareArray45);
        nl.tudelft.jpacman.sprite.PacManSprites pacManSprites48 = null;
        nl.tudelft.jpacman.board.BoardFactory boardFactory49 = new nl.tudelft.jpacman.board.BoardFactory(pacManSprites48);
        nl.tudelft.jpacman.board.Square[] squareArray50 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray51 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray52 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[][] squareArray53 = new nl.tudelft.jpacman.board.Square[][] { squareArray50, squareArray51, squareArray52 };
        nl.tudelft.jpacman.board.Board board54 = boardFactory49.createBoard(squareArray53);
        nl.tudelft.jpacman.sprite.PacManSprites pacManSprites55 = null;
        nl.tudelft.jpacman.board.BoardFactory boardFactory56 = new nl.tudelft.jpacman.board.BoardFactory(pacManSprites55);
        nl.tudelft.jpacman.board.Square[] squareArray57 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray58 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray59 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[][] squareArray60 = new nl.tudelft.jpacman.board.Square[][] { squareArray57, squareArray58, squareArray59 };
        nl.tudelft.jpacman.board.Board board61 = boardFactory56.createBoard(squareArray60);
        nl.tudelft.jpacman.sprite.PacManSprites pacManSprites62 = null;
        nl.tudelft.jpacman.board.BoardFactory boardFactory63 = new nl.tudelft.jpacman.board.BoardFactory(pacManSprites62);
        nl.tudelft.jpacman.board.Square[] squareArray64 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray65 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray66 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[][] squareArray67 = new nl.tudelft.jpacman.board.Square[][] { squareArray64, squareArray65, squareArray66 };
        nl.tudelft.jpacman.board.Board board68 = boardFactory63.createBoard(squareArray67);
        nl.tudelft.jpacman.sprite.PacManSprites pacManSprites69 = null;
        nl.tudelft.jpacman.board.BoardFactory boardFactory70 = new nl.tudelft.jpacman.board.BoardFactory(pacManSprites69);
        nl.tudelft.jpacman.board.Square[] squareArray71 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray72 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray73 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[][] squareArray74 = new nl.tudelft.jpacman.board.Square[][] { squareArray71, squareArray72, squareArray73 };
        nl.tudelft.jpacman.board.Board board75 = boardFactory70.createBoard(squareArray74);
        nl.tudelft.jpacman.board.Board board76 = boardFactory63.createBoard(squareArray74);
        nl.tudelft.jpacman.board.Board board77 = boardFactory56.createBoard(squareArray74);
        nl.tudelft.jpacman.board.Board board78 = boardFactory49.createBoard(squareArray74);
        nl.tudelft.jpacman.board.Board board79 = boardFactory34.createBoard(squareArray74);
        nl.tudelft.jpacman.board.Board board80 = boardFactory23.createBoard(squareArray74);
        nl.tudelft.jpacman.board.Board board81 = boardFactory12.createBoard(squareArray74);
        nl.tudelft.jpacman.board.Board board82 = boardFactory1.createBoard(squareArray74);
        // The following exception was thrown during execution in test generation
        try {
            nl.tudelft.jpacman.board.Square square83 = boardFactory1.createGround();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"nl.tudelft.jpacman.sprite.PacManSprites.getGroundSprite()\" because \"this.sprites\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(squareArray2);
        org.junit.Assert.assertArrayEquals(squareArray2, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray3);
        org.junit.Assert.assertArrayEquals(squareArray3, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray4);
        org.junit.Assert.assertArrayEquals(squareArray4, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray5);
        org.junit.Assert.assertNotNull(board6);
        org.junit.Assert.assertNotNull(squareArray7);
        org.junit.Assert.assertArrayEquals(squareArray7, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray8);
        org.junit.Assert.assertArrayEquals(squareArray8, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray9);
        org.junit.Assert.assertNotNull(board10);
        org.junit.Assert.assertNotNull(squareArray13);
        org.junit.Assert.assertArrayEquals(squareArray13, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray14);
        org.junit.Assert.assertArrayEquals(squareArray14, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray15);
        org.junit.Assert.assertArrayEquals(squareArray15, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray16);
        org.junit.Assert.assertNotNull(board17);
        org.junit.Assert.assertNotNull(squareArray18);
        org.junit.Assert.assertArrayEquals(squareArray18, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray19);
        org.junit.Assert.assertArrayEquals(squareArray19, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray20);
        org.junit.Assert.assertNotNull(board21);
        org.junit.Assert.assertNotNull(squareArray24);
        org.junit.Assert.assertArrayEquals(squareArray24, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray25);
        org.junit.Assert.assertArrayEquals(squareArray25, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray26);
        org.junit.Assert.assertArrayEquals(squareArray26, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray27);
        org.junit.Assert.assertNotNull(board28);
        org.junit.Assert.assertNotNull(squareArray29);
        org.junit.Assert.assertArrayEquals(squareArray29, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray30);
        org.junit.Assert.assertArrayEquals(squareArray30, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray31);
        org.junit.Assert.assertNotNull(board32);
        org.junit.Assert.assertNotNull(squareArray35);
        org.junit.Assert.assertArrayEquals(squareArray35, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray36);
        org.junit.Assert.assertArrayEquals(squareArray36, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray37);
        org.junit.Assert.assertArrayEquals(squareArray37, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray38);
        org.junit.Assert.assertNotNull(board39);
        org.junit.Assert.assertNotNull(squareArray42);
        org.junit.Assert.assertArrayEquals(squareArray42, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray43);
        org.junit.Assert.assertArrayEquals(squareArray43, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray44);
        org.junit.Assert.assertArrayEquals(squareArray44, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray45);
        org.junit.Assert.assertNotNull(board46);
        org.junit.Assert.assertNotNull(board47);
        org.junit.Assert.assertNotNull(squareArray50);
        org.junit.Assert.assertArrayEquals(squareArray50, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray51);
        org.junit.Assert.assertArrayEquals(squareArray51, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray52);
        org.junit.Assert.assertArrayEquals(squareArray52, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray53);
        org.junit.Assert.assertNotNull(board54);
        org.junit.Assert.assertNotNull(squareArray57);
        org.junit.Assert.assertArrayEquals(squareArray57, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray58);
        org.junit.Assert.assertArrayEquals(squareArray58, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray59);
        org.junit.Assert.assertArrayEquals(squareArray59, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray60);
        org.junit.Assert.assertNotNull(board61);
        org.junit.Assert.assertNotNull(squareArray64);
        org.junit.Assert.assertArrayEquals(squareArray64, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray65);
        org.junit.Assert.assertArrayEquals(squareArray65, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray66);
        org.junit.Assert.assertArrayEquals(squareArray66, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray67);
        org.junit.Assert.assertNotNull(board68);
        org.junit.Assert.assertNotNull(squareArray71);
        org.junit.Assert.assertArrayEquals(squareArray71, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray72);
        org.junit.Assert.assertArrayEquals(squareArray72, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray73);
        org.junit.Assert.assertArrayEquals(squareArray73, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray74);
        org.junit.Assert.assertNotNull(board75);
        org.junit.Assert.assertNotNull(board76);
        org.junit.Assert.assertNotNull(board77);
        org.junit.Assert.assertNotNull(board78);
        org.junit.Assert.assertNotNull(board79);
        org.junit.Assert.assertNotNull(board80);
        org.junit.Assert.assertNotNull(board81);
        org.junit.Assert.assertNotNull(board82);
    }

    @Test
    public void test45() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test45");
        nl.tudelft.jpacman.sprite.PacManSprites pacManSprites0 = null;
        nl.tudelft.jpacman.board.BoardFactory boardFactory1 = new nl.tudelft.jpacman.board.BoardFactory(pacManSprites0);
        nl.tudelft.jpacman.board.Square[] squareArray2 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray3 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray4 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[][] squareArray5 = new nl.tudelft.jpacman.board.Square[][] { squareArray2, squareArray3, squareArray4 };
        nl.tudelft.jpacman.board.Board board6 = boardFactory1.createBoard(squareArray5);
        nl.tudelft.jpacman.sprite.PacManSprites pacManSprites7 = null;
        nl.tudelft.jpacman.board.BoardFactory boardFactory8 = new nl.tudelft.jpacman.board.BoardFactory(pacManSprites7);
        nl.tudelft.jpacman.board.Square[] squareArray9 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray10 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray11 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[][] squareArray12 = new nl.tudelft.jpacman.board.Square[][] { squareArray9, squareArray10, squareArray11 };
        nl.tudelft.jpacman.board.Board board13 = boardFactory8.createBoard(squareArray12);
        nl.tudelft.jpacman.board.Board board14 = boardFactory1.createBoard(squareArray12);
        nl.tudelft.jpacman.sprite.PacManSprites pacManSprites15 = null;
        nl.tudelft.jpacman.board.BoardFactory boardFactory16 = new nl.tudelft.jpacman.board.BoardFactory(pacManSprites15);
        nl.tudelft.jpacman.board.Square[] squareArray17 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray18 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray19 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[][] squareArray20 = new nl.tudelft.jpacman.board.Square[][] { squareArray17, squareArray18, squareArray19 };
        nl.tudelft.jpacman.board.Board board21 = boardFactory16.createBoard(squareArray20);
        nl.tudelft.jpacman.sprite.PacManSprites pacManSprites22 = null;
        nl.tudelft.jpacman.board.BoardFactory boardFactory23 = new nl.tudelft.jpacman.board.BoardFactory(pacManSprites22);
        nl.tudelft.jpacman.board.Square[] squareArray24 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray25 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray26 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[][] squareArray27 = new nl.tudelft.jpacman.board.Square[][] { squareArray24, squareArray25, squareArray26 };
        nl.tudelft.jpacman.board.Board board28 = boardFactory23.createBoard(squareArray27);
        nl.tudelft.jpacman.sprite.PacManSprites pacManSprites29 = null;
        nl.tudelft.jpacman.board.BoardFactory boardFactory30 = new nl.tudelft.jpacman.board.BoardFactory(pacManSprites29);
        nl.tudelft.jpacman.board.Square[] squareArray31 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray32 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray33 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[][] squareArray34 = new nl.tudelft.jpacman.board.Square[][] { squareArray31, squareArray32, squareArray33 };
        nl.tudelft.jpacman.board.Board board35 = boardFactory30.createBoard(squareArray34);
        nl.tudelft.jpacman.sprite.PacManSprites pacManSprites36 = null;
        nl.tudelft.jpacman.board.BoardFactory boardFactory37 = new nl.tudelft.jpacman.board.BoardFactory(pacManSprites36);
        nl.tudelft.jpacman.board.Square[] squareArray38 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray39 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray40 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[][] squareArray41 = new nl.tudelft.jpacman.board.Square[][] { squareArray38, squareArray39, squareArray40 };
        nl.tudelft.jpacman.board.Board board42 = boardFactory37.createBoard(squareArray41);
        nl.tudelft.jpacman.board.Board board43 = boardFactory30.createBoard(squareArray41);
        nl.tudelft.jpacman.board.Board board44 = boardFactory23.createBoard(squareArray41);
        nl.tudelft.jpacman.board.Board board45 = boardFactory16.createBoard(squareArray41);
        nl.tudelft.jpacman.board.Board board46 = boardFactory1.createBoard(squareArray41);
        nl.tudelft.jpacman.board.Square[] squareArray47 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray48 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[][] squareArray49 = new nl.tudelft.jpacman.board.Square[][] { squareArray47, squareArray48 };
        nl.tudelft.jpacman.board.Board board50 = boardFactory1.createBoard(squareArray49);
        java.lang.Class<?> wildcardClass51 = boardFactory1.getClass();
        org.junit.Assert.assertNotNull(squareArray2);
        org.junit.Assert.assertArrayEquals(squareArray2, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray3);
        org.junit.Assert.assertArrayEquals(squareArray3, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray4);
        org.junit.Assert.assertArrayEquals(squareArray4, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray5);
        org.junit.Assert.assertNotNull(board6);
        org.junit.Assert.assertNotNull(squareArray9);
        org.junit.Assert.assertArrayEquals(squareArray9, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray10);
        org.junit.Assert.assertArrayEquals(squareArray10, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray11);
        org.junit.Assert.assertArrayEquals(squareArray11, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray12);
        org.junit.Assert.assertNotNull(board13);
        org.junit.Assert.assertNotNull(board14);
        org.junit.Assert.assertNotNull(squareArray17);
        org.junit.Assert.assertArrayEquals(squareArray17, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray18);
        org.junit.Assert.assertArrayEquals(squareArray18, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray19);
        org.junit.Assert.assertArrayEquals(squareArray19, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray20);
        org.junit.Assert.assertNotNull(board21);
        org.junit.Assert.assertNotNull(squareArray24);
        org.junit.Assert.assertArrayEquals(squareArray24, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray25);
        org.junit.Assert.assertArrayEquals(squareArray25, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray26);
        org.junit.Assert.assertArrayEquals(squareArray26, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray27);
        org.junit.Assert.assertNotNull(board28);
        org.junit.Assert.assertNotNull(squareArray31);
        org.junit.Assert.assertArrayEquals(squareArray31, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray32);
        org.junit.Assert.assertArrayEquals(squareArray32, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray33);
        org.junit.Assert.assertArrayEquals(squareArray33, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray34);
        org.junit.Assert.assertNotNull(board35);
        org.junit.Assert.assertNotNull(squareArray38);
        org.junit.Assert.assertArrayEquals(squareArray38, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray39);
        org.junit.Assert.assertArrayEquals(squareArray39, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray40);
        org.junit.Assert.assertArrayEquals(squareArray40, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray41);
        org.junit.Assert.assertNotNull(board42);
        org.junit.Assert.assertNotNull(board43);
        org.junit.Assert.assertNotNull(board44);
        org.junit.Assert.assertNotNull(board45);
        org.junit.Assert.assertNotNull(board46);
        org.junit.Assert.assertNotNull(squareArray47);
        org.junit.Assert.assertArrayEquals(squareArray47, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray48);
        org.junit.Assert.assertArrayEquals(squareArray48, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray49);
        org.junit.Assert.assertNotNull(board50);
        org.junit.Assert.assertNotNull(wildcardClass51);
    }

    @Test
    public void test46() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test46");
        nl.tudelft.jpacman.sprite.PacManSprites pacManSprites0 = null;
        nl.tudelft.jpacman.board.BoardFactory boardFactory1 = new nl.tudelft.jpacman.board.BoardFactory(pacManSprites0);
        nl.tudelft.jpacman.sprite.PacManSprites pacManSprites2 = null;
        nl.tudelft.jpacman.board.BoardFactory boardFactory3 = new nl.tudelft.jpacman.board.BoardFactory(pacManSprites2);
        nl.tudelft.jpacman.sprite.PacManSprites pacManSprites4 = null;
        nl.tudelft.jpacman.board.BoardFactory boardFactory5 = new nl.tudelft.jpacman.board.BoardFactory(pacManSprites4);
        nl.tudelft.jpacman.board.Square[] squareArray6 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray7 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray8 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[][] squareArray9 = new nl.tudelft.jpacman.board.Square[][] { squareArray6, squareArray7, squareArray8 };
        nl.tudelft.jpacman.board.Board board10 = boardFactory5.createBoard(squareArray9);
        nl.tudelft.jpacman.board.Board board11 = boardFactory3.createBoard(squareArray9);
        nl.tudelft.jpacman.sprite.PacManSprites pacManSprites12 = null;
        nl.tudelft.jpacman.board.BoardFactory boardFactory13 = new nl.tudelft.jpacman.board.BoardFactory(pacManSprites12);
        nl.tudelft.jpacman.board.Square[] squareArray14 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray15 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray16 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[][] squareArray17 = new nl.tudelft.jpacman.board.Square[][] { squareArray14, squareArray15, squareArray16 };
        nl.tudelft.jpacman.board.Board board18 = boardFactory13.createBoard(squareArray17);
        nl.tudelft.jpacman.sprite.PacManSprites pacManSprites19 = null;
        nl.tudelft.jpacman.board.BoardFactory boardFactory20 = new nl.tudelft.jpacman.board.BoardFactory(pacManSprites19);
        nl.tudelft.jpacman.board.Square[] squareArray21 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray22 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray23 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[][] squareArray24 = new nl.tudelft.jpacman.board.Square[][] { squareArray21, squareArray22, squareArray23 };
        nl.tudelft.jpacman.board.Board board25 = boardFactory20.createBoard(squareArray24);
        nl.tudelft.jpacman.board.Board board26 = boardFactory13.createBoard(squareArray24);
        nl.tudelft.jpacman.board.Board board27 = boardFactory3.createBoard(squareArray24);
        nl.tudelft.jpacman.sprite.PacManSprites pacManSprites28 = null;
        nl.tudelft.jpacman.board.BoardFactory boardFactory29 = new nl.tudelft.jpacman.board.BoardFactory(pacManSprites28);
        nl.tudelft.jpacman.board.Square[] squareArray30 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray31 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray32 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[][] squareArray33 = new nl.tudelft.jpacman.board.Square[][] { squareArray30, squareArray31, squareArray32 };
        nl.tudelft.jpacman.board.Board board34 = boardFactory29.createBoard(squareArray33);
        nl.tudelft.jpacman.board.Square[] squareArray35 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray36 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[][] squareArray37 = new nl.tudelft.jpacman.board.Square[][] { squareArray35, squareArray36 };
        nl.tudelft.jpacman.board.Board board38 = boardFactory29.createBoard(squareArray37);
        nl.tudelft.jpacman.sprite.PacManSprites pacManSprites39 = null;
        nl.tudelft.jpacman.board.BoardFactory boardFactory40 = new nl.tudelft.jpacman.board.BoardFactory(pacManSprites39);
        nl.tudelft.jpacman.board.Square[] squareArray41 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray42 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray43 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[][] squareArray44 = new nl.tudelft.jpacman.board.Square[][] { squareArray41, squareArray42, squareArray43 };
        nl.tudelft.jpacman.board.Board board45 = boardFactory40.createBoard(squareArray44);
        nl.tudelft.jpacman.sprite.PacManSprites pacManSprites46 = null;
        nl.tudelft.jpacman.board.BoardFactory boardFactory47 = new nl.tudelft.jpacman.board.BoardFactory(pacManSprites46);
        nl.tudelft.jpacman.board.Square[] squareArray48 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray49 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray50 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[][] squareArray51 = new nl.tudelft.jpacman.board.Square[][] { squareArray48, squareArray49, squareArray50 };
        nl.tudelft.jpacman.board.Board board52 = boardFactory47.createBoard(squareArray51);
        nl.tudelft.jpacman.board.Board board53 = boardFactory40.createBoard(squareArray51);
        nl.tudelft.jpacman.sprite.PacManSprites pacManSprites54 = null;
        nl.tudelft.jpacman.board.BoardFactory boardFactory55 = new nl.tudelft.jpacman.board.BoardFactory(pacManSprites54);
        nl.tudelft.jpacman.board.Square[] squareArray56 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray57 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray58 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[][] squareArray59 = new nl.tudelft.jpacman.board.Square[][] { squareArray56, squareArray57, squareArray58 };
        nl.tudelft.jpacman.board.Board board60 = boardFactory55.createBoard(squareArray59);
        nl.tudelft.jpacman.sprite.PacManSprites pacManSprites61 = null;
        nl.tudelft.jpacman.board.BoardFactory boardFactory62 = new nl.tudelft.jpacman.board.BoardFactory(pacManSprites61);
        nl.tudelft.jpacman.board.Square[] squareArray63 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray64 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray65 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[][] squareArray66 = new nl.tudelft.jpacman.board.Square[][] { squareArray63, squareArray64, squareArray65 };
        nl.tudelft.jpacman.board.Board board67 = boardFactory62.createBoard(squareArray66);
        nl.tudelft.jpacman.sprite.PacManSprites pacManSprites68 = null;
        nl.tudelft.jpacman.board.BoardFactory boardFactory69 = new nl.tudelft.jpacman.board.BoardFactory(pacManSprites68);
        nl.tudelft.jpacman.board.Square[] squareArray70 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray71 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray72 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[][] squareArray73 = new nl.tudelft.jpacman.board.Square[][] { squareArray70, squareArray71, squareArray72 };
        nl.tudelft.jpacman.board.Board board74 = boardFactory69.createBoard(squareArray73);
        nl.tudelft.jpacman.sprite.PacManSprites pacManSprites75 = null;
        nl.tudelft.jpacman.board.BoardFactory boardFactory76 = new nl.tudelft.jpacman.board.BoardFactory(pacManSprites75);
        nl.tudelft.jpacman.board.Square[] squareArray77 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray78 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray79 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[][] squareArray80 = new nl.tudelft.jpacman.board.Square[][] { squareArray77, squareArray78, squareArray79 };
        nl.tudelft.jpacman.board.Board board81 = boardFactory76.createBoard(squareArray80);
        nl.tudelft.jpacman.board.Board board82 = boardFactory69.createBoard(squareArray80);
        nl.tudelft.jpacman.board.Board board83 = boardFactory62.createBoard(squareArray80);
        nl.tudelft.jpacman.board.Board board84 = boardFactory55.createBoard(squareArray80);
        nl.tudelft.jpacman.board.Board board85 = boardFactory40.createBoard(squareArray80);
        nl.tudelft.jpacman.board.Board board86 = boardFactory29.createBoard(squareArray80);
        nl.tudelft.jpacman.board.Board board87 = boardFactory3.createBoard(squareArray80);
        nl.tudelft.jpacman.board.Board board88 = boardFactory1.createBoard(squareArray80);
        org.junit.Assert.assertNotNull(squareArray6);
        org.junit.Assert.assertArrayEquals(squareArray6, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray7);
        org.junit.Assert.assertArrayEquals(squareArray7, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray8);
        org.junit.Assert.assertArrayEquals(squareArray8, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray9);
        org.junit.Assert.assertNotNull(board10);
        org.junit.Assert.assertNotNull(board11);
        org.junit.Assert.assertNotNull(squareArray14);
        org.junit.Assert.assertArrayEquals(squareArray14, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray15);
        org.junit.Assert.assertArrayEquals(squareArray15, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray16);
        org.junit.Assert.assertArrayEquals(squareArray16, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray17);
        org.junit.Assert.assertNotNull(board18);
        org.junit.Assert.assertNotNull(squareArray21);
        org.junit.Assert.assertArrayEquals(squareArray21, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray22);
        org.junit.Assert.assertArrayEquals(squareArray22, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray23);
        org.junit.Assert.assertArrayEquals(squareArray23, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray24);
        org.junit.Assert.assertNotNull(board25);
        org.junit.Assert.assertNotNull(board26);
        org.junit.Assert.assertNotNull(board27);
        org.junit.Assert.assertNotNull(squareArray30);
        org.junit.Assert.assertArrayEquals(squareArray30, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray31);
        org.junit.Assert.assertArrayEquals(squareArray31, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray32);
        org.junit.Assert.assertArrayEquals(squareArray32, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray33);
        org.junit.Assert.assertNotNull(board34);
        org.junit.Assert.assertNotNull(squareArray35);
        org.junit.Assert.assertArrayEquals(squareArray35, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray36);
        org.junit.Assert.assertArrayEquals(squareArray36, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray37);
        org.junit.Assert.assertNotNull(board38);
        org.junit.Assert.assertNotNull(squareArray41);
        org.junit.Assert.assertArrayEquals(squareArray41, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray42);
        org.junit.Assert.assertArrayEquals(squareArray42, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray43);
        org.junit.Assert.assertArrayEquals(squareArray43, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray44);
        org.junit.Assert.assertNotNull(board45);
        org.junit.Assert.assertNotNull(squareArray48);
        org.junit.Assert.assertArrayEquals(squareArray48, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray49);
        org.junit.Assert.assertArrayEquals(squareArray49, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray50);
        org.junit.Assert.assertArrayEquals(squareArray50, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray51);
        org.junit.Assert.assertNotNull(board52);
        org.junit.Assert.assertNotNull(board53);
        org.junit.Assert.assertNotNull(squareArray56);
        org.junit.Assert.assertArrayEquals(squareArray56, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray57);
        org.junit.Assert.assertArrayEquals(squareArray57, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray58);
        org.junit.Assert.assertArrayEquals(squareArray58, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray59);
        org.junit.Assert.assertNotNull(board60);
        org.junit.Assert.assertNotNull(squareArray63);
        org.junit.Assert.assertArrayEquals(squareArray63, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray64);
        org.junit.Assert.assertArrayEquals(squareArray64, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray65);
        org.junit.Assert.assertArrayEquals(squareArray65, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray66);
        org.junit.Assert.assertNotNull(board67);
        org.junit.Assert.assertNotNull(squareArray70);
        org.junit.Assert.assertArrayEquals(squareArray70, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray71);
        org.junit.Assert.assertArrayEquals(squareArray71, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray72);
        org.junit.Assert.assertArrayEquals(squareArray72, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray73);
        org.junit.Assert.assertNotNull(board74);
        org.junit.Assert.assertNotNull(squareArray77);
        org.junit.Assert.assertArrayEquals(squareArray77, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray78);
        org.junit.Assert.assertArrayEquals(squareArray78, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray79);
        org.junit.Assert.assertArrayEquals(squareArray79, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray80);
        org.junit.Assert.assertNotNull(board81);
        org.junit.Assert.assertNotNull(board82);
        org.junit.Assert.assertNotNull(board83);
        org.junit.Assert.assertNotNull(board84);
        org.junit.Assert.assertNotNull(board85);
        org.junit.Assert.assertNotNull(board86);
        org.junit.Assert.assertNotNull(board87);
        org.junit.Assert.assertNotNull(board88);
    }

    @Test
    public void test47() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test47");
        nl.tudelft.jpacman.sprite.PacManSprites pacManSprites0 = null;
        nl.tudelft.jpacman.board.BoardFactory boardFactory1 = new nl.tudelft.jpacman.board.BoardFactory(pacManSprites0);
        nl.tudelft.jpacman.board.Square[] squareArray2 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray3 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray4 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[][] squareArray5 = new nl.tudelft.jpacman.board.Square[][] { squareArray2, squareArray3, squareArray4 };
        nl.tudelft.jpacman.board.Board board6 = boardFactory1.createBoard(squareArray5);
        nl.tudelft.jpacman.sprite.PacManSprites pacManSprites7 = null;
        nl.tudelft.jpacman.board.BoardFactory boardFactory8 = new nl.tudelft.jpacman.board.BoardFactory(pacManSprites7);
        nl.tudelft.jpacman.board.Square[] squareArray9 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray10 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray11 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[][] squareArray12 = new nl.tudelft.jpacman.board.Square[][] { squareArray9, squareArray10, squareArray11 };
        nl.tudelft.jpacman.board.Board board13 = boardFactory8.createBoard(squareArray12);
        nl.tudelft.jpacman.board.Board board14 = boardFactory1.createBoard(squareArray12);
        nl.tudelft.jpacman.sprite.PacManSprites pacManSprites15 = null;
        nl.tudelft.jpacman.board.BoardFactory boardFactory16 = new nl.tudelft.jpacman.board.BoardFactory(pacManSprites15);
        nl.tudelft.jpacman.board.Square[] squareArray17 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray18 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray19 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[][] squareArray20 = new nl.tudelft.jpacman.board.Square[][] { squareArray17, squareArray18, squareArray19 };
        nl.tudelft.jpacman.board.Board board21 = boardFactory16.createBoard(squareArray20);
        nl.tudelft.jpacman.sprite.PacManSprites pacManSprites22 = null;
        nl.tudelft.jpacman.board.BoardFactory boardFactory23 = new nl.tudelft.jpacman.board.BoardFactory(pacManSprites22);
        nl.tudelft.jpacman.board.Square[] squareArray24 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray25 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray26 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[][] squareArray27 = new nl.tudelft.jpacman.board.Square[][] { squareArray24, squareArray25, squareArray26 };
        nl.tudelft.jpacman.board.Board board28 = boardFactory23.createBoard(squareArray27);
        nl.tudelft.jpacman.sprite.PacManSprites pacManSprites29 = null;
        nl.tudelft.jpacman.board.BoardFactory boardFactory30 = new nl.tudelft.jpacman.board.BoardFactory(pacManSprites29);
        nl.tudelft.jpacman.board.Square[] squareArray31 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray32 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray33 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[][] squareArray34 = new nl.tudelft.jpacman.board.Square[][] { squareArray31, squareArray32, squareArray33 };
        nl.tudelft.jpacman.board.Board board35 = boardFactory30.createBoard(squareArray34);
        nl.tudelft.jpacman.sprite.PacManSprites pacManSprites36 = null;
        nl.tudelft.jpacman.board.BoardFactory boardFactory37 = new nl.tudelft.jpacman.board.BoardFactory(pacManSprites36);
        nl.tudelft.jpacman.board.Square[] squareArray38 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray39 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray40 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[][] squareArray41 = new nl.tudelft.jpacman.board.Square[][] { squareArray38, squareArray39, squareArray40 };
        nl.tudelft.jpacman.board.Board board42 = boardFactory37.createBoard(squareArray41);
        nl.tudelft.jpacman.board.Board board43 = boardFactory30.createBoard(squareArray41);
        nl.tudelft.jpacman.board.Board board44 = boardFactory23.createBoard(squareArray41);
        nl.tudelft.jpacman.board.Board board45 = boardFactory16.createBoard(squareArray41);
        nl.tudelft.jpacman.board.Board board46 = boardFactory1.createBoard(squareArray41);
        java.lang.Class<?> wildcardClass47 = boardFactory1.getClass();
        org.junit.Assert.assertNotNull(squareArray2);
        org.junit.Assert.assertArrayEquals(squareArray2, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray3);
        org.junit.Assert.assertArrayEquals(squareArray3, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray4);
        org.junit.Assert.assertArrayEquals(squareArray4, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray5);
        org.junit.Assert.assertNotNull(board6);
        org.junit.Assert.assertNotNull(squareArray9);
        org.junit.Assert.assertArrayEquals(squareArray9, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray10);
        org.junit.Assert.assertArrayEquals(squareArray10, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray11);
        org.junit.Assert.assertArrayEquals(squareArray11, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray12);
        org.junit.Assert.assertNotNull(board13);
        org.junit.Assert.assertNotNull(board14);
        org.junit.Assert.assertNotNull(squareArray17);
        org.junit.Assert.assertArrayEquals(squareArray17, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray18);
        org.junit.Assert.assertArrayEquals(squareArray18, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray19);
        org.junit.Assert.assertArrayEquals(squareArray19, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray20);
        org.junit.Assert.assertNotNull(board21);
        org.junit.Assert.assertNotNull(squareArray24);
        org.junit.Assert.assertArrayEquals(squareArray24, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray25);
        org.junit.Assert.assertArrayEquals(squareArray25, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray26);
        org.junit.Assert.assertArrayEquals(squareArray26, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray27);
        org.junit.Assert.assertNotNull(board28);
        org.junit.Assert.assertNotNull(squareArray31);
        org.junit.Assert.assertArrayEquals(squareArray31, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray32);
        org.junit.Assert.assertArrayEquals(squareArray32, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray33);
        org.junit.Assert.assertArrayEquals(squareArray33, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray34);
        org.junit.Assert.assertNotNull(board35);
        org.junit.Assert.assertNotNull(squareArray38);
        org.junit.Assert.assertArrayEquals(squareArray38, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray39);
        org.junit.Assert.assertArrayEquals(squareArray39, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray40);
        org.junit.Assert.assertArrayEquals(squareArray40, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray41);
        org.junit.Assert.assertNotNull(board42);
        org.junit.Assert.assertNotNull(board43);
        org.junit.Assert.assertNotNull(board44);
        org.junit.Assert.assertNotNull(board45);
        org.junit.Assert.assertNotNull(board46);
        org.junit.Assert.assertNotNull(wildcardClass47);
    }

    @Test
    public void test48() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test48");
        nl.tudelft.jpacman.sprite.PacManSprites pacManSprites0 = null;
        nl.tudelft.jpacman.board.BoardFactory boardFactory1 = new nl.tudelft.jpacman.board.BoardFactory(pacManSprites0);
        nl.tudelft.jpacman.board.Square[] squareArray2 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray3 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray4 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[][] squareArray5 = new nl.tudelft.jpacman.board.Square[][] { squareArray2, squareArray3, squareArray4 };
        nl.tudelft.jpacman.board.Board board6 = boardFactory1.createBoard(squareArray5);
        nl.tudelft.jpacman.sprite.PacManSprites pacManSprites7 = null;
        nl.tudelft.jpacman.board.BoardFactory boardFactory8 = new nl.tudelft.jpacman.board.BoardFactory(pacManSprites7);
        nl.tudelft.jpacman.board.Square[] squareArray9 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray10 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray11 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[][] squareArray12 = new nl.tudelft.jpacman.board.Square[][] { squareArray9, squareArray10, squareArray11 };
        nl.tudelft.jpacman.board.Board board13 = boardFactory8.createBoard(squareArray12);
        nl.tudelft.jpacman.sprite.PacManSprites pacManSprites14 = null;
        nl.tudelft.jpacman.board.BoardFactory boardFactory15 = new nl.tudelft.jpacman.board.BoardFactory(pacManSprites14);
        nl.tudelft.jpacman.board.Square[] squareArray16 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray17 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray18 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[][] squareArray19 = new nl.tudelft.jpacman.board.Square[][] { squareArray16, squareArray17, squareArray18 };
        nl.tudelft.jpacman.board.Board board20 = boardFactory15.createBoard(squareArray19);
        nl.tudelft.jpacman.board.Board board21 = boardFactory8.createBoard(squareArray19);
        nl.tudelft.jpacman.board.Board board22 = boardFactory1.createBoard(squareArray19);
        nl.tudelft.jpacman.sprite.PacManSprites pacManSprites23 = null;
        nl.tudelft.jpacman.board.BoardFactory boardFactory24 = new nl.tudelft.jpacman.board.BoardFactory(pacManSprites23);
        nl.tudelft.jpacman.board.Square[] squareArray25 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray26 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray27 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[][] squareArray28 = new nl.tudelft.jpacman.board.Square[][] { squareArray25, squareArray26, squareArray27 };
        nl.tudelft.jpacman.board.Board board29 = boardFactory24.createBoard(squareArray28);
        nl.tudelft.jpacman.sprite.PacManSprites pacManSprites30 = null;
        nl.tudelft.jpacman.board.BoardFactory boardFactory31 = new nl.tudelft.jpacman.board.BoardFactory(pacManSprites30);
        nl.tudelft.jpacman.board.Square[] squareArray32 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray33 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray34 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[][] squareArray35 = new nl.tudelft.jpacman.board.Square[][] { squareArray32, squareArray33, squareArray34 };
        nl.tudelft.jpacman.board.Board board36 = boardFactory31.createBoard(squareArray35);
        nl.tudelft.jpacman.sprite.PacManSprites pacManSprites37 = null;
        nl.tudelft.jpacman.board.BoardFactory boardFactory38 = new nl.tudelft.jpacman.board.BoardFactory(pacManSprites37);
        nl.tudelft.jpacman.board.Square[] squareArray39 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray40 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray41 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[][] squareArray42 = new nl.tudelft.jpacman.board.Square[][] { squareArray39, squareArray40, squareArray41 };
        nl.tudelft.jpacman.board.Board board43 = boardFactory38.createBoard(squareArray42);
        nl.tudelft.jpacman.sprite.PacManSprites pacManSprites44 = null;
        nl.tudelft.jpacman.board.BoardFactory boardFactory45 = new nl.tudelft.jpacman.board.BoardFactory(pacManSprites44);
        nl.tudelft.jpacman.board.Square[] squareArray46 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray47 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[] squareArray48 = new nl.tudelft.jpacman.board.Square[] {};
        nl.tudelft.jpacman.board.Square[][] squareArray49 = new nl.tudelft.jpacman.board.Square[][] { squareArray46, squareArray47, squareArray48 };
        nl.tudelft.jpacman.board.Board board50 = boardFactory45.createBoard(squareArray49);
        nl.tudelft.jpacman.board.Board board51 = boardFactory38.createBoard(squareArray49);
        nl.tudelft.jpacman.board.Board board52 = boardFactory31.createBoard(squareArray49);
        nl.tudelft.jpacman.board.Board board53 = boardFactory24.createBoard(squareArray49);
        nl.tudelft.jpacman.board.Board board54 = boardFactory1.createBoard(squareArray49);
        java.lang.Class<?> wildcardClass55 = boardFactory1.getClass();
        org.junit.Assert.assertNotNull(squareArray2);
        org.junit.Assert.assertArrayEquals(squareArray2, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray3);
        org.junit.Assert.assertArrayEquals(squareArray3, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray4);
        org.junit.Assert.assertArrayEquals(squareArray4, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray5);
        org.junit.Assert.assertNotNull(board6);
        org.junit.Assert.assertNotNull(squareArray9);
        org.junit.Assert.assertArrayEquals(squareArray9, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray10);
        org.junit.Assert.assertArrayEquals(squareArray10, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray11);
        org.junit.Assert.assertArrayEquals(squareArray11, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray12);
        org.junit.Assert.assertNotNull(board13);
        org.junit.Assert.assertNotNull(squareArray16);
        org.junit.Assert.assertArrayEquals(squareArray16, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray17);
        org.junit.Assert.assertArrayEquals(squareArray17, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray18);
        org.junit.Assert.assertArrayEquals(squareArray18, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray19);
        org.junit.Assert.assertNotNull(board20);
        org.junit.Assert.assertNotNull(board21);
        org.junit.Assert.assertNotNull(board22);
        org.junit.Assert.assertNotNull(squareArray25);
        org.junit.Assert.assertArrayEquals(squareArray25, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray26);
        org.junit.Assert.assertArrayEquals(squareArray26, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray27);
        org.junit.Assert.assertArrayEquals(squareArray27, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray28);
        org.junit.Assert.assertNotNull(board29);
        org.junit.Assert.assertNotNull(squareArray32);
        org.junit.Assert.assertArrayEquals(squareArray32, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray33);
        org.junit.Assert.assertArrayEquals(squareArray33, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray34);
        org.junit.Assert.assertArrayEquals(squareArray34, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray35);
        org.junit.Assert.assertNotNull(board36);
        org.junit.Assert.assertNotNull(squareArray39);
        org.junit.Assert.assertArrayEquals(squareArray39, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray40);
        org.junit.Assert.assertArrayEquals(squareArray40, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray41);
        org.junit.Assert.assertArrayEquals(squareArray41, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray42);
        org.junit.Assert.assertNotNull(board43);
        org.junit.Assert.assertNotNull(squareArray46);
        org.junit.Assert.assertArrayEquals(squareArray46, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray47);
        org.junit.Assert.assertArrayEquals(squareArray47, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray48);
        org.junit.Assert.assertArrayEquals(squareArray48, new nl.tudelft.jpacman.board.Square[] {});
        org.junit.Assert.assertNotNull(squareArray49);
        org.junit.Assert.assertNotNull(board50);
        org.junit.Assert.assertNotNull(board51);
        org.junit.Assert.assertNotNull(board52);
        org.junit.Assert.assertNotNull(board53);
        org.junit.Assert.assertNotNull(board54);
        org.junit.Assert.assertNotNull(wildcardClass55);
    }
}

